{"version":3,"file":"component---src-pages-contributors-js-d40d02213832f657cfa7.js","mappings":"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","sources":["webpack://progmiscon-src/./src/pages/contributors.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"sourcesContent":["import React from \"react\";\nimport { Container, Card, Header, Icon } from \"semantic-ui-react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst ContributorsPage = ({ data }) => (\n  <Layout>\n    <SEO title='Contributors' />\n    <Container style={{ marginTop: \"100px\", marginBottom: \"100px\" }}>\n      <Header as='h1' dividing>\n        <Icon name='lightbulb' />\n        <Header.Content>\n          Contributors\n          <Header.Subheader>\n            Who is behind this collection of misconceptions?\n          </Header.Subheader>\n        </Header.Content>\n      </Header>\n      <p>\n        This collection of programming misconceptions was created and is\n        maintained by the following contributors:\n      </p>\n      <Card.Group className='four'>\n        {data.allContributorsYaml.edges.map(({ node }, index) => (\n          <Card key={index} as={Link} to={node.slug}>\n            {node.image ? (\n              <GatsbyImage\n                image={node.image.childImageSharp.gatsbyImageData}\n                className='ui image'\n                alt={node.name}\n              />\n            ) : null}\n            <Card.Content>\n              <Card.Header>{node.name}</Card.Header>\n              <Card.Meta>\n                <span className='date'>{node.org}</span>\n              </Card.Meta>\n              <Card.Description>{node.role}</Card.Description>\n            </Card.Content>\n          </Card>\n        ))}\n      </Card.Group>\n    </Container>\n  </Layout>\n);\n\nexport default ContributorsPage;\n\nexport const query = graphql`\n  {\n    allContributorsYaml {\n      edges {\n        node {\n          slug\n          name\n          org\n          role\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    description = props.description,\n    extra = props.extra,\n    header = props.header,\n    meta = props.meta,\n    textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n    children = props.children,\n    className = props.className,\n    content = props.content,\n    doubling = props.doubling,\n    items = props.items,\n    itemsPerRow = props.itemsPerRow,\n    stackable = props.stackable,\n    textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  var itemsJSX = _map(items, function (item) {\n    var _item$key;\n    var key = (_item$key = item.key) != null ? _item$key : [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n  function Card() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n    return _this;\n  }\n  var _proto = Card.prototype;\n  _proto.render = function render() {\n    var _this$props = this.props,\n      centered = _this$props.centered,\n      children = _this$props.children,\n      className = _this$props.className,\n      color = _this$props.color,\n      content = _this$props.content,\n      description = _this$props.description,\n      extra = _this$props.extra,\n      fluid = _this$props.fluid,\n      header = _this$props.header,\n      href = _this$props.href,\n      image = _this$props.image,\n      link = _this$props.link,\n      meta = _this$props.meta,\n      onClick = _this$props.onClick,\n      raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n  return Card;\n}(Component);\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;"],"names":["_ref","data","React","Layout","SEO","title","Container","style","marginTop","marginBottom","Header","as","dividing","Icon","name","Content","Subheader","Card","Group","className","allContributorsYaml","edges","map","_ref2","index","node","key","Link","to","slug","image","GatsbyImage","childImageSharp","gatsbyImageData","alt","Meta","org","Description","role","CardMeta","props","children","content","textAlign","classes","rest","ElementType","handledProps","CardDescription","CardContent","description","extra","header","meta","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","item","_item$key","join","CardHeader","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","onClick","prototype","render","_this$props","color","fluid","href","link","raised","create","defaultProps","ui","wrapped","Component"],"sourceRoot":""}