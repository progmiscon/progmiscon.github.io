{"version":3,"file":"component---src-pages-overview-symptoms-js-f3416113b16352b21c34.js","mappings":"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","sources":["webpack://progmiscon-src/./src/pages/overview/symptoms.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js"],"sourcesContent":["import React from \"react\";\nimport { Header, Icon, Breadcrumb } from \"semantic-ui-react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nconst SymptomOverviewPage = args => {\n  const misconceptions = args.data.misconceptions.nodes;\n  const bgcolor = i => {\n    return \"hsl(0, 0%, \" + (100 - ((i + 1) % 2) * 5) + \"%)\";\n  };\n  return (\n    <Layout>\n      <SEO title='Symptom Overview' />\n      <div\n        style={{\n          marginLeft: \"10px\",\n          marginTop: \"50px\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <Breadcrumb>\n          <Breadcrumb.Section link as={Link} to='/'>\n            Home\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider icon='right chevron' />\n          <Breadcrumb.Section link as={Link} to='/overview'>\n            Overview\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider icon='right chevron' />\n          <Breadcrumb.Section active>Symptoms</Breadcrumb.Section>\n        </Breadcrumb>\n\n        <Header as='h1' dividing>\n          <Icon name='lightbulb' />\n          <Header.Content>\n            Symptoms\n            <Header.Subheader>\n              {misconceptions.length} Misconceptions,{\" \"}\n              {\n                misconceptions.filter(\n                  mc =>\n                    mc.fields.symptoms && mc.fields.symptoms.childMdx.excerpt\n                ).length\n              }{\" \"}\n              with Symptoms\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n        <table>\n          <thead>\n            <tr>\n              <th>Misconception</th>\n              <th>Language</th>\n              <th>Status</th>\n              <th>Symptom</th>\n            </tr>\n          </thead>\n          <tbody>\n            {misconceptions.map((misconception, mi) => (\n              <tr\n                key={misconception.fields.pl + \"/\" + misconception.fields.name}\n              >\n                <td style={{ backgroundColor: bgcolor(mi) }}>\n                  <Link\n                    to={`/misconceptions/${misconception.fields.pl}/${misconception.fields.name}/`}\n                  >\n                    {misconception.fields.name}\n                  </Link>\n                </td>\n                <td style={{ backgroundColor: bgcolor(mi) }}>\n                  {misconception.fields.pl}\n                </td>\n                <td style={{ backgroundColor: bgcolor(mi) }}>\n                  {misconception.frontmatter.status === \"draft\" ? (\n                    <span style={{ color: \"#e0e0e0\" }}>draft</span>\n                  ) : (\n                    misconception.frontmatter.status\n                  )}\n                </td>\n                <td style={{ backgroundColor: bgcolor(mi) }}>\n                  {misconception.fields.symptoms\n                    ? misconception.fields.symptoms.childMdx.excerpt\n                    : null}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default SymptomOverviewPage;\n\nexport const pageQuery = graphql`\n  query {\n    misconceptions: allMdx(\n      filter: {\n        fileAbsolutePath: { glob: \"**/src/data/misconceptions/**/index.md\" }\n      }\n      sort: { fields: slug, order: ASC }\n    ) {\n      nodes {\n        fields {\n          slug\n          name\n          pl\n          symptoms {\n            childMdx {\n              excerpt(pruneLength: 100, truncate: true)\n            }\n          }\n        }\n        frontmatter {\n          status\n          concepts\n          shortDescription\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash-es/isNil\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A divider sub-component for Breadcrumb component.\n */\n\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    icon = props.icon;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(BreadcrumbDivider, props);\n  var ElementType = getElementType(BreadcrumbDivider, props);\n  if (!_isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: _extends({}, rest, {\n        className: classes\n      }),\n      autoGenerateKey: false\n    });\n  }\n  if (!_isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? '/' : children);\n}\nBreadcrumbDivider.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {\n  return {\n    icon: icon\n  };\n});\nexport default BreadcrumbDivider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType, useKeyOnly } from '../../lib';\n/**\n * A section sub-component for Breadcrumb component.\n */\n\nvar BreadcrumbSection = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(BreadcrumbSection, _Component);\n  function BreadcrumbSection() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.computeElementType = function () {\n      var _this$props = _this.props,\n        link = _this$props.link,\n        onClick = _this$props.onClick;\n      if (link || onClick) return 'a';\n    };\n    _this.handleClick = function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    };\n    return _this;\n  }\n  var _proto = BreadcrumbSection.prototype;\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      active = _this$props2.active,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      content = _this$props2.content,\n      href = _this$props2.href;\n    var classes = cx(useKeyOnly(active, 'active'), 'section', className);\n    var rest = getUnhandledProps(BreadcrumbSection, this.props);\n    var ElementType = getElementType(BreadcrumbSection, this.props, this.computeElementType);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), childrenUtils.isNil(children) ? content : children);\n  };\n  return BreadcrumbSection;\n}(Component);\nBreadcrumbSection.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"href\", \"link\", \"onClick\"];\nexport { BreadcrumbSection as default };\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, function (content) {\n  return {\n    content: content,\n    link: true\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _each from \"lodash-es/each\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\n\nfunction Breadcrumb(props) {\n  var children = props.children,\n    className = props.className,\n    divider = props.divider,\n    icon = props.icon,\n    sections = props.sections,\n    size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  var childElements = [];\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement); // divider\n\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + \"_divider\" || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\nBreadcrumb.handledProps = [\"as\", \"children\", \"className\", \"divider\", \"icon\", \"sections\", \"size\"];\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;"],"names":["args","misconceptions","data","nodes","bgcolor","i","React","Layout","SEO","title","style","marginLeft","marginTop","marginBottom","Breadcrumb","Section","link","as","Link","to","Divider","icon","active","Header","dividing","Icon","name","Content","Subheader","length","filter","mc","fields","symptoms","childMdx","excerpt","map","misconception","mi","key","pl","backgroundColor","frontmatter","status","color","BreadcrumbDivider","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","create","defaultProps","autoGenerateKey","handledProps","BreadcrumbSection","_Component","_this","_len","arguments","Array","_key","call","apply","this","concat","computeElementType","_this$props","onClick","handleClick","e","prototype","render","_this$props2","href","Component","divider","sections","size","childElements","section","index","breadcrumbElement","push"],"sourceRoot":""}