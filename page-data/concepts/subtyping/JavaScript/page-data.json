{
    "componentChunkName": "component---src-templates-concept-js",
    "path": "/concepts/subtyping/JavaScript/",
    "result": {"data":{"concept":{"slug":"concepts/Subtyping","frontmatter":{"wikipedia":"Subtyping","shortDescription":"A value of a subtype can be substituted for a value of a supertype.","relatedConcepts":["Type","Polymorphism","Inheritance"],"text":null}},"misconceptions":{"totalCount":11,"edges":[{"node":{"fields":{"slug":"/misconceptions/Java/CallNotStaticallyChecked/","name":"CallNotStaticallyChecked","pl":"Java"},"frontmatter":{"shortDescription":"A method invocation on a reference of a type that does not have that method won't compile"}}},{"node":{"fields":{"slug":"/misconceptions/Java/ConcreteClassOnlyImplementClassAbstract/","name":"ConcreteClassOnlyImplementClassAbstract","pl":"Java"},"frontmatter":{"shortDescription":"A concrete class only needs to implement those abstract methods it inherits from abstract superclasses"}}},{"node":{"fields":{"slug":"/misconceptions/Java/ConcreteClassOnlyImplementDirectAbstract/","name":"ConcreteClassOnlyImplementDirectAbstract","pl":"Java"},"frontmatter":{"shortDescription":"A concrete class only needs to implement abstract methods declared in its direct supertypes"}}},{"node":{"fields":{"slug":"/misconceptions/Java/ConcreteClassOnlyImplementInterfaceAbstract/","name":"ConcreteClassOnlyImplementInterfaceAbstract","pl":"Java"},"frontmatter":{"shortDescription":"A concrete class only needs to implement those abstract methods it inherits from interfaces"}}},{"node":{"fields":{"slug":"/misconceptions/Java/ExceptionRoot/","name":"ExceptionRoot","pl":"Java"},"frontmatter":{"shortDescription":"Exception is the top-most exception class"}}},{"node":{"fields":{"slug":"/misconceptions/Java/InterfaceExtendClass/","name":"InterfaceExtendClass","pl":"Java"},"frontmatter":{"shortDescription":"An interface can extend a class"}}},{"node":{"fields":{"slug":"/misconceptions/Java/MultipleSuperclasses/","name":"MultipleSuperclasses","pl":"Java"},"frontmatter":{"shortDescription":"A class can have multiple superclasses"}}},{"node":{"fields":{"slug":"/misconceptions/Java/RuntimeExceptionChecked/","name":"RuntimeExceptionChecked","pl":"Java"},"frontmatter":{"shortDescription":"RuntimeExceptions are checked exceptions"}}},{"node":{"fields":{"slug":"/misconceptions/Java/StaticDispatch/","name":"StaticDispatch","pl":"Java"},"frontmatter":{"shortDescription":"The method to be called is determined by the static type"}}},{"node":{"fields":{"slug":"/misconceptions/Java/SubtypeCompatibleWithSupertype/","name":"SubtypeCompatibleWithSupertype","pl":"Java"},"frontmatter":{"shortDescription":"A variable of a subtype can reference an object of a supertype"}}},{"node":{"fields":{"slug":"/misconceptions/Java/SupertypeIncompatibleWithSubtype/","name":"SupertypeIncompatibleWithSubtype","pl":"Java"},"frontmatter":{"shortDescription":"A variable of a supertype cannot reference an object of a subtype"}}}]},"pls":{"edges":[{"node":{"frontmatter":{"id":"Java"}}},{"node":{"frontmatter":{"id":"JavaScript"}}},{"node":{"frontmatter":{"id":"Python"}}},{"node":{"frontmatter":{"id":"Scratch"}}}]},"textbooks":{"nodes":[{"frontmatter":{"title":"Category Theory for Programmers","home":"https://github.com/hmemcpy/milewski-ctfp-pdf","author":"Bartosz Milewski"},"parent":{"name":"ctp"}},{"frontmatter":{"title":"Compilers: Principles, Techniques, and Tools","home":"https://suif.stanford.edu/dragonbook/","author":"Alfred Aho, Ravi Sethi, Jeffrey Ullman, Monica S. Lam"},"parent":{"name":"dragon"}},{"frontmatter":{"title":"nLab","home":"https://ncatlab.org/nlab/show/HomePage","author":"David Corfield, David Roberts, Mike Shulman, Toby Bartels, Todd Trimble"},"parent":{"name":"nlab"}},{"frontmatter":{"title":"Objects-First with Java","home":"https://www.bluej.org/objects-first/","author":"David J. Barnes & Michael Kölling"},"parent":{"name":"ofj6"}},{"frontmatter":{"title":"Sprechen Sie Java","home":"https://ssw.jku.at/Misc/JavaBuch/","author":"Hanspeter Mössenböck"},"parent":{"name":"ssj4"}},{"frontmatter":{"title":"Types and Programming Languages","home":"https://www.cis.upenn.edu/~bcpierce/tapl/","author":"Benjamin C. Pierce"},"parent":{"name":"tapl"}}]}},"pageContext":{"concept":"Subtyping","slug":"concepts/Subtyping","wikipediaSummary":"","pl":"JavaScript"}},
    "staticQueryHashes": ["3649515864","4169798128"]}