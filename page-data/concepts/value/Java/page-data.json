{
    "componentChunkName": "component---src-templates-concept-js",
    "path": "/concepts/value/Java/",
    "result": {"data":{"concept":{"slug":"concepts/Value","frontmatter":{"wikipedia":"Value_(computer_science)","shortDescription":"A value is data and may be the result of evaluating an expression or the contents of a variable.","relatedConcepts":["Value","Evaluation","Variable"],"text":[{"id":"tapl","sections":["3.5"]}]}},"misconceptions":{"totalCount":26,"edges":[{"node":{"fields":{"slug":"/misconceptions/Java/EqualityOperatorComparesObjectsValues/","name":"EqualityOperatorComparesObjectsValues","pl":"Java"},"frontmatter":{"shortDescription":"o==p compares the objects referred to by variables o and p"}}},{"node":{"fields":{"slug":"/misconceptions/Java/EqualsComparesReferences/","name":"EqualsComparesReferences","pl":"Java"},"frontmatter":{"shortDescription":"o.equals(p) compares the references stored in the variables o and p"}}},{"node":{"fields":{"slug":"/misconceptions/Java/ExpressionsDynamicallyTyped/","name":"ExpressionsDynamicallyTyped","pl":"Java"},"frontmatter":{"shortDescription":"One has to evaluate an expression to determine its type"}}},{"node":{"fields":{"slug":"/misconceptions/Java/LocalVariablesAutoInitialized/","name":"LocalVariablesAutoInitialized","pl":"Java"},"frontmatter":{"shortDescription":"Local variables are automatically initialized"}}},{"node":{"fields":{"slug":"/misconceptions/Java/MultiValueVariable/","name":"MultiValueVariable","pl":"Java"},"frontmatter":{"shortDescription":"A variable can contain more than one value"}}},{"node":{"fields":{"slug":"/misconceptions/Java/MustInitializeFieldInConstructor/","name":"MustInitializeFieldInConstructor","pl":"Java"},"frontmatter":{"shortDescription":"Constructors must assign values to all fields"}}},{"node":{"fields":{"slug":"/misconceptions/Java/NoCastIfSameSize/","name":"NoCastIfSameSize","pl":"Java"},"frontmatter":{"shortDescription":"If a variable is at least as big (bit-width) as a value, then no cast is needed to a assign the value to the variable"}}},{"node":{"fields":{"slug":"/misconceptions/Java/NullIsObject/","name":"NullIsObject","pl":"Java"},"frontmatter":{"shortDescription":"null is an object"}}},{"node":{"fields":{"slug":"/misconceptions/Java/PrimitiveIsObject/","name":"PrimitiveIsObject","pl":"Java"},"frontmatter":{"shortDescription":"Primitive values are heap objects"}}},{"node":{"fields":{"slug":"/misconceptions/Java/PrimitiveVariablesDynamicallyTyped/","name":"PrimitiveVariablesDynamicallyTyped","pl":"Java"},"frontmatter":{"shortDescription":"The type of a primitive variable depends on its value"}}},{"node":{"fields":{"slug":"/misconceptions/Java/UseOfSelfTypeImpliesRecursiveType/","name":"UseOfSelfTypeImpliesRecursiveType","pl":"Java"},"frontmatter":{"shortDescription":"If a class has a method that has a local variable, parameter, or return value with the class as its type, the class is a recursive type"}}},{"node":{"fields":{"slug":"/misconceptions/Java/VoidMethodReturnsValue/","name":"VoidMethodReturnsValue","pl":"Java"},"frontmatter":{"shortDescription":"A method with void return type can return a value"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/CallbackParametersInCaller/","name":"CallbackParametersInCaller","pl":"JavaScript"},"frontmatter":{"shortDescription":"Parameters of a callback function may be written as parameters of the caller function"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/EqualityOperatorComparesObjectsValues/","name":"EqualityOperatorComparesObjectsValues","pl":"JavaScript"},"frontmatter":{"shortDescription":"The equality operator compares two objects' values"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/EqualityOperatorComparesOnlyTypes/","name":"EqualityOperatorComparesOnlyTypes","pl":"JavaScript"},"frontmatter":{"shortDescription":"The equality operator '==' compares only the types of the operands"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/FunctionAsValueWithParentheses/","name":"FunctionAsValueWithParentheses","pl":"JavaScript"},"frontmatter":{"shortDescription":"To use a function as a value, one needs to have parentheses after its name"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/NoReturnValue/","name":"NoReturnValue","pl":"JavaScript"},"frontmatter":{"shortDescription":"Functions without return statements return no value at all"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/NullAndUndefinedAreTheSame/","name":"NullAndUndefinedAreTheSame","pl":"JavaScript"},"frontmatter":{"shortDescription":"The values null and undefined are the same"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/NullIsObject/","name":"NullIsObject","pl":"JavaScript"},"frontmatter":{"shortDescription":"null is an object"}}},{"node":{"fields":{"slug":"/misconceptions/JavaScript/TypeofNullIsNull/","name":"TypeofNullIsNull","pl":"JavaScript"},"frontmatter":{"shortDescription":"The value null is of type 'null'"}}},{"node":{"fields":{"slug":"/misconceptions/Python/AssignmentCopiesObject/","name":"AssignmentCopiesObject","pl":"Python"},"frontmatter":{"shortDescription":"Assignment copies the object"}}},{"node":{"fields":{"slug":"/misconceptions/Python/MultipleValuesReturn/","name":"MultipleValuesReturn","pl":"Python"},"frontmatter":{"shortDescription":"Functions can return multiple values"}}},{"node":{"fields":{"slug":"/misconceptions/Python/VariablesHoldExpressions/","name":"VariablesHoldExpressions","pl":"Python"},"frontmatter":{"shortDescription":"= stores an expression: it stores a reference to the expression in a variable"}}},{"node":{"fields":{"slug":"/misconceptions/Python/VariablesHoldObjects/","name":"VariablesHoldObjects","pl":"Python"},"frontmatter":{"shortDescription":"A variable contains a whole object"}}},{"node":{"fields":{"slug":"/misconceptions/Scratch/EqualityOperatorComparesListIdentities/","name":"EqualityOperatorComparesListIdentities","pl":"Scratch"},"frontmatter":{"shortDescription":"(list a) = (list b) compares the identities of list a and list b"}}},{"node":{"fields":{"slug":"/misconceptions/Scratch/EqualityOperatorComparesOnlyTypes/","name":"EqualityOperatorComparesOnlyTypes","pl":"Scratch"},"frontmatter":{"shortDescription":"() = () compares only the types of its operands"}}}]},"pls":{"edges":[{"node":{"frontmatter":{"id":"Java"}}},{"node":{"frontmatter":{"id":"JavaScript"}}},{"node":{"frontmatter":{"id":"Python"}}},{"node":{"frontmatter":{"id":"Scratch"}}}]},"textbooks":{"nodes":[{"frontmatter":{"title":"Category Theory for Programmers","home":"https://github.com/hmemcpy/milewski-ctfp-pdf","author":"Bartosz Milewski"},"parent":{"name":"ctp"}},{"frontmatter":{"title":"Compilers: Principles, Techniques, and Tools","home":"https://suif.stanford.edu/dragonbook/","author":"Alfred Aho, Ravi Sethi, Jeffrey Ullman, Monica S. Lam"},"parent":{"name":"dragon"}},{"frontmatter":{"title":"nLab","home":"https://ncatlab.org/nlab/show/HomePage","author":"David Corfield, David Roberts, Mike Shulman, Toby Bartels, Todd Trimble"},"parent":{"name":"nlab"}},{"frontmatter":{"title":"Objects-First with Java","home":"https://www.bluej.org/objects-first/","author":"David J. Barnes & Michael Kölling"},"parent":{"name":"ofj6"}},{"frontmatter":{"title":"Sprechen Sie Java","home":"https://ssw.jku.at/Misc/JavaBuch/","author":"Hanspeter Mössenböck"},"parent":{"name":"ssj4"}},{"frontmatter":{"title":"Types and Programming Languages","home":"https://www.cis.upenn.edu/~bcpierce/tapl/","author":"Benjamin C. Pierce"},"parent":{"name":"tapl"}}]}},"pageContext":{"concept":"Value","slug":"concepts/Value","wikipediaSummary":"","pl":"Java"}},
    "staticQueryHashes": ["3649515864","4169798128"]}