{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/ConcreteClassMustOverride/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"draft\",\n  \"shortDescription\": \"A concrete class needs to implement all abstract methods and override all concrete methods declared in its abstract superclasses\",\n  \"shortCorrection\": \"A concrete class does not necessarily need to override concrete methods declared in its abstract superclasses\",\n  \"concepts\": [\"Class\", \"Method\", \"Inheritance\"],\n  \"related\": null,\n  \"inOtherPl\": null,\n  \"spec\": [{\n    \"id\": \"jls13\",\n    \"sections\": [\"8.1.1.1\", \"8.4.3.1\"]\n  }],\n  \"plVersion\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A concrete class that extends an abstract superclass (which itself again might extend another abstract superclass, and so on), needs to implement absolutely all methods declared in those abstract superclasses,\\nincluding the ones already implemented.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: draft\nshortDescription: \"A concrete class needs to implement all abstract methods and override all concrete methods declared in its abstract superclasses\"\nshortCorrection: \"A concrete class does not necessarily need to override concrete methods declared in its abstract superclasses\"\nconcepts:\n  - Class\n  - Method\n  - Inheritance\nrelated:\n# - id: LiteralNoExpression\n#   relation: Special case\ninOtherPl:\n# - pl: JavaScript\n#   id: ConcreteClassMustOverride\n# - pl: Python\n#   id: ConcreteClassMustOverride\nspec:\n  - id: jls13\n    sections: [\"8.1.1.1\", \"8.4.3.1\"]\nplVersion:\n# from: jls8\n# to: jls14\n---\n\nA concrete class that extends an abstract superclass (which itself again might extend another abstract superclass, and so on), needs to implement absolutely all methods declared in those abstract superclasses,\nincluding the ones already implemented.\n","fields":{"name":"ConcreteClassMustOverride","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg","srcSet":"/static/40c6db1530671c3291cbfc14f247de04/37bba/default-misconception-image.jpg 750w,\n/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/40c6db1530671c3291cbfc14f247de04/a66aa/default-misconception-image.webp 750w,\n/static/40c6db1530671c3291cbfc14f247de04/b2a35/default-misconception-image.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/40c6db1530671c3291cbfc14f247de04/f7f54/default-misconception-image.jpg","height":512}}}},"frontmatter":{"shortDescription":"A concrete class needs to implement all abstract methods and override all concrete methods declared in its abstract superclasses","shortCorrection":"A concrete class does not necessarily need to override concrete methods declared in its abstract superclasses","status":"draft","concepts":["Class","Method","Inheritance"]}}},"pageContext":{"slug":"/misconceptions/Java/ConcreteClassMustOverride/"}},
    "staticQueryHashes": ["4169798128"]}