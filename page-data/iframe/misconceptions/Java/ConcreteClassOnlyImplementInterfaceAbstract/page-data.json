{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/ConcreteClassOnlyImplementInterfaceAbstract/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"draft\",\n  \"shortDescription\": \"A concrete class only needs to implement those abstract methods it inherits from interfaces\",\n  \"shortCorrection\": \"A concrete class needs to implement both the abstract methods it inherits from interfaces and those declared in the abstract class it extends\",\n  \"concepts\": [\"Class\", \"Method\", \"Subtyping\", \"Inheritance\"],\n  \"related\": [{\n    \"id\": \"ConcreteClassOnlyImplementClassAbstract\",\n    \"relation\": \"Dual\"\n  }],\n  \"inOtherPl\": null,\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"8.1.4\"]\n  }],\n  \"plVersion\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A concrete class that implements interfaces and extends an abstract class only needs to implement those methods declared in the interfaces it implements. There is no need for it to implement the abstract methods declared in the abstract class it extends.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: draft\nshortDescription: \"A concrete class only needs to implement those abstract methods it inherits from interfaces\"\nshortCorrection: \"A concrete class needs to implement both the abstract methods it inherits from interfaces and those declared in the abstract class it extends\"\nconcepts:\n  - Class\n  - Method\n  - Subtyping\n  - Inheritance\nrelated:\n  - id: ConcreteClassOnlyImplementClassAbstract\n    relation: Dual\ninOtherPl:\n# - pl: JavaScript\n#   id: ConcreteClassOnlyImplementInterfaceAbstract\n# - pl: Python\n#   id: ConcreteClassOnlyImplementInterfaceAbstract\nspec:\n  - id: jls21\n    sections: [\"8.1.4\"]\nplVersion:\n# from: jls8\n# to: jls14\n---\n\nA concrete class that implements interfaces and extends an abstract class only needs to implement those methods declared in the interfaces it implements. There is no need for it to implement the abstract methods declared in the abstract class it extends.\n","fields":{"name":"ConcreteClassOnlyImplementInterfaceAbstract","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg","srcSet":"/static/40c6db1530671c3291cbfc14f247de04/37bba/default-misconception-image.jpg 750w,\n/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/40c6db1530671c3291cbfc14f247de04/a66aa/default-misconception-image.webp 750w,\n/static/40c6db1530671c3291cbfc14f247de04/b2a35/default-misconception-image.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/40c6db1530671c3291cbfc14f247de04/f7f54/default-misconception-image.jpg","height":512}}}},"frontmatter":{"shortDescription":"A concrete class only needs to implement those abstract methods it inherits from interfaces","shortCorrection":"A concrete class needs to implement both the abstract methods it inherits from interfaces and those declared in the abstract class it extends","status":"draft","concepts":["Class","Method","Subtyping","Inheritance"]}}},"pageContext":{"slug":"/misconceptions/Java/ConcreteClassOnlyImplementInterfaceAbstract/"}},
    "staticQueryHashes": ["4169798128"]}