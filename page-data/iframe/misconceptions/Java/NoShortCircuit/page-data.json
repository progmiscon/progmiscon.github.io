{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/NoShortCircuit/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"public\",\n  \"shortDescription\": \"&& and || always evaluate both operands\",\n  \"shortCorrection\": \"&& and || evaluate their right operand only if absolutely necessary\",\n  \"concepts\": [\"Expression\", \"Evaluation\", \"Operator\", \"Boolean\", \"ControlFlow\"],\n  \"related\": [{\n    \"id\": \"NoSingleLogicAnd\",\n    \"relation\": \"& seen as only a bitwise AND\"\n  }],\n  \"inOtherPl\": [{\n    \"pl\": \"Python\",\n    \"id\": \"NoShortCircuit\"\n  }],\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"15.23\", \"15.24\"]\n  }],\n  \"plVersion\": null,\n  \"expressibleInNms\": [{\n    \"id\": \"ExpressionAsTree\",\n    \"how\": \"expression involving short-circuit operator\"\n  }, {\n    \"id\": \"ControlFlowAsGraph\",\n    \"how\": \"graph of conditional involving short-circuit operator\"\n  }],\n  \"references\": [{\n    \"citationKey\": \"chiodiniSurveyingUpperSecondaryTeachers2025\",\n    \"phenomena\": [\"NSC\"]\n  }, {\n    \"citationKey\": \"altadmri37MillionCompilations2015\",\n    \"phenomena\": [\"D\"]\n  }, {\n    \"citationKey\": \"hristovaIdentifyingCorrectingJava2003\",\n    \"phenomena\": [\"Syntax4\"]\n  }, {\n    \"citationKey\": \"brownNoviceJavaProgrammingMistakes2017\",\n    \"phenomena\": [\"(D)andOrSyn\"]\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"&&\"), \" is a logical AND and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"||\"), \" is a logical OR,\\nand both always evaluate both of their operands.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: public\nshortDescription: \"&& and || always evaluate both operands\"\nshortCorrection: \"&& and || evaluate their right operand only if absolutely necessary\"\nconcepts:\n  - Expression\n  - Evaluation\n  - Operator\n  - Boolean\n  - ControlFlow\nrelated:\n  - id: NoSingleLogicAnd\n    relation: \"& seen as only a bitwise AND\"\ninOtherPl:\n  # - pl: JavaScript\n  #   id: NoShortCircuit\n  - pl: Python\n    id: NoShortCircuit\nspec:\n  - id: jls21\n    sections: [\"15.23\", \"15.24\"]\nplVersion:\n# from: jls8\n# to: jls14\nexpressibleInNms:\n  - id: ExpressionAsTree\n    how: expression involving short-circuit operator\n  - id: ControlFlowAsGraph\n    how: graph of conditional involving short-circuit operator\nreferences:\n  - citationKey: chiodiniSurveyingUpperSecondaryTeachers2025\n    phenomena: [NSC]\n  - citationKey: altadmri37MillionCompilations2015\n    phenomena: [D]\n  - citationKey: hristovaIdentifyingCorrectingJava2003\n    phenomena: [Syntax4]\n  - citationKey: brownNoviceJavaProgrammingMistakes2017\n    phenomena: [(D)andOrSyn]\n---\n\n`&&` is a logical AND and `||` is a logical OR,\nand both always evaluate both of their operands.\n","fields":{"name":"NoShortCircuit","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#c89868","images":{"fallback":{"src":"/static/9419d75c8abd2d6c4aec7af954d9907e/f6810/image.jpg","srcSet":"/static/9419d75c8abd2d6c4aec7af954d9907e/37bba/image.jpg 750w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/61c72/image.jpg 1080w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/d61e8/image.jpg 1366w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/f6810/image.jpg 1600w","sizes":"100vw"},"sources":[{"srcSet":"/static/9419d75c8abd2d6c4aec7af954d9907e/a66aa/image.webp 750w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/65dd5/image.webp 1080w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/4fad6/image.webp 1366w,\n/static/9419d75c8abd2d6c4aec7af954d9907e/e9d78/image.webp 1600w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/9419d75c8abd2d6c4aec7af954d9907e/f7f54/image.jpg","height":512}}}},"frontmatter":{"shortDescription":"&& and || always evaluate both operands","shortCorrection":"&& and || evaluate their right operand only if absolutely necessary","status":"public","concepts":["Expression","Evaluation","Operator","Boolean","ControlFlow"]}}},"pageContext":{"slug":"/misconceptions/Java/NoShortCircuit/"}},
    "staticQueryHashes": ["4169798128"]}