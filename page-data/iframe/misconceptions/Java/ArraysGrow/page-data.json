{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/ArraysGrow/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"public\",\n  \"shortDescription\": \"Arrays can grow dynamically\",\n  \"shortCorrection\": \"The length of an array is fixed and is determined at allocation\",\n  \"concepts\": [\"Array\", \"Allocation\"],\n  \"related\": [{\n    \"id\": \"AddMemberAtRuntime\",\n    \"relation\": \"similar, for objects instead of arrays\"\n  }],\n  \"inOtherPl\": null,\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"10.3\"]\n  }],\n  \"plVersion\": null,\n  \"expressibleInNms\": [{\n    \"id\": \"StackHeapGlobalDiagram\",\n    \"how\": \"array on heap with elements and length field\"\n  }],\n  \"text\": [{\n    \"id\": \"ofj6\",\n    \"sections\": [\"7\"]\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"One can add an arbitrary number of elements to an array,\\nand the array will grow as needed.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: public\nshortDescription: \"Arrays can grow dynamically\"\nshortCorrection: \"The length of an array is fixed and is determined at allocation\"\nconcepts:\n  - Array\n  - Allocation\nrelated:\n  - id: AddMemberAtRuntime\n    relation: similar, for objects instead of arrays\ninOtherPl:\n# - pl: JavaScript\n#   id: ArraysGrow\n# - pl: Python\n#   id: ArraysGrow\nspec:\n  - id: jls21\n    sections: [\"10.3\"]\nplVersion:\n# from: jls8\n# to: jls14\nexpressibleInNms:\n  - id: StackHeapGlobalDiagram\n    how: array on heap with elements and length field\ntext:\n  - id: ofj6\n    sections: [\"7\"]\n---\n\nOne can add an arbitrary number of elements to an array,\nand the array will grow as needed.\n","fields":{"name":"ArraysGrow","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/bfa01edf02b7a1dd2c39abbfd92ed167/f6810/image.jpg","srcSet":"/static/bfa01edf02b7a1dd2c39abbfd92ed167/37bba/image.jpg 750w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/61c72/image.jpg 1080w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/d61e8/image.jpg 1366w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/f6810/image.jpg 1600w","sizes":"100vw"},"sources":[{"srcSet":"/static/bfa01edf02b7a1dd2c39abbfd92ed167/a66aa/image.webp 750w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/65dd5/image.webp 1080w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/4fad6/image.webp 1366w,\n/static/bfa01edf02b7a1dd2c39abbfd92ed167/e9d78/image.webp 1600w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/bfa01edf02b7a1dd2c39abbfd92ed167/f7f54/image.jpg","height":512}}}},"frontmatter":{"shortDescription":"Arrays can grow dynamically","shortCorrection":"The length of an array is fixed and is determined at allocation","status":"public","concepts":["Array","Allocation"]}}},"pageContext":{"slug":"/misconceptions/Java/ArraysGrow/"}},
    "staticQueryHashes": ["4169798128"]}