{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/UseOfSelfTypeImpliesRecursiveType/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"draft\",\n  \"shortDescription\": \"If a class has a method that has a local variable, parameter, or return value with the class as its type, the class is a recursive type\",\n  \"shortCorrection\": \"A class can have methods with a local variable, parameter, or return value with the class as its type without being a recursive type\",\n  \"concepts\": [\"Class\", \"Method\", \"Variable\", \"Parameter\", \"Return\", \"Value\", \"Type\", \"Recursion\"],\n  \"related\": null,\n  \"inOtherPl\": null,\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"8.3\"]\n  }],\n  \"plVersion\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If a class \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"C\"), \" has a method \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"void m(C c)\"), \", or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"C m()\"), \", or \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"void m() { C c = ... }\"), \" then class \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"C\"), \" is a recursive type.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: draft\nshortDescription: \"If a class has a method that has a local variable, parameter, or return value with the class as its type, the class is a recursive type\"\nshortCorrection: \"A class can have methods with a local variable, parameter, or return value with the class as its type without being a recursive type\"\nconcepts:\n  - Class\n  - Method\n  - Variable\n  - Parameter\n  - Return\n  - Value\n  - Type\n  - Recursion\nrelated:\n# - id: LiteralNoExpression\n#   relation: Special case\ninOtherPl:\n# - pl: JavaScript\n#   id: UseOfSelfTypeImpliesRecursiveType\n# - pl: Python\n#   id: UseOfSelfTypeImpliesRecursiveType\nspec:\n  - id: jls21\n    sections: [\"8.3\"]\nplVersion:\n# from: jls8\n# to: jls14\n---\n\nIf a class `C` has a method `void m(C c)`, or `C m()`, or `void m() { C c = ... }` then class `C` is a recursive type.\n","fields":{"name":"UseOfSelfTypeImpliesRecursiveType","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg","srcSet":"/static/40c6db1530671c3291cbfc14f247de04/37bba/default-misconception-image.jpg 750w,\n/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/40c6db1530671c3291cbfc14f247de04/a66aa/default-misconception-image.webp 750w,\n/static/40c6db1530671c3291cbfc14f247de04/b2a35/default-misconception-image.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/40c6db1530671c3291cbfc14f247de04/f7f54/default-misconception-image.jpg","height":512}}}},"frontmatter":{"shortDescription":"If a class has a method that has a local variable, parameter, or return value with the class as its type, the class is a recursive type","shortCorrection":"A class can have methods with a local variable, parameter, or return value with the class as its type without being a recursive type","status":"draft","concepts":["Class","Method","Variable","Parameter","Return","Value","Type","Recursion"]}}},"pageContext":{"slug":"/misconceptions/Java/UseOfSelfTypeImpliesRecursiveType/"}},
    "staticQueryHashes": ["4169798128"]}