{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/AssignmentCopiesObject/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"public\",\n  \"shortDescription\": \"Assignment copies the object\",\n  \"shortCorrection\": \"Assignment copies the reference pointing to the object\",\n  \"concepts\": [\"Assignment\", \"Variable\", \"Object\", \"Reference\"],\n  \"related\": [{\n    \"id\": \"EqualityOperatorComparesObjectsValues\",\n    \"relation\": \"Parallel (also about reference vs. value)\"\n  }, {\n    \"id\": \"VariablesHoldObjects\",\n    \"relation\": \"Possible cause\"\n  }, {\n    \"id\": \"AssignCompares\",\n    \"relation\": \"A deeper misconception about assignment\"\n  }],\n  \"inOtherPl\": [{\n    \"pl\": \"JavaScript\",\n    \"id\": \"AssignmentCopiesObject\"\n  }, {\n    \"pl\": \"Python\",\n    \"id\": \"AssignmentCopiesObject\"\n  }],\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"4.3.1\", \"15.26\"]\n  }],\n  \"plVersion\": null,\n  \"expressibleInNms\": [{\n    \"id\": \"StackHeapGlobalDiagram\",\n    \"how\": \"variable and object on heap, before and after assignment\"\n  }],\n  \"text\": [{\n    \"id\": \"ssj4\",\n    \"sections\": [\"1\"]\n  }],\n  \"references\": [{\n    \"citationKey\": \"chiodiniSurveyingUpperSecondaryTeachers2025\",\n    \"phenomena\": [\"ACO\"]\n  }, {\n    \"citationKey\": \"luIdentifyingCorrectingProgramming2024\",\n    \"phenomena\": [\"DefsCopyStructs\", \"CallsCopyStructs\", \"StructsCopyStructs\"]\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A statement like \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"String dest = origin\"), \" creates a copy of object \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"origin\"), \" and assigns that copy to the variable \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"dest\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: public\nshortDescription: \"Assignment copies the object\"\nshortCorrection: \"Assignment copies the reference pointing to the object\"\nconcepts:\n  - Assignment\n  - Variable\n  - Object\n  - Reference\nrelated:\n  - id: EqualityOperatorComparesObjectsValues\n    relation: Parallel (also about reference vs. value)\n  - id: VariablesHoldObjects\n    relation: Possible cause\n  - id: AssignCompares\n    relation: A deeper misconception about assignment\ninOtherPl:\n  - pl: JavaScript\n    id: AssignmentCopiesObject\n  - pl: Python\n    id: AssignmentCopiesObject\nspec:\n  - id: jls21\n    sections: [\"4.3.1\", \"15.26\"]\nplVersion:\n# from: jls8\n# to: jls14\nexpressibleInNms:\n  - id: StackHeapGlobalDiagram\n    how: variable and object on heap, before and after assignment\ntext:\n  - id: ssj4\n    sections: [\"1\"]\nreferences:\n  - citationKey: chiodiniSurveyingUpperSecondaryTeachers2025\n    phenomena: [ACO]\n  - citationKey: luIdentifyingCorrectingProgramming2024\n    phenomena: [DefsCopyStructs, CallsCopyStructs, StructsCopyStructs]\n---\n\nA statement like `String dest = origin` creates a copy of object `origin` and assigns that copy to the variable `dest`.\n","fields":{"name":"AssignmentCopiesObject","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/bb6e9d491c4bb82764e83e3e7cc96a95/a764f/image.jpg","srcSet":"/static/bb6e9d491c4bb82764e83e3e7cc96a95/37bba/image.jpg 750w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/61c72/image.jpg 1080w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/d61e8/image.jpg 1366w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/a764f/image.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/bb6e9d491c4bb82764e83e3e7cc96a95/a66aa/image.webp 750w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/65dd5/image.webp 1080w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/4fad6/image.webp 1366w,\n/static/bb6e9d491c4bb82764e83e3e7cc96a95/c512e/image.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/bb6e9d491c4bb82764e83e3e7cc96a95/f7f54/image.jpg","height":512}}}},"frontmatter":{"shortDescription":"Assignment copies the object","shortCorrection":"Assignment copies the reference pointing to the object","status":"public","concepts":["Assignment","Variable","Object","Reference"]}}},"pageContext":{"slug":"/misconceptions/Java/AssignmentCopiesObject/"}},
    "staticQueryHashes": ["4169798128"]}