{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Java/EqualityOperatorComparesObjectsValues/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"public\",\n  \"shortDescription\": \"o==p compares the objects referred to by variables o and p\",\n  \"shortCorrection\": \"o==p compares the references stored in the variables o and p\",\n  \"concepts\": [\"Equality\", \"Reference\", \"Object\", \"Value\", \"Operator\", \"Expression\"],\n  \"related\": [{\n    \"id\": \"EqualsComparesReferences\",\n    \"relation\": \"Dual\"\n  }, {\n    \"id\": \"AssignmentCopiesObject\",\n    \"relation\": \"Parallel (also about reference vs. value)\"\n  }],\n  \"inOtherPl\": [{\n    \"pl\": \"JavaScript\",\n    \"id\": \"EqualityOperatorComparesObjectsValues\"\n  }],\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"15.21\"]\n  }],\n  \"plVersion\": null,\n  \"expressibleInNms\": [{\n    \"id\": \"StackHeapGlobalDiagram\",\n    \"how\": \"two reference variables and two heap objects\"\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The equality operator \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"==\"), \" compares two objects\\u2019 values,\\nfor example producing \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"true\"), \" if they contain the same values for every field.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: public\nshortDescription: \"o==p compares the objects referred to by variables o and p\"\nshortCorrection: \"o==p compares the references stored in the variables o and p\"\nconcepts:\n  - Equality\n  - Reference\n  - Object\n  - Value\n  - Operator\n  - Expression\nrelated:\n  - id: EqualsComparesReferences\n    relation: Dual\n  - id: AssignmentCopiesObject\n    relation: Parallel (also about reference vs. value)\ninOtherPl:\n  - pl: JavaScript\n    id: EqualityOperatorComparesObjectsValues\n  # - pl: Python\n  #   id: NoAtomicExpression\nspec:\n  - id: jls21\n    sections: [\"15.21\"]\nplVersion:\n  # from: ecma6\n  # to: ecma11\nexpressibleInNms:\n  - id: StackHeapGlobalDiagram\n    how: two reference variables and two heap objects\n---\n\nThe equality operator `==` compares two objects' values,\nfor example producing `true` if they contain the same values for every field.\n","fields":{"name":"EqualityOperatorComparesObjectsValues","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#c89868","images":{"fallback":{"src":"/static/0a981cb0e99fc66965f0cce4d8a48c8b/f6810/image.jpg","srcSet":"/static/0a981cb0e99fc66965f0cce4d8a48c8b/37bba/image.jpg 750w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/61c72/image.jpg 1080w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/d61e8/image.jpg 1366w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/f6810/image.jpg 1600w","sizes":"100vw"},"sources":[{"srcSet":"/static/0a981cb0e99fc66965f0cce4d8a48c8b/a66aa/image.webp 750w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/65dd5/image.webp 1080w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/4fad6/image.webp 1366w,\n/static/0a981cb0e99fc66965f0cce4d8a48c8b/e9d78/image.webp 1600w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/0a981cb0e99fc66965f0cce4d8a48c8b/f7f54/image.jpg","height":512}}}},"frontmatter":{"shortDescription":"o==p compares the objects referred to by variables o and p","shortCorrection":"o==p compares the references stored in the variables o and p","status":"public","concepts":["Equality","Reference","Object","Value","Operator","Expression"]}}},"pageContext":{"slug":"/misconceptions/Java/EqualityOperatorComparesObjectsValues/"}},
    "staticQueryHashes": ["4169798128"]}