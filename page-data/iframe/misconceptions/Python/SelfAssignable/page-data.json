{
    "componentChunkName": "component---src-templates-misconception-iframe-js",
    "path": "/iframe/misconceptions/Python/SelfAssignable/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"public\",\n  \"shortDescription\": \"Reassigning self changes the object on which a method is called\",\n  \"shortCorrection\": \"Reassigning self does not change the object on which a method is called\",\n  \"concepts\": [\"Variable\", \"Reference\", \"Assignment\", \"Object\", \"Mutability\", \"Self\"],\n  \"related\": [{\n    \"id\": \"InitCreates\",\n    \"relation\": \"When assigning to self in init\"\n  }, {\n    \"id\": \"InitReturnsObject\",\n    \"relation\": \"Maybe\"\n  }],\n  \"inOtherPl\": [{\n    \"pl\": \"Java\",\n    \"id\": \"ThisAssignable\"\n  }, {\n    \"pl\": \"JavaScript\",\n    \"id\": \"ThisAssignable\"\n  }],\n  \"spec\": [{\n    \"id\": \"plr3.13\",\n    \"sections\": [\"3.2.8.2\"]\n  }],\n  \"expressibleInNms\": [{\n    \"id\": \"StackHeapGlobalDiagram\",\n    \"how\": \"stack frame containing self\"\n  }, {\n    \"id\": \"ExpressionAsTree\",\n    \"how\": \"expression involving assignment\"\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It is possible to change the instance by assigning a value to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"self\"), \" (for example in \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"__init__\"), \").\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: public\nshortDescription: \"Reassigning self changes the object on which a method is called\"\nshortCorrection: \"Reassigning self does not change the object on which a method is called\"\nconcepts:\n  - Variable\n  - Reference\n  - Assignment\n  - Object\n  - Mutability\n  - Self\nrelated:\n  - id: InitCreates\n    relation: When assigning to self in init\n  - id: InitReturnsObject\n    relation: Maybe\ninOtherPl:\n  - pl: Java\n    id: ThisAssignable\n  - pl: JavaScript\n    id: ThisAssignable\nspec:\n  - id: plr3.13\n    sections: [\"3.2.8.2\"]\nexpressibleInNms:\n  - id: StackHeapGlobalDiagram\n    how: stack frame containing self\n  - id: ExpressionAsTree\n    how: expression involving assignment\n---\n\nIt is possible to change the instance by assigning a value to `self` (for example in `__init__`).\n","fields":{"name":"SelfAssignable","pl":"Python","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#c89868","images":{"fallback":{"src":"/static/42e0b16760d24efef12375e85e14bc22/f6810/image.jpg","srcSet":"/static/42e0b16760d24efef12375e85e14bc22/37bba/image.jpg 750w,\n/static/42e0b16760d24efef12375e85e14bc22/61c72/image.jpg 1080w,\n/static/42e0b16760d24efef12375e85e14bc22/d61e8/image.jpg 1366w,\n/static/42e0b16760d24efef12375e85e14bc22/f6810/image.jpg 1600w","sizes":"100vw"},"sources":[{"srcSet":"/static/42e0b16760d24efef12375e85e14bc22/a66aa/image.webp 750w,\n/static/42e0b16760d24efef12375e85e14bc22/65dd5/image.webp 1080w,\n/static/42e0b16760d24efef12375e85e14bc22/4fad6/image.webp 1366w,\n/static/42e0b16760d24efef12375e85e14bc22/e9d78/image.webp 1600w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/42e0b16760d24efef12375e85e14bc22/f7f54/image.jpg","height":512}}}},"frontmatter":{"shortDescription":"Reassigning self changes the object on which a method is called","shortCorrection":"Reassigning self does not change the object on which a method is called","status":"public","concepts":["Variable","Reference","Assignment","Object","Mutability","Self"]}}},"pageContext":{"slug":"/misconceptions/Python/SelfAssignable/"}},
    "staticQueryHashes": ["4169798128"]}