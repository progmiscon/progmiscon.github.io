{
    "componentChunkName": "component---src-templates-reference-js",
    "path": "/reference/sirkiaExploringProgrammingMisconceptions2012/",
    "result": {"data":{"zoteroItems":{"citationKey":"sirkiaExploringProgrammingMisconceptions2012","data":{"key":"NXN9U3H2","version":63,"itemType":"conferencePaper","title":"Exploring programming misconceptions: an analysis of student mistakes in visual program simulation exercises","abstractNote":"Visual program simulation (VPS) is a form of interactive program visualization in which novice programmers practice tracing computer programs: using a graphical interface, they are expected to correctly indicate each consecutive stage in the execution of a given program. Naturally, students make mistakes during VPS; in this article, we report a study of such mistakes.\nVisual program simulation tries to get students to act on their conceptions; a VPS-supporting software system may be built so that it reacts to student behaviors and provides feedback tailored to address suspected misconceptions. To focus our efforts in developing the feedback given by our VPS system, UUhistle, we wished to identify the most common mistakes that students make and to explore the reasons behind them. We analyzed the mistakes in over 24,000 student-submitted solutions to VPS assignments collected over three years. 26 mistakes stood out as relatively common and therefore worthy of particular attention. Some of the mistakes appear to be related to usability issues and others to known misconceptions about programming concepts; others still suggest previously unreported conceptual difficulties. Beyond helping us develop our visualization tool, our study lends tentative support to the claim that many VPS mistakes are linked to programming misconceptions and VPS logs can be a useful data source for studying students' understandings of CS1 content.","date":"2012","proceedingsTitle":"Proceedings of the 12th Koli Calling International Conference on Computing Education Research - Koli Calling '12","conferenceName":"the 12th Koli Calling International Conference","thesisType":null,"university":null,"place":"Koli, Finland","publisher":"ACM Press","volume":"","pages":"19-28","series":"","language":"en","DOI":"10.1145/2401796.2401799","ISBN":"978-1-4503-1795-5","shortTitle":"Exploring programming misconceptions","url":"http://dl.acm.org/citation.cfm?doid=2401796.2401799","accessDate":"2018.10.22","archive":"","archiveLocation":"","libraryCatalog":"Crossref","callNumber":"","rights":"","extra":"tex.ids: sirkiaExploringProgrammingMisconceptions2012a\nCitation Key: sirkiaExploringProgrammingMisconceptions2012","dateAdded":"2020-07-19T17:33:57Z","dateModified":"2025-07-18T09:15:29Z","reportNumber":null,"reportType":null,"seriesTitle":null,"institution":null,"publicationTitle":null,"issue":null,"seriesText":null,"journalAbbreviation":null,"ISSN":null,"bookTitle":null,"seriesNumber":null,"numberOfVolumes":null,"edition":null,"creators":[{"creatorType":"author","firstName":"Teemu","lastName":"Sirkiä"},{"creatorType":"author","firstName":"Juha","lastName":"Sorva"}],"tags":[],"parsedDate":"2012","creatorSummary":"Sirkiä and Sorva"}},"misconceptions":{"totalCount":0,"edges":[]},"refs":{"edges":[{"node":{"id":"f0afe23b-5f55-5911-b6e0-b84952c85465","slug":"references/altadmri37MillionCompilations2015","frontmatter":{"langs":["Java"],"method":"Repository mining study (BlueJ Blackbox)","subjects":"250000+ students across the world","artifact":"https://bluej.org/blackbox/","phenomenonKinds":[{"name":"Mistakes","description":"Misunderstandings, type errors, other semantic errors","phenomena":[{"id":"A","name":"Confusing the assignment operator with the comparison operator","observations":[{"measure":"Users making mistake","count":45082,"maxCount":250000}]},{"id":"D","name":"Confusing \"short-circuit\" evaluators with conventional logical operators","observations":[{"measure":"Users making mistake","count":8742,"maxCount":250000}]},{"id":"H","name":"Using keywords as method or variable names","observations":[{"measure":"Users making mistake","count":943,"maxCount":250000}]},{"id":"J","name":"Forgetting parentheses after a method call","observations":[{"measure":"Users making mistake","count":10232,"maxCount":250000}]}]}]},"fields":null}},{"node":{"id":"b5751877-2e80-5bfc-9cd5-ad1b58c9e8ff","slug":"references/bevilacquaAssessingUnderstandingExpressions2024","frontmatter":{"langs":["Java"],"method":"Qualitative and quantitative systematic research","subjects":"542 hand-drawn expression trees from 12 exams in 6 university courses","artifact":"https://zenodo.org/records/13898595","phenomenonKinds":[{"name":"Diagram mistakes","description":"Mistakes in student-drawn expression trees, related to structure, types, or values","phenomena":[{"id":"LiteralInlined","name":"A literal is inlined into the parent node","observations":[{"measure":"Cases","count":41,"maxCount":447}]},{"id":"VariableInlined","name":"A simple variable access or field access is inlined into the parent node","observations":[{"measure":"Cases","count":83,"maxCount":346}]},{"id":"TargetInlined","name":"The target (expression before dot) has been inlined (e.g., into a method invocation or a field access with explicit targets).","observations":[{"measure":"Cases","count":97,"maxCount":303}]},{"id":"IndexInlined","name":"The index in an array access expression has been inlined.","observations":[{"measure":"Cases","count":25,"maxCount":79}]},{"id":"NewIsolated","name":"Token 'new' is kept in separate node, which possibly includes a hole for connection.","observations":[{"measure":"Cases","count":3,"maxCount":124}]},{"id":"RightToLeftAssociativity","name":"Binary operator that is left-to-right associative is treated as right-to-left associative.","observations":[{"measure":"Cases","count":15,"maxCount":49}]},{"id":"TreeIsChainInSourceOrder","name":"The tree is primarily a chain, reflecting, in order (e.g., left to right -> top to bottom) the constructs of the source code.","observations":[{"measure":"Cases","count":5,"maxCount":40}]},{"id":"SubstitutionTakenFromEvaluation","name":"A node is replaced with a subtree containing code that appears inside methods or constructors called by the expression.","observations":[{"measure":"Cases","count":62,"maxCount":480}]},{"id":"ImplicitThis","name":"An *implicit* this is explicitly reported in the expression tree.","observations":[{"measure":"Cases","count":1,"maxCount":139}]},{"id":"ArrayLengthWithParentheses","name":"Access to the length field of an array is represented with extra parentheses.","observations":[{"measure":"Cases","count":1,"maxCount":44}]},{"id":"ParameterlessWithoutParentheses","name":"A method / constructor with no arguments is represented in the tree with its proper name but without parentheses.","observations":[{"measure":"Cases","count":12,"maxCount":266}]},{"id":"InstantiationWithoutNew","name":"Missing token 'new' in a class, interface, or array instance creation.","observations":[{"measure":"Cases","count":26,"maxCount":124}]},{"id":"LiteralWithoutType","name":"A literal is missing the type annotation.","observations":[{"measure":"Cases","count":25,"maxCount":406}]},{"id":"VariableWithoutType","name":"A simple variable access is missing the type annotation.","observations":[{"measure":"Cases","count":14,"maxCount":322}]},{"id":"TypeIsParentHoleType","name":"The type of the node is not the actual type of the node, but rather the type specified for the surrounding 'hole'.","observations":[{"measure":"Cases","count":17,"maxCount":64}]},{"id":"CharacterTypeString","name":"The type of a character literal node is String.","observations":[{"measure":"Cases","count":11,"maxCount":53}]},{"id":"LiteralWithoutValue","name":"A literal is missing the value annotation.","observations":[{"measure":"Cases","count":61,"maxCount":159}]},{"id":"VariableWithoutValue","name":"A simple variable access is missing the value annotation.","observations":[{"measure":"Cases","count":17,"maxCount":115}]},{"id":"StringValueWithoutQuotes","name":"String value reported without quotes.","observations":[{"measure":"Cases","count":9,"maxCount":328}]},{"id":"BothBranchesOfCondExprEvaluated","name":"Both branches of a conditional expression are annotated with values.","observations":[{"measure":"Cases","count":67,"maxCount":115}]}]}]},"fields":null}},{"node":{"id":"f5abd37e-c967-5aa8-bab9-3bef6628f2f8","slug":"references/brownNoviceJavaProgrammingMistakes2017","frontmatter":{"langs":["Java"],"method":"Quantitative systematic research analyzing 100+ M compilation events and surveying educators perceptions about 18 selected mistakes","subjects":"900+ students and 76 educators","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"A Blackbox dataset of student-generated compilation events over a 2-year period.","phenomena":[{"id":"(A)eqSyn","name":"Confusing the assignment operator (=) with the comparison operator (==)","observations":[{"measure":"Compilation events containing this error","count":405748,"maxCount":100000000}]},{"id":"(D)andOrSyn","name":"Confusing short-circuit evaluators (&& and||) with conventional logical operators (& and|)","observations":[{"measure":"Compilation events containing this error","count":61965,"maxCount":100000000}]},{"id":"(H)keySyn","name":"Using keywords as methods' or variables' names","observations":[{"measure":"Compilation events containing this error","count":2568,"maxCount":100000000}]},{"id":"(J)parCalSyn","name":"Forgetting parentheses after a method call","observations":[{"measure":"Compilation events containing this error","count":43165,"maxCount":100000000}]}]}]},"fields":null}},{"node":{"id":"d55e1ffb-4d92-58c5-b729-4bc1dfbe576f","slug":"references/caceffoIdentifyingValidatingJava2019","frontmatter":{"langs":["Java"],"method":"Quantitative systematic research","subjects":"69 upper-level undergraduate students","artifact":"https://www.ic.unicamp.br/~reltech/2019/19-05.pdf","phenomenonKinds":[{"name":"Misconceptions","description":"Java misconceptions on (A) function parameter use and scope, (B) variables, identifiers, and scope, (C) recursion, (D) iteration, (E) structures, (F) pointers, (G) boolean expressions, and (H) classes and objects.","phenomena":[{"id":"F.4","name":"Void function returns value","observations":[{"measure":"Students holding misconception","count":1,"maxCount":69}]}]}]},"fields":null}},{"node":{"id":"dae7fd67-4962-5ea5-96c2-5f54e851787d","slug":"references/chiodiniSurveyingUpperSecondaryTeachers2025","frontmatter":{"langs":["Python"],"method":"Quantitative systematic research","subjects":"97 Swiss high school teachers and their students","artifact":"https://zenodo.org/records/15633868","phenomenonKinds":[{"name":"Programming Language Misconceptions","description":"Misconceptions that directly correspond to Progmiscon.org misconceptions","phenomena":[{"id":"NAE","name":"NoAtomicExpression","observations":[{"measure":"Teachers hold misconception","count":39,"maxCount":97},{"measure":"Teachers familiar with misconception","count":42,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"RUMF","name":"ReturnUnwindsMultipleFrames","observations":[{"measure":"Teachers hold misconception","count":37,"maxCount":97},{"measure":"Teachers familiar with misconception","count":45,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"CIS","name":"ConditionalIsSequence","observations":[{"measure":"Teachers hold misconception","count":34,"maxCount":97},{"measure":"Teachers familiar with misconception","count":78,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"NSC","name":"NoShortCircuit","observations":[{"measure":"Teachers hold misconception","count":30,"maxCount":97},{"measure":"Teachers familiar with misconception","count":68,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"MVR","name":"MultipleValuesReturn","observations":[{"measure":"Teachers hold misconception","count":29,"maxCount":97},{"measure":"Teachers familiar with misconception","count":61,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"ACO","name":"AssignmentCopiesObject","observations":[{"measure":"Teachers hold misconception","count":26,"maxCount":97},{"measure":"Teachers familiar with misconception","count":74,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"MTBWI","name":"MapToBooleanWithIf","observations":[{"measure":"Teachers hold misconception","count":25,"maxCount":97},{"measure":"Teachers familiar with misconception","count":73,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"CWBL","name":"ComparisonWithBoolLieteral","observations":[{"measure":"Teachers hold misconception","count":21,"maxCount":97},{"measure":"Teachers familiar with misconception","count":82,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"RC","name":"ReturnCall","observations":[{"measure":"Teachers hold misconception","count":19,"maxCount":97},{"measure":"Teachers familiar with misconception","count":60,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"POIA","name":"ParenthesesOnlyIfArgument","observations":[{"measure":"Teachers hold misconception","count":15,"maxCount":97},{"measure":"Teachers familiar with misconception","count":81,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"NRW","name":"NoReservedWords","observations":[{"measure":"Teachers hold misconception","count":14,"maxCount":97},{"measure":"Teachers familiar with misconception","count":83,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"OIFN","name":"OutsideInFunctionNesting","observations":[{"measure":"Teachers hold misconception","count":11,"maxCount":97},{"measure":"Teachers familiar with misconception","count":64,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"DR","name":"DeferredReturn","observations":[{"measure":"Teachers hold misconception","count":9,"maxCount":97},{"measure":"Teachers familiar with misconception","count":71,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"VHE","name":"VariablesHoldExpressions","observations":[{"measure":"Teachers hold misconception","count":8,"maxCount":97},{"measure":"Teachers familiar with misconception","count":58,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"IIL","name":"IfIsLoop","observations":[{"measure":"Teachers hold misconception","count":4,"maxCount":97},{"measure":"Teachers familiar with misconception","count":43,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]},{"id":"AC","name":"AssignCompares","observations":[{"measure":"Teachers hold misconception","count":3,"maxCount":97},{"measure":"Teachers familiar with misconception","count":85,"maxCount":97},{"measure":"Importance (reported by teachers)","count":null,"maxCount":null},{"measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null}]}]}]},"fields":null}},{"node":{"id":"e17590ec-8a27-5ac9-8581-8b40cd6bc740","slug":"references/duboulayDifficultiesLearningProgram1986","frontmatter":{"langs":["Pascal","BASIC"],"method":"Argumentation, review of prior work","subjects":"No explicitly mentioned subjects","artifact":null,"phenomenonKinds":[{"name":"Difficulties","description":"Difficulties","phenomena":[{"id":"Page66","name":"Variable holds an unevaluated expression","observations":null}]}]},"fields":null}},{"node":{"id":"8ddac49a-912c-5da1-803c-6cd188b6f580","slug":"references/groverMeasuringStudentLearning2017","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"100 grade 6, 7, and 8 students","artifact":null,"phenomenonKinds":[{"name":"Items","description":"Items assessing misconceptions on loops, variables, and logic","phenomena":[{"id":"2a","name":"Grouping the actions in the loop (Item 2a code 'Grouped')","observations":[{"measure":"Students making this error","count":8,"maxCount":100}]},{"id":"8d","name":"Loops produce the exact same output in every iteration (Item 8d)","observations":null}]}]},"fields":null}},{"node":{"id":"2b96b1b4-3524-5fa3-a08b-926614baa029","slug":"references/hartmannPrevalenceProgrammingMisconceptions2024","frontmatter":{"langs":["Scratch","xLogo"],"method":"Quantitative systematic research","subjects":"366 grade 5 or 6 students (255 for Scratch, 111 for xLogo)","artifact":"https://osf.io/5bxvp/?view_only=d6a51b4cfdfb4e63887fde5da9ef66c7","phenomenonKinds":[{"name":"Scratch Misconceptions","description":"Misconceptions detected with ProMAT for Scratch (on sequences, loops, conditionals, superbug)","phenomena":null},{"name":"xLogo Misconceptions","description":"Misconceptions detected with ProMAT for xLogo (on sequences, loops, conditionals, superbug)","phenomena":null}]},"fields":null}},{"node":{"id":"4d5b3d2c-5a3d-5792-b6ba-0a4be9e859e4","slug":"references/hartmannProgrammingConceptsMisconceptions2022","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"57 grade 5 or 6 students","artifact":"https://osf.io/5bxvp/?view_only=76b81b0a145e4836a0468773fe9eb1aa","phenomenonKinds":[{"name":"Programming Misconceptions","description":"Misconceptions detected with ProMAT in Scratch","phenomena":[{"id":"26","name":"Code after IF statement is not executed if the THEN clause is","observations":null},{"id":"n2","name":"","observations":null},{"id":"n3","name":"","observations":null}]}]},"fields":null}},{"node":{"id":"6baa5715-0e22-5cf8-90bd-2f97a08f66d5","slug":"references/hristovaIdentifyingCorrectingJava2003","frontmatter":{"langs":["Java"],"method":"Qualitative (survey of instructors and students)","subjects":"Unknown number of undergraduate students, professors, SIGCSE members","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"Common syntax, semantic, and logic errors in Java","phenomena":[{"id":"Syntax1","name":"Confusing the assignment operator with the comparison operator","observations":null},{"id":"Syntax2","name":"Use of == instead of .equals to compare strings","observations":null},{"id":"Syntax4","name":"Confusing \"short-circuit\" evaluators with conventional logical operators","observations":null},{"id":"Syntax8","name":"Using keywords as method or variable names","observations":null},{"id":"Syntax10","name":"Forgetting parentheses after a method call","observations":null}]}]},"fields":null}},{"node":{"id":"407c186d-2c95-5e34-ad56-e9fd95b6ba90","slug":"references/kaczmarczykIdentifyingStudentMisconceptions2010","frontmatter":{"langs":["Java"],"method":"Qualitative (interviews)","subjects":"10 undergraduate students","artifact":null,"phenomenonKinds":[{"name":"Misconceptions","description":"Misconceptions related to memory","phenomena":[{"id":"PVR1","name":"Primitive no default","observations":null},{"id":"MMR4","name":"Uninstantiated memory allocation","observations":null}]}]},"fields":null}},{"node":{"id":"c1590299-4d87-5928-a73e-00d22e8b9331","slug":"references/luIdentifyingCorrectingProgramming2024","frontmatter":{"langs":["SMoL"],"method":"Quantitative systematic research","subjects":"Students from 2 universities and other users of online textbook","artifact":"https://dl.acm.org/do/10.1145/3580432/full/","phenomenonKinds":[{"name":"Programming Language Behavior Misconceptions","description":"Misconceptions about program semantics identified by SMoL Tutor","phenomena":[{"id":"CallByRef","name":"Function calls alias variables","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"CallsCopyStructs","name":"Function calls copy data structures","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"DefByRef","name":"Variable definitions alias variables","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"DefsCopyStructs","name":"Variable definitions copy structures recursively","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"StructByRef","name":"Data structures might refer to variables by their references","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"StructsCopyStructs","name":"Storing data structures into data structures makes copies","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]},{"id":"Lazy","name":"Expressions are only evaluated when their values are needed","observations":[{"measure":"Learners hold misconception","count":null,"maxCount":null}]}]}]},"fields":null}},{"node":{"id":"8115b95c-80f2-5bb8-997d-de4dd2004a34","slug":"references/putnamSummaryMisconceptionsHigh1986","frontmatter":{"langs":["BASIC"],"method":"Qualitative study (interviews)","subjects":"56 high school students showing significant difficulties in a screening test","artifact":null,"phenomenonKinds":[{"name":"Misconceptions","description":"Misconceptions in BASIC","phenomena":[{"id":"IF1","name":"When the condition of an IF statement is false, execution of the entire program terminates","observations":null}]}]},"fields":null}},{"node":{"id":"03614f2f-a24f-5bdd-ab23-93a1145acbb3","slug":"references/ragonisLongtermInvestigationComprehension2005","frontmatter":{"langs":["Java"],"method":"Qualitative study (observations and field notes, audio and video recordings, and collection of artifacts)","subjects":"47 grade 10 students","artifact":null,"phenomenonKinds":[{"name":"Misconceptions/Difficulties","description":"Misconceptions and difficulties related to OOP in Java","phenomena":[{"id":"1.1.3","name":"You can define a method that adds an attribute to the class","observations":null},{"id":"2.3.1","name":"Difficulties understanding the empty constructor","observations":null}]}]},"fields":null}},{"node":{"id":"fbd55579-9697-5bec-9145-11631b1b4ddc","slug":"references/sleemanPascalHighSchool1986","frontmatter":{"langs":["Pascal"],"method":"Qualitative study (interviews)","subjects":"35 high-school students showing significant difficulties in a screening test","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"Errors with Pascal constructs","phenomena":[{"id":"IF1","name":"Program execution is halted if the condition is false and there is no ELSE branch","observations":null}]}]},"fields":null}},{"node":{"id":"809f9c4f-1878-515f-9433-2836c05ddd39","slug":"references/swidanProgrammingMisconceptionsSchool2018","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"145 participants aged 7-17 with programming experience","artifact":"https://drive.google.com/file/d/1Rea75Gjqq4kDGlYBojSnINA96YRXfh_m/view","phenomenonKinds":[{"name":"Programming Misconceptions","description":"Misconceptions from Sorva's list","phenomena":[{"id":"M15","name":"Primitive assignment stores equations or unresolved expressions","observations":[{"measure":"Participants hold misconception","count":16,"maxCount":63}]}]}]},"fields":null}}]}},"pageContext":{"citationKey":"sirkiaExploringProgrammingMisconceptions2012"}},
    "staticQueryHashes": ["3649515864","4169798128"]}