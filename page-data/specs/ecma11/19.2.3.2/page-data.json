{
    "componentChunkName": "component---src-templates-specification-section-js",
    "path": "/specs/ecma11/19.2.3.2",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"name":"ECMAScript Language Specification","version":"11","pl":"JavaScript","home":"https://www.ecma-international.org/ecma-262/11.0/index.html","baseUrl":"https://www.ecma-international.org/ecma-262/11.0/index.html#","sections":[{"section":"4.2.1","title":"Objects","url":"sec-objects"},{"section":"4.3.5","title":"prototype","url":"sec-terms-and-definitions-prototype"},{"section":"4.3.10","title":"undefined value","url":"sec-undefined-value"},{"section":"4.3.11","title":"Undefined type","url":"sec-terms-and-definitions-undefined-type"},{"section":"4.3.12","title":"null value","url":"sec-null-value"},{"section":"4.3.13","title":"Null type","url":"sec-terms-and-definitions-null-type"},{"section":"5.1","title":"Grammar Notation","url":"sec-syntactic-and-lexical-grammars"},{"section":"6.1","title":"ECMAScript Language Types","url":"sec-ecmascript-language-types"},{"section":"7.3.18","title":"LengthOfArrayLike","url":"sec-lengthofarraylike"},{"section":"8.1","title":"Lexical Environments","url":"sec-lexical-environments"},{"section":"9.1","title":"Ordinary Object Internal Methods and Internal Slots","url":"sec-ordinary-object-internal-methods-and-internal-slots"},{"section":"9.4.4","title":"Arguments Exotic Objects","url":"sec-arguments-exotic-objects"},{"section":"13.3.1","title":"Let and Const Declarations","url":"sec-let-and-const-declarations"},{"section":"11.8","title":"Literals","url":"sec-ecmascript-language-lexical-grammar-literals"},{"section":"11.8.4","title":"String Literals","url":"sec-string-literals"},{"section":"12.1","title":"Identifiers","url":"sec-identifiers"},{"section":"12.2.2","title":"The this Keyword","url":"sec-this-keyword"},{"section":"12.3.2","title":"Property Accessors","url":"sec-property-accessors"},{"section":"12.3.6","title":"Function Calls","url":"sec-function-calls"},{"section":"12.5.5","title":"The typeof Operator","url":"sec-typeof-operator"},{"section":"12.7","title":"Multiplicative Operators","url":"sec-multiplicative-operators"},{"section":"12.10.4","title":"IntstanceofOperator (V, target)","url":"sec-instanceofoperator"},{"section":"12.11","title":"Equality Operators","url":"sec-equality-operators"},{"section":"12.14","title":"Conditional Operator","url":"sec-conditional-operator"},{"section":"12.15.4","title":"Runtime semantics evaluation of assignment operators","url":"sec-assignment-operators-runtime-semantics-evaluation"},{"section":"13.5","title":"Expression Statement","url":"sec-expression-statement"},{"section":"14.1","title":"Function Definitions","url":"sec-function-definitions"},{"section":"14.2","title":"Arrow Function Definitions","url":"sec-method-definitions"},{"section":"14.6","title":"Class Definitions","url":"sec-class-definitions"},{"section":"18","title":"The Global Object","url":"sec-global-object"},{"section":"18.1.1","title":"globalThis","url":"sec-globalthis"},{"section":"19.2.3.1","title":"Function.prototype.apply ( thisArg, argArray )","url":"sec-function.prototype.apply"},{"section":"19.2.3.2","title":"Function.prototype.bind ( thisArg, ...args )","url":"sec-function.prototype.bind"},{"section":"19.2.3.3","title":"Function.prototype.call ( thisArg, ...args )","url":"sec-function.prototype.call"},{"section":"19.2.4","title":"Function Instances","url":"sec-function-instances"},{"section":"19.2.4.2","title":"name","url":"sec-function-instances-name"},{"section":"22.1.3.18","title":"Array.prototype.map","url":"sec-array.prototype.map"}]},"parent":{"name":"ecma11"}}]},"mcs":{"totalCount":1,"edges":[{"node":{"fields":{"slug":"/misconceptions/JavaScript/ThisAssignable/","name":"ThisAssignable"},"frontmatter":{"shortDescription":"One can assign to this","text":null}}}]}},"pageContext":{"glob":"**/src/data/specs/ecma11.md","specificationId":"ecma11","sectionId":"19.2.3.2"}},
    "staticQueryHashes": ["3649515864","4169798128"]}