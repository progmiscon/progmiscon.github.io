{
    "componentChunkName": "component---src-templates-misconception-js",
    "path": "/misconceptions/Java/ImmutableRequiresFinalParameters/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"status\": \"draft\",\n  \"shortDescription\": \"Immutable classes need final constructor/method parameters\",\n  \"shortCorrection\": \"Immutable classes can have constructor/method parameters that are not final\",\n  \"concepts\": [\"Mutability\", \"Class\", \"Constructor\", \"Method\", \"Parameter\"],\n  \"related\": [{\n    \"id\": \"ConstructorParameterIsField\",\n    \"relation\": \"Possible cause\"\n  }],\n  \"inOtherPl\": null,\n  \"spec\": [{\n    \"id\": \"jls21\",\n    \"sections\": [\"8.4.1\", \"4.12.4\"]\n  }],\n  \"plVersion\": null,\n  \"expressibleInNms\": [{\n    \"id\": \"StackHeapGlobalDiagram\",\n    \"how\": \"stack frame with final parameters, heap object with final fields\"\n  }]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For a class to be immutable,\\nall parameters of it\\u2019s constructors and methods need to be \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"final\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nstatus: draft\nshortDescription: \"Immutable classes need final constructor/method parameters\"\nshortCorrection: \"Immutable classes can have constructor/method parameters that are not final\"\nconcepts:\n  - Mutability\n  - Class\n  - Constructor\n  - Method\n  - Parameter\nrelated:\n  - id: ConstructorParameterIsField\n    relation: Possible cause\ninOtherPl:\n# - pl: JavaScript\n#   id: ImmutableRequiresFinalParameters\n# - pl: Python\n#   id: ImmutableRequiresFinalParameters\nspec:\n  - id: jls21\n    sections: [\"8.4.1\", \"4.12.4\"]\nplVersion:\n# from: jls8\n# to: jls14\nexpressibleInNms:\n  - id: StackHeapGlobalDiagram\n    how: stack frame with final parameters, heap object with final fields\n---\n\nFor a class to be immutable,\nall parameters of it's constructors and methods need to be `final`.\n","fields":{"name":"ImmutableRequiresFinalParameters","pl":"Java","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8a878","images":{"fallback":{"src":"/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg","srcSet":"/static/40c6db1530671c3291cbfc14f247de04/37bba/default-misconception-image.jpg 750w,\n/static/40c6db1530671c3291cbfc14f247de04/1e21a/default-misconception-image.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/static/40c6db1530671c3291cbfc14f247de04/a66aa/default-misconception-image.webp 750w,\n/static/40c6db1530671c3291cbfc14f247de04/b2a35/default-misconception-image.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5625},"resize":{"src":"/static/40c6db1530671c3291cbfc14f247de04/f7f54/default-misconception-image.jpg","height":512}}},"correction":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Whether or not local variables and constructor and method parameters are \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"final\"), \"\\nhas nothing to do with whether or not the class is immutable.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ImmutableCounter\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"private\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"final\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"int\"), \" count\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"// parameter count is not final\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ImmutableCounter\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"int\"), \" count\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"this\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"count \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" count\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ImmutableCounter\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"increment\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"ImmutableCounter\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"count \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"+\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"Whether or not local variables and constructor and method parameters are `final`\nhas nothing to do with whether or not the class is immutable.\n\n```java\npublic class ImmutableCounter {\n\n  private final int count;\n\n  // parameter count is not final\n  public ImmutableCounter(int count) {\n    this.count = count;\n  }\n\n  public ImmutableCounter increment() {\n    return new ImmutableCounter(count + 1);\n  }\n\n}\n```\n"}},"origin":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This misconception may be related to the belief\\nthat immutability is equivalent to using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"final\"), \" everywhere.\\nIt may reflect a superficial understanding of immutability,\\npossibly originating in an instructors\\u2019 statement like\\n\\u201Cto make a class immutable, make everything final\\u201D,\\npossibly combined with a confusion between shallow and deep immutability.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"This misconception may be related to the belief\nthat immutability is equivalent to using `final` everywhere.\nIt may reflect a superficial understanding of immutability,\npossibly originating in an instructors' statement like\n\"to make a class immutable, make everything final\",\npossibly combined with a confusion between shallow and deep immutability.\n"}},"symptoms":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":""}},"value":{"childMdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":""}}},"frontmatter":{"shortDescription":"Immutable classes need final constructor/method parameters","shortCorrection":"Immutable classes can have constructor/method parameters that are not final","status":"draft","observed":null,"pytamaroActivityVersion":null,"videoId":null,"concepts":["Mutability","Class","Constructor","Method","Parameter"],"related":[{"id":"ConstructorParameterIsField","relation":"Possible cause"}],"inOtherPl":null,"plVersion":null,"expressibleInNms":[{"id":"StackHeapGlobalDiagram","how":"stack frame with final parameters, heap object with final fields"}],"spec":[{"id":"jls21","sections":["8.4.1","4.12.4"]}],"references":null}},"specsMdx":{"nodes":[{"parent":{"name":"ecma10"},"frontmatter":{"pl":"JavaScript","version":"10","sections":null}},{"parent":{"name":"ecma11"},"frontmatter":{"pl":"JavaScript","version":"11","sections":[{"section":"4.2.1","title":"Objects","url":"sec-objects"},{"section":"4.3.5","title":"prototype","url":"sec-terms-and-definitions-prototype"},{"section":"4.3.10","title":"undefined value","url":"sec-undefined-value"},{"section":"4.3.11","title":"Undefined type","url":"sec-terms-and-definitions-undefined-type"},{"section":"4.3.12","title":"null value","url":"sec-null-value"},{"section":"4.3.13","title":"Null type","url":"sec-terms-and-definitions-null-type"},{"section":"5.1","title":"Grammar Notation","url":"sec-syntactic-and-lexical-grammars"},{"section":"6.1","title":"ECMAScript Language Types","url":"sec-ecmascript-language-types"},{"section":"7.3.18","title":"LengthOfArrayLike","url":"sec-lengthofarraylike"},{"section":"8.1","title":"Lexical Environments","url":"sec-lexical-environments"},{"section":"9.1","title":"Ordinary Object Internal Methods and Internal Slots","url":"sec-ordinary-object-internal-methods-and-internal-slots"},{"section":"9.4.4","title":"Arguments Exotic Objects","url":"sec-arguments-exotic-objects"},{"section":"13.3.1","title":"Let and Const Declarations","url":"sec-let-and-const-declarations"},{"section":"11.8","title":"Literals","url":"sec-ecmascript-language-lexical-grammar-literals"},{"section":"11.8.4","title":"String Literals","url":"sec-string-literals"},{"section":"12.1","title":"Identifiers","url":"sec-identifiers"},{"section":"12.2.2","title":"The this Keyword","url":"sec-this-keyword"},{"section":"12.3.2","title":"Property Accessors","url":"sec-property-accessors"},{"section":"12.3.6","title":"Function Calls","url":"sec-function-calls"},{"section":"12.5.5","title":"The typeof Operator","url":"sec-typeof-operator"},{"section":"12.7","title":"Multiplicative Operators","url":"sec-multiplicative-operators"},{"section":"12.10.4","title":"IntstanceofOperator (V, target)","url":"sec-instanceofoperator"},{"section":"12.11","title":"Equality Operators","url":"sec-equality-operators"},{"section":"12.14","title":"Conditional Operator","url":"sec-conditional-operator"},{"section":"12.15.4","title":"Runtime semantics evaluation of assignment operators","url":"sec-assignment-operators-runtime-semantics-evaluation"},{"section":"13.5","title":"Expression Statement","url":"sec-expression-statement"},{"section":"14.1","title":"Function Definitions","url":"sec-function-definitions"},{"section":"14.2","title":"Arrow Function Definitions","url":"sec-method-definitions"},{"section":"14.6","title":"Class Definitions","url":"sec-class-definitions"},{"section":"18","title":"The Global Object","url":"sec-global-object"},{"section":"18.1.1","title":"globalThis","url":"sec-globalthis"},{"section":"19.2.3.1","title":"Function.prototype.apply ( thisArg, argArray )","url":"sec-function.prototype.apply"},{"section":"19.2.3.2","title":"Function.prototype.bind ( thisArg, ...args )","url":"sec-function.prototype.bind"},{"section":"19.2.3.3","title":"Function.prototype.call ( thisArg, ...args )","url":"sec-function.prototype.call"},{"section":"19.2.4","title":"Function Instances","url":"sec-function-instances"},{"section":"19.2.4.2","title":"name","url":"sec-function-instances-name"},{"section":"22.1.3.18","title":"Array.prototype.map","url":"sec-array.prototype.map"}]}},{"parent":{"name":"ecma5"},"frontmatter":{"pl":"JavaScript","version":"5","sections":null}},{"parent":{"name":"ecma6"},"frontmatter":{"pl":"JavaScript","version":"6","sections":null}},{"parent":{"name":"ecma7"},"frontmatter":{"pl":"JavaScript","version":"7","sections":null}},{"parent":{"name":"ecma8"},"frontmatter":{"pl":"JavaScript","version":"8","sections":null}},{"parent":{"name":"ecma9"},"frontmatter":{"pl":"JavaScript","version":"9","sections":null}},{"parent":{"name":"jls1"},"frontmatter":{"pl":"Java","version":"First Edition","sections":null}},{"parent":{"name":"jls11"},"frontmatter":{"pl":"Java","version":"Java SE 11 Edition","sections":null}},{"parent":{"name":"jls12"},"frontmatter":{"pl":"Java","version":"Java SE 12 Edition","sections":null}},{"parent":{"name":"jls13"},"frontmatter":{"pl":"Java","version":"Java SE 13 Edition","sections":[{"section":"3.9","title":"Keywords","url":"3.html#jls-3.9"},{"section":"3.10.1","title":"Integer Literals","url":"3.html#jls-3.10.1"},{"section":"3.10.2","title":"Floating-Point Literals","url":"3.html#jls-3.10.2"},{"section":"3.10.5","title":"String Literals","url":"3.html#jls-3.10.5"},{"section":"3.10.7","title":"The Null Literal","url":"3.html#jls-3.10.7"},{"section":"4.1","title":"The Kinds of Types and Values","url":"4.html#jls-4.1"},{"section":"4.2.1","title":"Integral Types and Values","url":"4.html#jls-4.2.1"},{"section":"4.2.5","title":"The boolean Type and boolean Values","url":"4.html#jls-4.2.5"},{"section":"4.3.1","title":"Objects","url":"4.html#jls-4.3.1"},{"section":"4.3.2","title":"The Class Object","url":"4.html#jls-4.3.2"},{"section":"4.12","title":"Variables","url":"4.html#jls-4.12"},{"section":"4.12.2","title":"Variables of Reference Type","url":"4.html#jls-4.12.2"},{"section":"4.12.3","title":"Kinds of Variables","url":"4.html#jls-4.12.3"},{"section":"4.12.4","title":"final Variables","url":"4.html#jls-4.12.4"},{"section":"5.1","title":"Kinds of Conversion","url":"5.html#jls-5.1.11"},{"section":"5.1.8","title":"Unboxing Conversion","url":"5.html#jls-5.1.8"},{"section":"5.1.11","title":"String Conversion","url":"5.html#jls-5.1.11"},{"section":"6.3","title":"Scope of a Declaration","url":"6.html#jls-6.3"},{"section":"6.6.1","title":"Determining Accessibility","url":"6.html#jls-6.6.1"},{"section":"7","title":"Packages and Modules","url":"7.html#jls-7"},{"section":"8.1","title":"Class Declarations","url":"8.html#jls-8.1"},{"section":"8.1.1.1","title":"Abstract Classes","url":"8.html#jls-8.1.1.1"},{"section":"8.2","title":"Class Members","url":"8.html#jls-8.2"},{"section":"8.3","title":"Field Declarations","url":"8.html#jls-8.3"},{"section":"8.3.2","title":"Field Initialization","url":"8.html#jls-8.3.2"},{"section":"8.4","title":"Method Declarations","url":"8.html#jls-8.4"},{"section":"8.4.1","title":"Formal Parameters","url":"8.html#jls-8.4.1"},{"section":"8.4.3.1","title":"Abstract Methods","url":"8.html#jls-8.4.3.1"},{"section":"8.8","title":"Constructor Declarations","url":"8.html#jls-8.8"},{"section":"8.8.1","title":"Formal Parameters","url":"8.html#jls-8.8.1"},{"section":"8.8.9","title":"Default Constructor","url":"8.html#jls-8.8.9"},{"section":"10.1","title":"Array Types","url":"10.html#jls-10.1"},{"section":"10.3","title":"Array Creation","url":"10.html#jls-10.3"},{"section":"10.2","title":"Array Variables","url":"10.html#jls-10.2"},{"section":"10.4","title":"Array Access","url":"10.html#jls-10.4"},{"section":"10.6","title":"Array Initializers","url":"10.html#jls-10.6"},{"section":"10.7","title":"Array Members","url":"10.html#jls-10.7"},{"section":"11.1.1","title":"The Kinds of Exceptions","url":"11.html#jls-11.1.1"},{"section":"12.5","title":"Creation of New Class Instances","url":"12.html#jls-12.5"},{"section":"14.4","title":"Local Variable Declaration Statements","url":"14.html#jls-14.4"},{"section":"14.4.1","title":"Local Variable Declarators and Types","url":"14.html#jls-14.4.1"},{"section":"14.4.2","title":"Execution of Local Variable Declarations","url":"14.html#jls-14.4.2"},{"section":"14.8","title":"Expression Statements","url":"14.html#jls-14.8"},{"section":"14.9","title":"The if Statement","url":"14.html#jls-14.9"},{"section":"14.9.2","title":"The if-then-else Statement","url":"14.html#jls-14.9.2"},{"section":"14.14","title":"The for Statement","url":"14.html#jls-14.14"},{"section":"14.14.1.2","title":"Iteration of for Statement","url":"14.html#jls-14.14.1.2"},{"section":"14.14.2","title":"The enhanced for statement","url":"14.html#jls-14.14.2"},{"section":"14.17","title":"The return Statement","url":"14.html#jls-14.17"},{"section":"15","title":"Expressions","url":"15.html#jls-15"},{"section":"15.2","title":"Forms of Expressions","url":"15.html#jls-15.2"},{"section":"15.3","title":"Type of an Expression","url":"15.html#jls-15.3"},{"section":"15.8","title":"Primary Expressions","url":"15.html#jls-15.8"},{"section":"15.8.3","title":"this","url":"15.html#jls-15.8.3"},{"section":"15.8.5","title":"Parenthesized Expressions","url":"15.html#jls-15.8.5"},{"section":"15.9","title":"Class Instance Creation Expressions","url":"15.html#jls-15.9"},{"section":"15.10.1","title":"Array Creation Expressions","url":"15.html#jls-15.10.1"},{"section":"15.10.2","title":"Run-Time Evaluation of Array Creation Expressions","url":"15.html#jls-15.10.2"},{"section":"15.11","title":"Field Access Expressions","url":"15.html#jls-15.11"},{"section":"15.12","title":"Method Invocation Expressions","url":"15.html#jls-15.12"},{"section":"15.14.2","title":"Postfix Increment Operator ++","url":"15.html#jls-15.14.2"},{"section":"15.15.1","title":"Prefix Increment Operator ++","url":"15.html#jls-15.15.1"},{"section":"15.17","title":"Multiplicative Operators","url":"15.html#jls-15.17"},{"section":"15.18","title":"Additive Operators","url":"15.html#jls-15.18"},{"section":"15.18.1","title":"String Concatenation Operator +","url":"15.html#jls-15.18.1"},{"section":"15.21","title":"Equality Operators","url":"15.html#jls-15.21"},{"section":"15.21.2","title":"Boolean Equality Operators == and !=","url":"15.html#jls-15.21.2"},{"section":"15.22.1","title":"Integer Bitwise Operators &, ^, and |","url":"15.html#jls-15.22.1"},{"section":"15.22.2","title":"Boolean Logical Operators &, ^, and |","url":"15.html#jls-15.22.2"},{"section":"15.23","title":"Conditional-And Operator &&","url":"15.html#jls-15.23"},{"section":"15.24","title":"Conditional-Or Operator ||","url":"15.html#jls-15.24"},{"section":"15.25","title":"Conditional Operator ? :","url":"15.html#jls-15.25"},{"section":"15.26","title":"Assignment Operators","url":"15.html#jls-15.26"},{"section":"16","title":"Definite Assignment","url":"16.html"}]}},{"parent":{"name":"jls14"},"frontmatter":{"pl":"Java","version":"Java SE 14 Edition","sections":null}},{"parent":{"name":"jls15"},"frontmatter":{"pl":"Java","version":"Java SE 15 Edition","sections":null}},{"parent":{"name":"jls16"},"frontmatter":{"pl":"Java","version":"Java SE 16 Edition","sections":null}},{"parent":{"name":"jls10"},"frontmatter":{"pl":"Java","version":"Java SE 10 Edition","sections":null}},{"parent":{"name":"jls17"},"frontmatter":{"pl":"Java","version":"Java SE 17 Edition","sections":null}},{"parent":{"name":"jls18"},"frontmatter":{"pl":"Java","version":"Java SE 18 Edition","sections":null}},{"parent":{"name":"jls19"},"frontmatter":{"pl":"Java","version":"Java SE 19 Edition","sections":null}},{"parent":{"name":"jls2"},"frontmatter":{"pl":"Java","version":"Second Edition","sections":null}},{"parent":{"name":"jls20"},"frontmatter":{"pl":"Java","version":"Java SE 20 Edition","sections":null}},{"parent":{"name":"jls21"},"frontmatter":{"pl":"Java","version":"Java SE 21 Edition","sections":[{"section":"1","title":"Introduction","url":"1.html#jls-1"},{"section":"1.1","title":"Organization of the Specification","url":"1.html#jls-1.1"},{"section":"1.2","title":"Example Programs","url":"1.html#jls-1.2"},{"section":"1.3","title":"Notation","url":"1.html#jls-1.3"},{"section":"1.4","title":"Relationship to Predefined Classes and Interfaces","url":"1.html#jls-1.4"},{"section":"1.5","title":"Preview Features","url":"1.html#jls-1.5"},{"section":"1.6","title":"Feedback","url":"1.html#jls-1.6"},{"section":"1.7","title":"References","url":"1.html#jls-1.7"},{"section":"2","title":"Grammars","url":"2.html#jls-2"},{"section":"2.1","title":"Context-Free Grammars","url":"2.html#jls-2.1"},{"section":"2.2","title":"The Lexical Grammar","url":"2.html#jls-2.2"},{"section":"2.3","title":"The Syntactic Grammar","url":"2.html#jls-2.3"},{"section":"2.4","title":"Grammar Notation","url":"2.html#jls-2.4"},{"section":"3","title":"Lexical Structure","url":"3.html#jls-3"},{"section":"3.1","title":"Unicode","url":"3.html#jls-3.1"},{"section":"3.2","title":"Lexical Translations","url":"3.html#jls-3.2"},{"section":"3.3","title":"Unicode Escapes","url":"3.html#jls-3.3"},{"section":"3.4","title":"Line Terminators","url":"3.html#jls-3.4"},{"section":"3.5","title":"Input Elements and Tokens","url":"3.html#jls-3.5"},{"section":"3.6","title":"White Space","url":"3.html#jls-3.6"},{"section":"3.7","title":"Comments","url":"3.html#jls-3.7"},{"section":"3.8","title":"Identifiers","url":"3.html#jls-3.8"},{"section":"3.9","title":"Keywords","url":"3.html#jls-3.9"},{"section":"3.10","title":"Literals","url":"3.html#jls-3.10"},{"section":"3.10.1","title":"Integer Literals","url":"3.html#jls-3.10.1"},{"section":"3.10.2","title":"Floating-Point Literals","url":"3.html#jls-3.10.2"},{"section":"3.10.3","title":"Boolean Literals","url":"3.html#jls-3.10.3"},{"section":"3.10.4","title":"Character Literals","url":"3.html#jls-3.10.4"},{"section":"3.10.5","title":"String Literals","url":"3.html#jls-3.10.5"},{"section":"3.10.6","title":"Text Blocks","url":"3.html#jls-3.10.6"},{"section":"3.10.7","title":"Escape Sequences","url":"3.html#jls-3.10.7"},{"section":"3.10.8","title":"The Null Literal","url":"3.html#jls-3.10.8"},{"section":"3.11","title":"Separators","url":"3.html#jls-3.11"},{"section":"3.12","title":"Operators","url":"3.html#jls-3.12"},{"section":"4","title":"Types, Values, and Variables","url":"4.html#jls-4"},{"section":"4.1","title":"The Kinds of Types and Values","url":"4.html#jls-4.1"},{"section":"4.2","title":"Primitive Types and Values","url":"4.html#jls-4.2"},{"section":"4.2.1","title":"Integral Types and Values","url":"4.html#jls-4.2.1"},{"section":"4.2.2","title":"Integer Operations","url":"4.html#jls-4.2.2"},{"section":"4.2.3","title":"Floating-Point Types and Values","url":"4.html#jls-4.2.3"},{"section":"4.2.4","title":"Floating-Point Operations","url":"4.html#jls-4.2.4"},{"section":"4.2.5","title":"The boolean Type and boolean Values","url":"4.html#jls-4.2.5"},{"section":"4.3","title":"Reference Types and Values","url":"4.html#jls-4.3"},{"section":"4.3.1","title":"Objects","url":"4.html#jls-4.3.1"},{"section":"4.3.2","title":"The Class Object","url":"4.html#jls-4.3.2"},{"section":"4.3.3","title":"The Class String","url":"4.html#jls-4.3.3"},{"section":"4.3.4","title":"When Reference Types Are the Same","url":"4.html#jls-4.3.4"},{"section":"4.4","title":"Type Variables","url":"4.html#jls-4.4"},{"section":"4.5","title":"Parameterized Types","url":"4.html#jls-4.5"},{"section":"4.5.1","title":"Type Arguments of Parameterized Types","url":"4.html#jls-4.5.1"},{"section":"4.5.2","title":"Members and Constructors of Parameterized Types","url":"4.html#jls-4.5.2"},{"section":"4.6","title":"Type Erasure","url":"4.html#jls-4.6"},{"section":"4.7","title":"Reifiable Types","url":"4.html#jls-4.7"},{"section":"4.8","title":"Raw Types","url":"4.html#jls-4.8"},{"section":"4.9","title":"Intersection Types","url":"4.html#jls-4.9"},{"section":"4.10","title":"Subtyping","url":"4.html#jls-4.10"},{"section":"4.10.1","title":"Subtyping among Primitive Types","url":"4.html#jls-4.10.1"},{"section":"4.10.2","title":"Subtyping among Class and Interface Types","url":"4.html#jls-4.10.2"},{"section":"4.10.3","title":"Subtyping among Array Types","url":"4.html#jls-4.10.3"},{"section":"4.10.4","title":"Least Upper Bound","url":"4.html#jls-4.10.4"},{"section":"4.10.5","title":"Type Projections","url":"4.html#jls-4.10.5"},{"section":"4.11","title":"Where Types Are Used","url":"4.html#jls-4.11"},{"section":"4.12","title":"Variables","url":"4.html#jls-4.12"},{"section":"4.12.1","title":"Variables of Primitive Type","url":"4.html#jls-4.12.1"},{"section":"4.12.2","title":"Variables of Reference Type","url":"4.html#jls-4.12.2"},{"section":"4.12.3","title":"Kinds of Variables","url":"4.html#jls-4.12.3"},{"section":"4.12.4","title":"final Variables","url":"4.html#jls-4.12.4"},{"section":"4.12.5","title":"Initial Values of Variables","url":"4.html#jls-4.12.5"},{"section":"4.12.6","title":"Types, Classes, and Interfaces","url":"4.html#jls-4.12.6"},{"section":"5","title":"Conversions and Contexts","url":"5.html#jls-5"},{"section":"5.1","title":"Kinds of Conversion","url":"5.html#jls-5.1"},{"section":"5.1.1","title":"Identity Conversion","url":"5.html#jls-5.1.1"},{"section":"5.1.2","title":"Widening Primitive Conversion","url":"5.html#jls-5.1.2"},{"section":"5.1.3","title":"Narrowing Primitive Conversion","url":"5.html#jls-5.1.3"},{"section":"5.1.4","title":"Widening and Narrowing Primitive Conversion","url":"5.html#jls-5.1.4"},{"section":"5.1.5","title":"Widening Reference Conversion","url":"5.html#jls-5.1.5"},{"section":"5.1.6","title":"Narrowing Reference Conversion","url":"5.html#jls-5.1.6"},{"section":"5.1.6.1","title":"Allowed Narrowing Reference Conversion","url":"5.html#jls-5.1.6.1"},{"section":"5.1.6.2","title":"Checked and Unchecked Narrowing Reference Conversions","url":"5.html#jls-5.1.6.2"},{"section":"5.1.6.3","title":"Narrowing Reference Conversions at Run Time","url":"5.html#jls-5.1.6.3"},{"section":"5.1.7","title":"Boxing Conversion","url":"5.html#jls-5.1.7"},{"section":"5.1.8","title":"Unboxing Conversion","url":"5.html#jls-5.1.8"},{"section":"5.1.9","title":"Unchecked Conversion","url":"5.html#jls-5.1.9"},{"section":"5.1.10","title":"Capture Conversion","url":"5.html#jls-5.1.10"},{"section":"5.1.11","title":"String Conversion","url":"5.html#jls-5.1.11"},{"section":"5.1.12","title":"Forbidden Conversions","url":"5.html#jls-5.1.12"},{"section":"5.2","title":"Assignment Contexts","url":"5.html#jls-5.2"},{"section":"5.3","title":"Invocation Contexts","url":"5.html#jls-5.3"},{"section":"5.4","title":"String Contexts","url":"5.html#jls-5.4"},{"section":"5.5","title":"Casting Contexts","url":"5.html#jls-5.5"},{"section":"5.6","title":"Numeric Contexts","url":"5.html#jls-5.6"},{"section":"6","title":"Names","url":"6.html#jls-6"},{"section":"6.1","title":"Declarations","url":"6.html#jls-6.1"},{"section":"6.2","title":"Names and Identifiers","url":"6.html#jls-6.2"},{"section":"6.3","title":"Scope of a Declaration","url":"6.html#jls-6.3"},{"section":"6.3.1","title":"Scope for Pattern Variables in Expressions","url":"6.html#jls-6.3.1"},{"section":"6.3.1.1","title":"Conditional-And Operator &&","url":"6.html#jls-6.3.1.1"},{"section":"6.3.1.2","title":"Conditional-Or Operator ||","url":"6.html#jls-6.3.1.2"},{"section":"6.3.1.3","title":"Logical Complement Operator !","url":"6.html#jls-6.3.1.3"},{"section":"6.3.1.4","title":"Conditional Operator ? :","url":"6.html#jls-6.3.1.4"},{"section":"6.3.1.5","title":"Pattern Match Operator instanceof","url":"6.html#jls-6.3.1.5"},{"section":"6.3.1.6","title":"switch Expressions","url":"6.html#jls-6.3.1.6"},{"section":"6.3.1.7","title":"Parenthesized Expressions","url":"6.html#jls-6.3.1.7"},{"section":"6.3.2","title":"Scope for Pattern Variables in Statements","url":"6.html#jls-6.3.2"},{"section":"6.3.2.1","title":"Blocks","url":"6.html#jls-6.3.2.1"},{"section":"6.3.2.2","title":"if Statements","url":"6.html#jls-6.3.2.2"},{"section":"6.3.2.3","title":"while Statements","url":"6.html#jls-6.3.2.3"},{"section":"6.3.2.4","title":"do Statements","url":"6.html#jls-6.3.2.4"},{"section":"6.3.2.5","title":"for Statements","url":"6.html#jls-6.3.2.5"},{"section":"6.3.2.6","title":"switch Statements","url":"6.html#jls-6.3.2.6"},{"section":"6.3.2.7","title":"Labeled Statements","url":"6.html#jls-6.3.2.7"},{"section":"6.4","title":"Shadowing and Obscuring","url":"6.html#jls-6.4"},{"section":"6.4.1","title":"Shadowing","url":"6.html#jls-6.4.1"},{"section":"6.4.2","title":"Obscuring","url":"6.html#jls-6.4.2"},{"section":"6.5","title":"Determining the Meaning of a Name","url":"6.html#jls-6.5"},{"section":"6.5.1","title":"Syntactic Classification of a Name According to Context","url":"6.html#jls-6.5.1"},{"section":"6.5.2","title":"Reclassification of Contextually Ambiguous Names","url":"6.html#jls-6.5.2"},{"section":"6.5.3","title":"Meaning of Module Names and Package Names","url":"6.html#jls-6.5.3"},{"section":"6.5.3.1","title":"Simple Package Names","url":"6.html#jls-6.5.3.1"},{"section":"6.5.3.2","title":"Qualified Package Names","url":"6.html#jls-6.5.3.2"},{"section":"6.5.4","title":"Meaning of PackageOrTypeNames","url":"6.html#jls-6.5.4"},{"section":"6.5.4.1","title":"Simple PackageOrTypeNames","url":"6.html#jls-6.5.4.1"},{"section":"6.5.4.2","title":"Qualified PackageOrTypeNames","url":"6.html#jls-6.5.4.2"},{"section":"6.5.5","title":"Meaning of Type Names","url":"6.html#jls-6.5.5"},{"section":"6.5.5.1","title":"Simple Type Names","url":"6.html#jls-6.5.5.1"},{"section":"6.5.5.2","title":"Qualified Type Names","url":"6.html#jls-6.5.5.2"},{"section":"6.5.6","title":"Meaning of Expression Names","url":"6.html#jls-6.5.6"},{"section":"6.5.6.1","title":"Simple Expression Names","url":"6.html#jls-6.5.6.1"},{"section":"6.5.6.2","title":"Qualified Expression Names","url":"6.html#jls-6.5.6.2"},{"section":"6.5.7","title":"Meaning of Method Names","url":"6.html#jls-6.5.7"},{"section":"6.5.7.1","title":"Simple Method Names","url":"6.html#jls-6.5.7.1"},{"section":"6.6","title":"Access Control","url":"6.html#jls-6.6"},{"section":"6.6.1","title":"Determining Accessibility","url":"6.html#jls-6.6.1"},{"section":"6.6.2","title":"Details on protected Access","url":"6.html#jls-6.6.2"},{"section":"6.6.2.1","title":"Access to a protected Member","url":"6.html#jls-6.6.2.1"},{"section":"6.6.2.2","title":"Access to a protected Constructor","url":"6.html#jls-6.6.2.2"},{"section":"6.7","title":"Fully Qualified Names and Canonical Names","url":"6.html#jls-6.7"},{"section":"7","title":"Packages and Modules","url":"7.html#jls-7"},{"section":"7.1","title":"Package Members","url":"7.html#jls-7.1"},{"section":"7.2","title":"Host Support for Modules and Packages","url":"7.html#jls-7.2"},{"section":"7.3","title":"Compilation Units","url":"7.html#jls-7.3"},{"section":"7.4","title":"Package Declarations","url":"7.html#jls-7.4"},{"section":"7.4.1","title":"Named Packages","url":"7.html#jls-7.4.1"},{"section":"7.4.2","title":"Unnamed Packages","url":"7.html#jls-7.4.2"},{"section":"7.4.3","title":"Package Observability and Visibility","url":"7.html#jls-7.4.3"},{"section":"7.5","title":"Import Declarations","url":"7.html#jls-7.5"},{"section":"7.5.1","title":"Single-Type-Import Declarations","url":"7.html#jls-7.5.1"},{"section":"7.5.2","title":"Type-Import-on-Demand Declarations","url":"7.html#jls-7.5.2"},{"section":"7.5.3","title":"Single-Static-Import Declarations","url":"7.html#jls-7.5.3"},{"section":"7.5.4","title":"Static-Import-on-Demand Declarations","url":"7.html#jls-7.5.4"},{"section":"7.6","title":"Top Level Class and Interface Declarations","url":"7.html#jls-7.6"},{"section":"7.7","title":"Module Declarations","url":"7.html#jls-7.7"},{"section":"7.7.1","title":"Dependences","url":"7.html#jls-7.7.1"},{"section":"7.7.2","title":"Exported and Opened Packages","url":"7.html#jls-7.7.2"},{"section":"7.7.3","title":"Service Consumption","url":"7.html#jls-7.7.3"},{"section":"7.7.4","title":"Service Provision","url":"7.html#jls-7.7.4"},{"section":"7.7.5","title":"Unnamed Modules","url":"7.html#jls-7.7.5"},{"section":"7.7.6","title":"Observability of a Module","url":"7.html#jls-7.7.6"},{"section":"8","title":"Classes","url":"8.html#jls-8"},{"section":"8.1","title":"Class Declarations","url":"8.html#jls-8.1"},{"section":"8.1.1","title":"Class Modifiers","url":"8.html#jls-8.1.1"},{"section":"8.1.1.1","title":"abstract Classes","url":"8.html#jls-8.1.1.1"},{"section":"8.1.1.2","title":"sealed, non-sealed, and final Classes","url":"8.html#jls-8.1.1.2"},{"section":"8.1.1.3","title":"strictfp Classes","url":"8.html#jls-8.1.1.3"},{"section":"8.1.1.4","title":"static Classes","url":"8.html#jls-8.1.1.4"},{"section":"8.1.2","title":"Generic Classes and Type Parameters","url":"8.html#jls-8.1.2"},{"section":"8.1.3","title":"Inner Classes and Enclosing Instances","url":"8.html#jls-8.1.3"},{"section":"8.1.4","title":"Superclasses and Subclasses","url":"8.html#jls-8.1.4"},{"section":"8.1.5","title":"Superinterfaces","url":"8.html#jls-8.1.5"},{"section":"8.1.6","title":"Permitted Direct Subclasses","url":"8.html#jls-8.1.6"},{"section":"8.1.7","title":"Class Body and Member Declarations","url":"8.html#jls-8.1.7"},{"section":"8.2","title":"Class Members","url":"8.html#jls-8.2"},{"section":"8.3","title":"Field Declarations","url":"8.html#jls-8.3"},{"section":"8.3.1","title":"Field Modifiers","url":"8.html#jls-8.3.1"},{"section":"8.3.1.1","title":"static Fields","url":"8.html#jls-8.3.1.1"},{"section":"8.3.1.2","title":"final Fields","url":"8.html#jls-8.3.1.2"},{"section":"8.3.1.3","title":"transient Fields","url":"8.html#jls-8.3.1.3"},{"section":"8.3.1.4","title":"volatile Fields","url":"8.html#jls-8.3.1.4"},{"section":"8.3.2","title":"Field Initialization","url":"8.html#jls-8.3.2"},{"section":"8.3.3","title":"Restrictions on Field References in Initializers","url":"8.html#jls-8.3.3"},{"section":"8.4","title":"Method Declarations","url":"8.html#jls-8.4"},{"section":"8.4.1","title":"Formal Parameters","url":"8.html#jls-8.4.1"},{"section":"8.4.2","title":"Method Signature","url":"8.html#jls-8.4.2"},{"section":"8.4.3","title":"Method Modifiers","url":"8.html#jls-8.4.3"},{"section":"8.4.3.1","title":"abstract Methods","url":"8.html#jls-8.4.3.1"},{"section":"8.4.3.2","title":"static Methods","url":"8.html#jls-8.4.3.2"},{"section":"8.4.3.3","title":"final Methods","url":"8.html#jls-8.4.3.3"},{"section":"8.4.3.4","title":"native Methods","url":"8.html#jls-8.4.3.4"},{"section":"8.4.3.5","title":"strictfp Methods","url":"8.html#jls-8.4.3.5"},{"section":"8.4.3.6","title":"synchronized Methods","url":"8.html#jls-8.4.3.6"},{"section":"8.4.4","title":"Generic Methods","url":"8.html#jls-8.4.4"},{"section":"8.4.5","title":"Method Result","url":"8.html#jls-8.4.5"},{"section":"8.4.6","title":"Method Throws","url":"8.html#jls-8.4.6"},{"section":"8.4.7","title":"Method Body","url":"8.html#jls-8.4.7"},{"section":"8.4.8","title":"Inheritance, Overriding, and Hiding","url":"8.html#jls-8.4.8"},{"section":"8.4.8.1","title":"Overriding (by Instance Methods)","url":"8.html#jls-8.4.8.1"},{"section":"8.4.8.2","title":"Hiding (by Class Methods)","url":"8.html#jls-8.4.8.2"},{"section":"8.4.8.3","title":"Requirements in Overriding and Hiding","url":"8.html#jls-8.4.8.3"},{"section":"8.4.8.4","title":"Inheriting Methods with Override-Equivalent Signatures","url":"8.html#jls-8.4.8.4"},{"section":"8.4.9","title":"Overloading","url":"8.html#jls-8.4.9"},{"section":"8.5","title":"Member Class and Interface Declarations","url":"8.html#jls-8.5"},{"section":"8.6","title":"Instance Initializers","url":"8.html#jls-8.6"},{"section":"8.7","title":"Static Initializers","url":"8.html#jls-8.7"},{"section":"8.8","title":"Constructor Declarations","url":"8.html#jls-8.8"},{"section":"8.8.1","title":"Formal Parameters","url":"8.html#jls-8.8.1"},{"section":"8.8.2","title":"Constructor Signature","url":"8.html#jls-8.8.2"},{"section":"8.8.3","title":"Constructor Modifiers","url":"8.html#jls-8.8.3"},{"section":"8.8.4","title":"Generic Constructors","url":"8.html#jls-8.8.4"},{"section":"8.8.5","title":"Constructor Throws","url":"8.html#jls-8.8.5"},{"section":"8.8.6","title":"The Type of a Constructor","url":"8.html#jls-8.8.6"},{"section":"8.8.7","title":"Constructor Body","url":"8.html#jls-8.8.7"},{"section":"8.8.7.1","title":"Explicit Constructor Invocations","url":"8.html#jls-8.8.7.1"},{"section":"8.8.8","title":"Constructor Overloading","url":"8.html#jls-8.8.8"},{"section":"8.8.9","title":"Default Constructor","url":"8.html#jls-8.8.9"},{"section":"8.8.10","title":"Preventing Instantiation of a Class","url":"8.html#jls-8.8.10"},{"section":"8.9","title":"Enum Classes","url":"8.html#jls-8.9"},{"section":"8.9.1","title":"Enum Constants","url":"8.html#jls-8.9.1"},{"section":"8.9.2","title":"Enum Body Declarations","url":"8.html#jls-8.9.2"},{"section":"8.9.3","title":"Enum Members","url":"8.html#jls-8.9.3"},{"section":"8.10","title":"Record Classes","url":"8.html#jls-8.10"},{"section":"8.10.1","title":"Record Components","url":"8.html#jls-8.10.1"},{"section":"8.10.2","title":"Record Body Declarations","url":"8.html#jls-8.10.2"},{"section":"8.10.3","title":"Record Members","url":"8.html#jls-8.10.3"},{"section":"8.10.4","title":"Record Constructor Declarations","url":"8.html#jls-8.10.4"},{"section":"8.10.4.1","title":"Normal Canonical Constructors","url":"8.html#jls-8.10.4.1"},{"section":"8.10.4.2","title":"Compact Canonical Constructors","url":"8.html#jls-8.10.4.2"},{"section":"9","title":"Interfaces","url":"9.html#jls-9"},{"section":"9.1","title":"Interface Declarations","url":"9.html#jls-9.1"},{"section":"9.1.1","title":"Interface Modifiers","url":"9.html#jls-9.1.1"},{"section":"9.1.1.1","title":"abstract Interfaces","url":"9.html#jls-9.1.1.1"},{"section":"9.1.1.2","title":"strictfp Interfaces","url":"9.html#jls-9.1.1.2"},{"section":"9.1.1.3","title":"static Interfaces","url":"9.html#jls-9.1.1.3"},{"section":"9.1.1.4","title":"sealed and non-sealed Interfaces","url":"9.html#jls-9.1.1.4"},{"section":"9.1.2","title":"Generic Interfaces and Type Parameters","url":"9.html#jls-9.1.2"},{"section":"9.1.3","title":"Superinterfaces and Subinterfaces","url":"9.html#jls-9.1.3"},{"section":"9.1.4","title":"Permitted Direct Subclasses and Subinterfaces","url":"9.html#jls-9.1.4"},{"section":"9.1.5","title":"Interface Body and Member Declarations","url":"9.html#jls-9.1.5"},{"section":"9.2","title":"Interface Members","url":"9.html#jls-9.2"},{"section":"9.3","title":"Field (Constant) Declarations","url":"9.html#jls-9.3"},{"section":"9.3.1","title":"Initialization of Fields in Interfaces","url":"9.html#jls-9.3.1"},{"section":"9.4","title":"Method Declarations","url":"9.html#jls-9.4"},{"section":"9.4.1","title":"Inheritance and Overriding","url":"9.html#jls-9.4.1"},{"section":"9.4.1.1","title":"Overriding (by Instance Methods)","url":"9.html#jls-9.4.1.1"},{"section":"9.4.1.2","title":"Requirements in Overriding","url":"9.html#jls-9.4.1.2"},{"section":"9.4.1.3","title":"Inheriting Methods with Override-Equivalent Signatures","url":"9.html#jls-9.4.1.3"},{"section":"9.4.2","title":"Overloading","url":"9.html#jls-9.4.2"},{"section":"9.4.3","title":"Interface Method Body","url":"9.html#jls-9.4.3"},{"section":"9.5","title":"Member Class and Interface Declarations","url":"9.html#jls-9.5"},{"section":"9.6","title":"Annotation Interfaces","url":"9.html#jls-9.6"},{"section":"9.6.1","title":"Annotation Interface Elements","url":"9.html#jls-9.6.1"},{"section":"9.6.2","title":"Defaults for Annotation Interface Elements","url":"9.html#jls-9.6.2"},{"section":"9.6.3","title":"Repeatable Annotation Interfaces","url":"9.html#jls-9.6.3"},{"section":"9.6.4","title":"Predefined Annotation Interfaces","url":"9.html#jls-9.6.4"},{"section":"9.6.4.1","title":"@Target","url":"9.html#jls-9.6.4.1"},{"section":"9.6.4.2","title":"@Retention","url":"9.html#jls-9.6.4.2"},{"section":"9.6.4.3","title":"@Inherited","url":"9.html#jls-9.6.4.3"},{"section":"9.6.4.4","title":"@Override","url":"9.html#jls-9.6.4.4"},{"section":"9.6.4.5","title":"@SuppressWarnings","url":"9.html#jls-9.6.4.5"},{"section":"9.6.4.6","title":"@Deprecated","url":"9.html#jls-9.6.4.6"},{"section":"9.6.4.7","title":"@SafeVarargs","url":"9.html#jls-9.6.4.7"},{"section":"9.6.4.8","title":"@Repeatable","url":"9.html#jls-9.6.4.8"},{"section":"9.6.4.9","title":"@FunctionalInterface","url":"9.html#jls-9.6.4.9"},{"section":"9.7","title":"Annotations","url":"9.html#jls-9.7"},{"section":"9.7.1","title":"Normal Annotations","url":"9.html#jls-9.7.1"},{"section":"9.7.2","title":"Marker Annotations","url":"9.html#jls-9.7.2"},{"section":"9.7.3","title":"Single-Element Annotations","url":"9.html#jls-9.7.3"},{"section":"9.7.4","title":"Where Annotations May Appear","url":"9.html#jls-9.7.4"},{"section":"9.7.5","title":"Multiple Annotations of the Same Interface","url":"9.html#jls-9.7.5"},{"section":"9.8","title":"Functional Interfaces","url":"9.html#jls-9.8"},{"section":"9.9","title":"Function Types","url":"9.html#jls-9.9"},{"section":"10","title":"Arrays","url":"10.html#jls-10"},{"section":"10.1","title":"Array Types","url":"10.html#jls-10.1"},{"section":"10.2","title":"Array Variables","url":"10.html#jls-10.2"},{"section":"10.3","title":"Array Creation","url":"10.html#jls-10.3"},{"section":"10.4","title":"Array Access","url":"10.html#jls-10.4"},{"section":"10.5","title":"Array Store Exception","url":"10.html#jls-10.5"},{"section":"10.6","title":"Array Initializers","url":"10.html#jls-10.6"},{"section":"10.7","title":"Array Members","url":"10.html#jls-10.7"},{"section":"10.8","title":"Class Objects for Arrays","url":"10.html#jls-10.8"},{"section":"10.9","title":"An Array of Characters Is Not a String","url":"10.html#jls-10.9"},{"section":"11","title":"Exceptions","url":"11.html#jls-11"},{"section":"11.1","title":"The Kinds and Causes of Exceptions","url":"11.html#jls-11.1"},{"section":"11.1.1","title":"The Kinds of Exceptions","url":"11.html#jls-11.1.1"},{"section":"11.1.2","title":"The Causes of Exceptions","url":"11.html#jls-11.1.2"},{"section":"11.1.3","title":"Asynchronous Exceptions","url":"11.html#jls-11.1.3"},{"section":"11.2","title":"Compile-Time Checking of Exceptions","url":"11.html#jls-11.2"},{"section":"11.2.1","title":"Exception Analysis of Expressions","url":"11.html#jls-11.2.1"},{"section":"11.2.2","title":"Exception Analysis of Statements","url":"11.html#jls-11.2.2"},{"section":"11.2.3","title":"Exception Checking","url":"11.html#jls-11.2.3"},{"section":"11.3","title":"Run-Time Handling of an Exception","url":"11.html#jls-11.3"},{"section":"12","title":"Execution","url":"12.html#jls-12"},{"section":"12.1","title":"Java Virtual Machine Startup","url":"12.html#jls-12.1"},{"section":"12.1.1","title":"Load the Class Test","url":"12.html#jls-12.1.1"},{"section":"12.1.2","title":"Link Test: Verify, Prepare, (Optionally) Resolve","url":"12.html#jls-12.1.2"},{"section":"12.1.3","title":"Initialize Test: Execute Initializers","url":"12.html#jls-12.1.3"},{"section":"12.1.4","title":"Invoke Test.main","url":"12.html#jls-12.1.4"},{"section":"12.2","title":"Loading of Classes and Interfaces","url":"12.html#jls-12.2"},{"section":"12.2.1","title":"The Loading Process","url":"12.html#jls-12.2.1"},{"section":"12.2.2","title":"Class Loader Consistency","url":"12.html#jls-12.2.2"},{"section":"12.3","title":"Linking of Classes and Interfaces","url":"12.html#jls-12.3"},{"section":"12.3.1","title":"Verification of the Binary Representation","url":"12.html#jls-12.3.1"},{"section":"12.3.2","title":"Preparation of a Class or Interface","url":"12.html#jls-12.3.2"},{"section":"12.3.3","title":"Resolution of Symbolic References","url":"12.html#jls-12.3.3"},{"section":"12.4","title":"Initialization of Classes and Interfaces","url":"12.html#jls-12.4"},{"section":"12.4.1","title":"When Initialization Occurs","url":"12.html#jls-12.4.1"},{"section":"12.4.2","title":"Detailed Initialization Procedure","url":"12.html#jls-12.4.2"},{"section":"12.5","title":"Creation of New Class Instances","url":"12.html#jls-12.5"},{"section":"12.6","title":"Finalization of Class Instances","url":"12.html#jls-12.6"},{"section":"12.6.1","title":"Implementing Finalization","url":"12.html#jls-12.6.1"},{"section":"12.6.2","title":"Interaction with the Memory Model","url":"12.html#jls-12.6.2"},{"section":"12.7","title":"Unloading of Classes and Interfaces","url":"12.html#jls-12.7"},{"section":"12.8","title":"Program Exit","url":"12.html#jls-12.8"},{"section":"13","title":"Binary Compatibility","url":"13.html#jls-13"},{"section":"13.1","title":"The Form of a Binary","url":"13.html#jls-13.1"},{"section":"13.2","title":"What Binary Compatibility Is and Is Not","url":"13.html#jls-13.2"},{"section":"13.3","title":"Evolution of Packages and Modules","url":"13.html#jls-13.3"},{"section":"13.4","title":"Evolution of Classes","url":"13.html#jls-13.4"},{"section":"13.4.1","title":"abstract Classes","url":"13.html#jls-13.4.1"},{"section":"13.4.2","title":"sealed, non-sealed, and final Classes","url":"13.html#jls-13.4.2"},{"section":"13.4.2.1","title":"sealed Classes","url":"13.html#jls-13.4.2.1"},{"section":"13.4.2.2","title":"non-sealed Classes","url":"13.html#jls-13.4.2.2"},{"section":"13.4.2.3","title":"final Classes","url":"13.html#jls-13.4.2.3"},{"section":"13.4.3","title":"public Classes","url":"13.html#jls-13.4.3"},{"section":"13.4.4","title":"Superclasses and Superinterfaces","url":"13.html#jls-13.4.4"},{"section":"13.4.5","title":"Class Type Parameters","url":"13.html#jls-13.4.5"},{"section":"13.4.6","title":"Class Body and Member Declarations","url":"13.html#jls-13.4.6"},{"section":"13.4.7","title":"Access to Members and Constructors","url":"13.html#jls-13.4.7"},{"section":"13.4.8","title":"Field Declarations","url":"13.html#jls-13.4.8"},{"section":"13.4.9","title":"final Fields and static Constant Variables","url":"13.html#jls-13.4.9"},{"section":"13.4.10","title":"static Fields","url":"13.html#jls-13.4.10"},{"section":"13.4.11","title":"transient Fields","url":"13.html#jls-13.4.11"},{"section":"13.4.12","title":"Method and Constructor Declarations","url":"13.html#jls-13.4.12"},{"section":"13.4.13","title":"Method and Constructor Type Parameters","url":"13.html#jls-13.4.13"},{"section":"13.4.14","title":"Method and Constructor Formal Parameters","url":"13.html#jls-13.4.14"},{"section":"13.4.15","title":"Method Result Type","url":"13.html#jls-13.4.15"},{"section":"13.4.16","title":"abstract Methods","url":"13.html#jls-13.4.16"},{"section":"13.4.17","title":"final Methods","url":"13.html#jls-13.4.17"},{"section":"13.4.18","title":"native Methods","url":"13.html#jls-13.4.18"},{"section":"13.4.19","title":"static Methods","url":"13.html#jls-13.4.19"},{"section":"13.4.20","title":"synchronized Methods","url":"13.html#jls-13.4.20"},{"section":"13.4.21","title":"Method and Constructor Throws","url":"13.html#jls-13.4.21"},{"section":"13.4.22","title":"Method and Constructor Body","url":"13.html#jls-13.4.22"},{"section":"13.4.23","title":"Method and Constructor Overloading","url":"13.html#jls-13.4.23"},{"section":"13.4.24","title":"Method Overriding","url":"13.html#jls-13.4.24"},{"section":"13.4.25","title":"Static Initializers","url":"13.html#jls-13.4.25"},{"section":"13.4.26","title":"Evolution of Enum Classes","url":"13.html#jls-13.4.26"},{"section":"13.4.27","title":"Evolution of Record Classes","url":"13.html#jls-13.4.27"},{"section":"13.5","title":"Evolution of Interfaces","url":"13.html#jls-13.5"},{"section":"13.5.1","title":"public Interfaces","url":"13.html#jls-13.5.1"},{"section":"13.5.2","title":"sealed and non-sealed Interfaces","url":"13.html#jls-13.5.2"},{"section":"13.5.3","title":"Superinterfaces","url":"13.html#jls-13.5.3"},{"section":"13.5.4","title":"Interface Members","url":"13.html#jls-13.5.4"},{"section":"13.5.5","title":"Interface Type Parameters","url":"13.html#jls-13.5.5"},{"section":"13.5.6","title":"Field Declarations","url":"13.html#jls-13.5.6"},{"section":"13.5.7","title":"Interface Method Declarations","url":"13.html#jls-13.5.7"},{"section":"13.5.8","title":"Annotation Interfaces","url":"13.html#jls-13.5.8"},{"section":"14","title":"Blocks, Statements, and Patterns","url":"14.html#jls-14"},{"section":"14.1","title":"Normal and Abrupt Completion of Statements","url":"14.html#jls-14.1"},{"section":"14.2","title":"Blocks","url":"14.html#jls-14.2"},{"section":"14.3","title":"Local Class and Interface Declarations","url":"14.html#jls-14.3"},{"section":"14.4","title":"Local Variable Declarations","url":"14.html#jls-14.4"},{"section":"14.4.1","title":"Local Variable Declarators and Types","url":"14.html#jls-14.4.1"},{"section":"14.4.2","title":"Local Variable Declaration Statements","url":"14.html#jls-14.4.2"},{"section":"14.5","title":"Statements","url":"14.html#jls-14.5"},{"section":"14.6","title":"The Empty Statement","url":"14.html#jls-14.6"},{"section":"14.7","title":"Labeled Statements","url":"14.html#jls-14.7"},{"section":"14.8","title":"Expression Statements","url":"14.html#jls-14.8"},{"section":"14.9","title":"The if Statement","url":"14.html#jls-14.9"},{"section":"14.9.1","title":"The if-then Statement","url":"14.html#jls-14.9.1"},{"section":"14.9.2","title":"The if-then-else Statement","url":"14.html#jls-14.9.2"},{"section":"14.10","title":"The assert Statement","url":"14.html#jls-14.10"},{"section":"14.11","title":"The switch Statement","url":"14.html#jls-14.11"},{"section":"14.11.1","title":"Switch Blocks","url":"14.html#jls-14.11.1"},{"section":"14.11.2","title":"The Switch Block of a switch Statement","url":"14.html#jls-14.11.2"},{"section":"14.11.3","title":"Execution of a switch Statement","url":"14.html#jls-14.11.3"},{"section":"14.12","title":"The while Statement","url":"14.html#jls-14.12"},{"section":"14.12.1","title":"Abrupt Completion of while Statement","url":"14.html#jls-14.12.1"},{"section":"14.13","title":"The do Statement","url":"14.html#jls-14.13"},{"section":"14.13.1","title":"Abrupt Completion of do Statement","url":"14.html#jls-14.13.1"},{"section":"14.14","title":"The for Statement","url":"14.html#jls-14.14"},{"section":"14.14.1","title":"The basic for Statement","url":"14.html#jls-14.14.1"},{"section":"14.14.1.1","title":"Initialization of for Statement","url":"14.html#jls-14.14.1.1"},{"section":"14.14.1.2","title":"Iteration of for Statement","url":"14.html#jls-14.14.1.2"},{"section":"14.14.1.3","title":"Abrupt Completion of for Statement","url":"14.html#jls-14.14.1.3"},{"section":"14.14.2","title":"The enhanced for statement","url":"14.html#jls-14.14.2"},{"section":"14.15","title":"The break Statement","url":"14.html#jls-14.15"},{"section":"14.16","title":"The continue Statement","url":"14.html#jls-14.16"},{"section":"14.17","title":"The return Statement","url":"14.html#jls-14.17"},{"section":"14.18","title":"The throw Statement","url":"14.html#jls-14.18"},{"section":"14.19","title":"The synchronized Statement","url":"14.html#jls-14.19"},{"section":"14.20","title":"The try statement","url":"14.html#jls-14.20"},{"section":"14.20.1","title":"Execution of try-catch","url":"14.html#jls-14.20.1"},{"section":"14.20.2","title":"Execution of try-finally and try-catch-finally","url":"14.html#jls-14.20.2"},{"section":"14.20.3","title":"try-with-resources","url":"14.html#jls-14.20.3"},{"section":"14.20.3.1","title":"Basic try-with-resources","url":"14.html#jls-14.20.3.1"},{"section":"14.20.3.2","title":"Extended try-with-resources","url":"14.html#jls-14.20.3.2"},{"section":"14.21","title":"The yield Statement","url":"14.html#jls-14.21"},{"section":"14.22","title":"Unreachable Statements","url":"14.html#jls-14.22"},{"section":"14.30","title":"Patterns","url":"14.html#jls-14.30"},{"section":"14.30.1","title":"Kinds of Patterns","url":"14.html#jls-14.30.1"},{"section":"14.30.2","title":"Pattern Matching","url":"14.html#jls-14.30.2"},{"section":"15","title":"Expressions","url":"15.html#jls-15"},{"section":"15.1","title":"Evaluation, Denotation, and Result","url":"15.html#jls-15.1"},{"section":"15.2","title":"Forms of Expressions","url":"15.html#jls-15.2"},{"section":"15.3","title":"Type of an Expression","url":"15.html#jls-15.3"},{"section":"15.4","title":"Floating-point Expressions","url":"15.html#jls-15.4"},{"section":"15.5","title":"Expressions and Run-Time Checks","url":"15.html#jls-15.5"},{"section":"15.6","title":"Normal and Abrupt Completion of Evaluation","url":"15.html#jls-15.6"},{"section":"15.7","title":"Evaluation Order","url":"15.html#jls-15.7"},{"section":"15.7.1","title":"Evaluate Left-Hand Operand First","url":"15.html#jls-15.7.1"},{"section":"15.7.2","title":"Evaluate Operands before Operation","url":"15.html#jls-15.7.2"},{"section":"15.7.3","title":"Evaluation Respects Parentheses and Precedence","url":"15.html#jls-15.7.3"},{"section":"15.7.4","title":"Argument Lists are Evaluated Left-to-Right","url":"15.html#jls-15.7.4"},{"section":"15.7.5","title":"Evaluation Order for Other Expressions","url":"15.html#jls-15.7.5"},{"section":"15.8","title":"Primary Expressions","url":"15.html#jls-15.8"},{"section":"15.8.1","title":"Lexical Literals","url":"15.html#jls-15.8.1"},{"section":"15.8.2","title":"Class Literals","url":"15.html#jls-15.8.2"},{"section":"15.8.3","title":"this","url":"15.html#jls-15.8.3"},{"section":"15.8.4","title":"Qualified this","url":"15.html#jls-15.8.4"},{"section":"15.8.5","title":"Parenthesized Expressions","url":"15.html#jls-15.8.5"},{"section":"15.9","title":"Class Instance Creation Expressions","url":"15.html#jls-15.9"},{"section":"15.9.1","title":"Determining the Class being Instantiated","url":"15.html#jls-15.9.1"},{"section":"15.9.2","title":"Determining Enclosing Instances","url":"15.html#jls-15.9.2"},{"section":"15.9.3","title":"Choosing the Constructor and its Arguments","url":"15.html#jls-15.9.3"},{"section":"15.9.4","title":"Run-Time Evaluation of Class Instance Creation Expressions","url":"15.html#jls-15.9.4"},{"section":"15.9.5","title":"Anonymous Class Declarations","url":"15.html#jls-15.9.5"},{"section":"15.9.5.1","title":"Anonymous Constructors","url":"15.html#jls-15.9.5.1"},{"section":"15.10","title":"Array Creation and Access Expressions","url":"15.html#jls-15.10"},{"section":"15.10.1","title":"Array Creation Expressions","url":"15.html#jls-15.10.1"},{"section":"15.10.2","title":"Run-Time Evaluation of Array Creation Expressions","url":"15.html#jls-15.10.2"},{"section":"15.10.3","title":"Array Access Expressions","url":"15.html#jls-15.10.3"},{"section":"15.10.4","title":"Run-Time Evaluation of Array Access Expressions","url":"15.html#jls-15.10.4"},{"section":"15.11","title":"Field Access Expressions","url":"15.html#jls-15.11"},{"section":"15.11.1","title":"Field Access Using a Primary","url":"15.html#jls-15.11.1"},{"section":"15.11.2","title":"Accessing Superclass Members using super","url":"15.html#jls-15.11.2"},{"section":"15.12","title":"Method Invocation Expressions","url":"15.html#jls-15.12"},{"section":"15.12.1","title":"Compile-Time Step 1: Determine Type to Search","url":"15.html#jls-15.12.1"},{"section":"15.12.2","title":"Compile-Time Step 2: Determine Method Signature","url":"15.html#jls-15.12.2"},{"section":"15.12.2.1","title":"Identify Potentially Applicable Methods","url":"15.html#jls-15.12.2.1"},{"section":"15.12.2.2","title":"Phase 1: Identify Matching Arity Methods Applicable by Strict Invocation","url":"15.html#jls-15.12.2.2"},{"section":"15.12.2.3","title":"Phase 2: Identify Matching Arity Methods Applicable by Loose Invocation","url":"15.html#jls-15.12.2.3"},{"section":"15.12.2.4","title":"Phase 3: Identify Methods Applicable by Variable Arity Invocation","url":"15.html#jls-15.12.2.4"},{"section":"15.12.2.5","title":"Choosing the Most Specific Method","url":"15.html#jls-15.12.2.5"},{"section":"15.12.2.6","title":"Method Invocation Type","url":"15.html#jls-15.12.2.6"},{"section":"15.12.3","title":"Compile-Time Step 3: Is the Chosen Method Appropriate?","url":"15.html#jls-15.12.3"},{"section":"15.12.4","title":"Run-Time Evaluation of Method Invocation","url":"15.html#jls-15.12.4"},{"section":"15.12.4.1","title":"Compute Target Reference (If Necessary)","url":"15.html#jls-15.12.4.1"},{"section":"15.12.4.2","title":"Evaluate Arguments","url":"15.html#jls-15.12.4.2"},{"section":"15.12.4.3","title":"Check Accessibility of Type and Method","url":"15.html#jls-15.12.4.3"},{"section":"15.12.4.4","title":"Locate Method to Invoke","url":"15.html#jls-15.12.4.4"},{"section":"15.12.4.5","title":"Create Frame, Synchronize, Transfer Control","url":"15.html#jls-15.12.4.5"},{"section":"15.13","title":"Method Reference Expressions","url":"15.html#jls-15.13"},{"section":"15.13.1","title":"Compile-Time Declaration of a Method Reference","url":"15.html#jls-15.13.1"},{"section":"15.13.2","title":"Type of a Method Reference","url":"15.html#jls-15.13.2"},{"section":"15.13.3","title":"Run-Time Evaluation of Method References","url":"15.html#jls-15.13.3"},{"section":"15.14","title":"Postfix Expressions","url":"15.html#jls-15.14"},{"section":"15.14.1","title":"Expression Names","url":"15.html#jls-15.14.1"},{"section":"15.14.2","title":"Postfix Increment Operator ++","url":"15.html#jls-15.14.2"},{"section":"15.14.3","title":"Postfix Decrement Operator --","url":"15.html#jls-15.14.3"},{"section":"15.15","title":"Unary Operators","url":"15.html#jls-15.15"},{"section":"15.15.1","title":"Prefix Increment Operator ++","url":"15.html#jls-15.15.1"},{"section":"15.15.2","title":"Prefix Decrement Operator --","url":"15.html#jls-15.15.2"},{"section":"15.15.3","title":"Unary Plus Operator +","url":"15.html#jls-15.15.3"},{"section":"15.15.4","title":"Unary Minus Operator -","url":"15.html#jls-15.15.4"},{"section":"15.15.5","title":"Bitwise Complement Operator ~","url":"15.html#jls-15.15.5"},{"section":"15.15.6","title":"Logical Complement Operator !","url":"15.html#jls-15.15.6"},{"section":"15.16","title":"Cast Expressions","url":"15.html#jls-15.16"},{"section":"15.17","title":"Multiplicative Operators","url":"15.html#jls-15.17"},{"section":"15.17.1","title":"Multiplication Operator *","url":"15.html#jls-15.17.1"},{"section":"15.17.2","title":"Division Operator /","url":"15.html#jls-15.17.2"},{"section":"15.17.3","title":"Remainder Operator %","url":"15.html#jls-15.17.3"},{"section":"15.18","title":"Additive Operators","url":"15.html#jls-15.18"},{"section":"15.18.1","title":"String Concatenation Operator +","url":"15.html#jls-15.18.1"},{"section":"15.18.2","title":"Additive Operators (+ and -) for Numeric Types","url":"15.html#jls-15.18.2"},{"section":"15.19","title":"Shift Operators","url":"15.html#jls-15.19"},{"section":"15.20","title":"Relational Operators","url":"15.html#jls-15.20"},{"section":"15.20.1","title":"Numerical Comparison Operators <, <=, >, and >=","url":"15.html#jls-15.20.1"},{"section":"15.20.2","title":"The instanceof Operator","url":"15.html#jls-15.20.2"},{"section":"15.21","title":"Equality Operators","url":"15.html#jls-15.21"},{"section":"15.21.1","title":"Numerical Equality Operators == and !=","url":"15.html#jls-15.21.1"},{"section":"15.21.2","title":"Boolean Equality Operators == and !=","url":"15.html#jls-15.21.2"},{"section":"15.21.3","title":"Reference Equality Operators == and !=","url":"15.html#jls-15.21.3"},{"section":"15.22","title":"Bitwise and Logical Operators","url":"15.html#jls-15.22"},{"section":"15.22.1","title":"Integer Bitwise Operators &, ^, and |","url":"15.html#jls-15.22.1"},{"section":"15.22.2","title":"Boolean Logical Operators &, ^, and |","url":"15.html#jls-15.22.2"},{"section":"15.23","title":"Conditional-And Operator &&","url":"15.html#jls-15.23"},{"section":"15.24","title":"Conditional-Or Operator ||","url":"15.html#jls-15.24"},{"section":"15.25","title":"Conditional Operator ? :","url":"15.html#jls-15.25"},{"section":"15.25.1","title":"Boolean Conditional Expressions","url":"15.html#jls-15.25.1"},{"section":"15.25.2","title":"Numeric Conditional Expressions","url":"15.html#jls-15.25.2"},{"section":"15.25.3","title":"Reference Conditional Expressions","url":"15.html#jls-15.25.3"},{"section":"15.26","title":"Assignment Operators","url":"15.html#jls-15.26"},{"section":"15.26.1","title":"Simple Assignment Operator =","url":"15.html#jls-15.26.1"},{"section":"15.26.2","title":"Compound Assignment Operators","url":"15.html#jls-15.26.2"},{"section":"15.27","title":"Lambda Expressions","url":"15.html#jls-15.27"},{"section":"15.27.1","title":"Lambda Parameters","url":"15.html#jls-15.27.1"},{"section":"15.27.2","title":"Lambda Body","url":"15.html#jls-15.27.2"},{"section":"15.27.3","title":"Type of a Lambda Expression","url":"15.html#jls-15.27.3"},{"section":"15.27.4","title":"Run-Time Evaluation of Lambda Expressions","url":"15.html#jls-15.27.4"},{"section":"15.28","title":"switch Expressions","url":"15.html#jls-15.28"},{"section":"15.28.1","title":"The Switch Block of a switch Expression","url":"15.html#jls-15.28.1"},{"section":"15.28.2","title":"Run-Time Evaluation of switch Expressions","url":"15.html#jls-15.28.2"},{"section":"15.29","title":"Constant Expressions","url":"15.html#jls-15.29"},{"section":"16","title":"Definite Assignment","url":"16.html#jls-16"},{"section":"16.1","title":"Definite Assignment and Expressions","url":"16.html#jls-16.1"},{"section":"16.1.1","title":"Boolean Constant Expressions","url":"16.html#jls-16.1.1"},{"section":"16.1.2","title":"Conditional-And Operator &&","url":"16.html#jls-16.1.2"},{"section":"16.1.3","title":"Conditional-Or Operator ||","url":"16.html#jls-16.1.3"},{"section":"16.1.4","title":"Logical Complement Operator !","url":"16.html#jls-16.1.4"},{"section":"16.1.5","title":"Conditional Operator ? :","url":"16.html#jls-16.1.5"},{"section":"16.1.6","title":"switch Expressions","url":"16.html#jls-16.1.6"},{"section":"16.1.7","title":"Other Expressions of Type boolean","url":"16.html#jls-16.1.7"},{"section":"16.1.8","title":"Assignment Expressions","url":"16.html#jls-16.1.8"},{"section":"16.1.9","title":"Operators ++ and --","url":"16.html#jls-16.1.9"},{"section":"16.1.10","title":"Other Expressions","url":"16.html#jls-16.1.10"},{"section":"16.2","title":"Definite Assignment and Statements","url":"16.html#jls-16.2"},{"section":"16.2.1","title":"Empty Statements","url":"16.html#jls-16.2.1"},{"section":"16.2.2","title":"Blocks","url":"16.html#jls-16.2.2"},{"section":"16.2.3","title":"Local Class and Interface Declarations","url":"16.html#jls-16.2.3"},{"section":"16.2.4","title":"Local Variable Declaration Statements","url":"16.html#jls-16.2.4"},{"section":"16.2.5","title":"Labeled Statements","url":"16.html#jls-16.2.5"},{"section":"16.2.6","title":"Expression Statements","url":"16.html#jls-16.2.6"},{"section":"16.2.7","title":"if Statements","url":"16.html#jls-16.2.7"},{"section":"16.2.8","title":"assert Statements","url":"16.html#jls-16.2.8"},{"section":"16.2.9","title":"switch Statements","url":"16.html#jls-16.2.9"},{"section":"16.2.10","title":"while Statements","url":"16.html#jls-16.2.10"},{"section":"16.2.11","title":"do Statements","url":"16.html#jls-16.2.11"},{"section":"16.2.12","title":"for Statements","url":"16.html#jls-16.2.12"},{"section":"16.2.12.1","title":"Initialization Part of for Statement","url":"16.html#jls-16.2.12.1"},{"section":"16.2.12.2","title":"Incrementation Part of for Statement","url":"16.html#jls-16.2.12.2"},{"section":"16.2.13","title":"break, yield, continue, return, and throw Statements","url":"16.html#jls-16.2.13"},{"section":"16.2.14","title":"synchronized Statements","url":"16.html#jls-16.2.14"},{"section":"16.2.15","title":"try Statements","url":"16.html#jls-16.2.15"},{"section":"16.3","title":"Definite Assignment and Parameters","url":"16.html#jls-16.3"},{"section":"16.4","title":"Definite Assignment and Array Initializers","url":"16.html#jls-16.4"},{"section":"16.5","title":"Definite Assignment and Enum Constants","url":"16.html#jls-16.5"},{"section":"16.6","title":"Definite Assignment and Anonymous Classes","url":"16.html#jls-16.6"},{"section":"16.7","title":"Definite Assignment and Member Classes and Interfaces","url":"16.html#jls-16.7"},{"section":"16.8","title":"Definite Assignment and Static Initializers","url":"16.html#jls-16.8"},{"section":"16.9","title":"Definite Assignment, Constructors, and Instance Initializers","url":"16.html#jls-16.9"},{"section":"17","title":"Threads and Locks","url":"17.html#jls-17"},{"section":"17.1","title":"Synchronization","url":"17.html#jls-17.1"},{"section":"17.2","title":"Wait Sets and Notification","url":"17.html#jls-17.2"},{"section":"17.2.1","title":"Wait","url":"17.html#jls-17.2.1"},{"section":"17.2.2","title":"Notification","url":"17.html#jls-17.2.2"},{"section":"17.2.3","title":"Interruptions","url":"17.html#jls-17.2.3"},{"section":"17.2.4","title":"Interactions of Waits, Notification, and Interruption","url":"17.html#jls-17.2.4"},{"section":"17.3","title":"Sleep and Yield","url":"17.html#jls-17.3"},{"section":"17.4","title":"Memory Model","url":"17.html#jls-17.4"},{"section":"17.4.1","title":"Shared Variables","url":"17.html#jls-17.4.1"},{"section":"17.4.2","title":"Actions","url":"17.html#jls-17.4.2"},{"section":"17.4.3","title":"Programs and Program Order","url":"17.html#jls-17.4.3"},{"section":"17.4.4","title":"Synchronization Order","url":"17.html#jls-17.4.4"},{"section":"17.4.5","title":"Happens-before Order","url":"17.html#jls-17.4.5"},{"section":"17.4.6","title":"Executions","url":"17.html#jls-17.4.6"},{"section":"17.4.7","title":"Well-Formed Executions","url":"17.html#jls-17.4.7"},{"section":"17.4.8","title":"Executions and Causality Requirements","url":"17.html#jls-17.4.8"},{"section":"17.4.9","title":"Observable Behavior and Nonterminating Executions","url":"17.html#jls-17.4.9"},{"section":"17.5","title":"final Field Semantics","url":"17.html#jls-17.5"},{"section":"17.5.1","title":"Semantics of final Fields","url":"17.html#jls-17.5.1"},{"section":"17.5.2","title":"Reading final Fields During Construction","url":"17.html#jls-17.5.2"},{"section":"17.5.3","title":"Subsequent Modification of final Fields","url":"17.html#jls-17.5.3"},{"section":"17.5.4","title":"Write-Protected Fields","url":"17.html#jls-17.5.4"},{"section":"17.6","title":"Word Tearing","url":"17.html#jls-17.6"},{"section":"17.7","title":"Non-Atomic Treatment of double and long","url":"17.html#jls-17.7"},{"section":"18","title":"Type Inference","url":"18.html#jls-18"},{"section":"18.1","title":"Concepts and Notation","url":"18.html#jls-18.1"},{"section":"18.1.1","title":"Inference Variables","url":"18.html#jls-18.1.1"},{"section":"18.1.2","title":"Constraint Formulas","url":"18.html#jls-18.1.2"},{"section":"18.1.3","title":"Bounds","url":"18.html#jls-18.1.3"},{"section":"18.2","title":"Reduction","url":"18.html#jls-18.2"},{"section":"18.2.1","title":"Expression Compatibility Constraints","url":"18.html#jls-18.2.1"},{"section":"18.2.2","title":"Type Compatibility Constraints","url":"18.html#jls-18.2.2"},{"section":"18.2.3","title":"Subtyping Constraints","url":"18.html#jls-18.2.3"},{"section":"18.2.4","title":"Type Equality Constraints","url":"18.html#jls-18.2.4"},{"section":"18.2.5","title":"Checked Exception Constraints","url":"18.html#jls-18.2.5"},{"section":"18.3","title":"Incorporation","url":"18.html#jls-18.3"},{"section":"18.3.1","title":"Complementary Pairs of Bounds","url":"18.html#jls-18.3.1"},{"section":"18.3.2","title":"Bounds Involving Capture Conversion","url":"18.html#jls-18.3.2"},{"section":"18.4","title":"Resolution","url":"18.html#jls-18.4"},{"section":"18.5","title":"Uses of Inference","url":"18.html#jls-18.5"},{"section":"18.5.1","title":"Invocation Applicability Inference","url":"18.html#jls-18.5.1"},{"section":"18.5.2","title":"Invocation Type Inference","url":"18.html#jls-18.5.2"},{"section":"18.5.2.1","title":"Poly Method Invocation Compatibility","url":"18.html#jls-18.5.2.1"},{"section":"18.5.2.2","title":"Additional Argument Constraints","url":"18.html#jls-18.5.2.2"},{"section":"18.5.3","title":"Functional Interface Parameterization Inference","url":"18.html#jls-18.5.3"},{"section":"18.5.4","title":"More Specific Method Inference","url":"18.html#jls-18.5.4"},{"section":"19","title":"Syntax","url":"19.html#jls-19"}]}},{"parent":{"name":"jls3"},"frontmatter":{"pl":"Java","version":"Third Edition","sections":null}},{"parent":{"name":"jls7"},"frontmatter":{"pl":"Java","version":"Java SE 7 Edition","sections":null}},{"parent":{"name":"jls8"},"frontmatter":{"pl":"Java","version":"Java SE 8 Edition","sections":null}},{"parent":{"name":"jls9"},"frontmatter":{"pl":"Java","version":"Java SE 9 Edition","sections":[{"section":"8.3","title":"Field Declarations","url":"8.html#jls-8.3"},{"section":"14.4","title":"Local Variable Declaration Statements","url":"14.html#jls-14.4"},{"section":"14.4.1","title":"Local Variable Declarators and Types","url":"14.html#jls-14.4.1"}]}},{"parent":{"name":"plr2.7"},"frontmatter":{"pl":"Python","version":"2.7","sections":null}},{"parent":{"name":"plr3.10"},"frontmatter":{"pl":"Python","version":"3.10","sections":null}},{"parent":{"name":"plr3.11"},"frontmatter":{"pl":"Python","version":"3.11","sections":null}},{"parent":{"name":"plr3.12"},"frontmatter":{"pl":"Python","version":"3.12","sections":null}},{"parent":{"name":"plr3.13"},"frontmatter":{"pl":"Python","version":"3.13","sections":[{"section":"2.3.1","title":"Keywords","url":"reference/lexical_analysis.html#keywords"},{"section":"2.4","title":"Literals","url":"reference/lexical_analysis.html#literals"},{"section":"3.0","title":"Data model","url":"reference/datamodel.html"},{"section":"3.1","title":"Objects, values, and types","url":"reference/datamodel.html#objects-values-and-types"},{"section":"3.2","title":"The standard type hierarchy","url":"reference/datamodel.html#the-standard-type-hierarchy"},{"section":"3.2.4.1","title":"numbers.Integral","url":"reference/datamodel.html#numbers.Integral"},{"section":"3.2.5.1","title":"Immutable sequences","url":"reference/datamodel.html#immutable-sequences"},{"section":"3.2.8.2","title":"Instance methods","url":"reference/datamodel.html#instance-methods"},{"section":"3.3.1","title":"__init__","url":"reference/datamodel.html#object.__init__"},{"section":"6.0","title":"Expressions","url":"reference/expressions.html"},{"section":"6.3.1","title":"Attribute references","url":"reference/expressions.html#attribute-references"},{"section":"6.3.4","title":"Calls","url":"reference/expressions.html#calls"},{"section":"6.7","title":"Binary arithmetic operations","url":"reference/expressions.html#binary-arithmetic-operations"},{"section":"6.9","title":"Binary bitwise operations","url":"reference/expressions.html#binary-bitwise-operations"},{"section":"6.10","title":"Comparisons","url":"reference/expressions.html#comparisons"},{"section":"6.13","title":"Conditional expressions","url":"reference/expressions.html#conditional-expressions"},{"section":"6.15","title":"Expression lists","url":"reference/expressions.html#expression-lists"},{"section":"6.16","title":"Evaluation order","url":"reference/expressions.html#evaluation-order"},{"section":"7.0","title":"Simple statements","url":"reference/simple_stmts.html"},{"section":"7.2","title":"Assignment statements","url":"reference/simple_stmts.html#assignment-statements"},{"section":"7.6","title":"The return statement","url":"reference/simple_stmts.html#the-return-statement"},{"section":"8.1","title":"The if statement","url":"reference/compound_stmts.html#the-if-statement"},{"section":"lib-booleanoperations","title":"Boolean operations","url":"library/stdtypes.html#boolean-operations-and-or-not"},{"section":"lib-dict","title":"Dictionary","url":"library/stdtypes.html#mapping-types-dict"},{"section":"lib-str","title":"Text Sequence Type — str","url":"library/stdtypes.html#text-sequence-type-str"},{"section":"lib-functions","title":"Functions","url":"library/functions.html"}]}},{"parent":{"name":"plr3.6"},"frontmatter":{"pl":"Python","version":"3.6","sections":null}},{"parent":{"name":"plr3.7"},"frontmatter":{"pl":"Python","version":"3.7","sections":null}},{"parent":{"name":"plr3.8"},"frontmatter":{"pl":"Python","version":"3.8","sections":null}},{"parent":{"name":"plr3.9"},"frontmatter":{"pl":"Python","version":"3.9","sections":null}},{"parent":{"name":"scratch1.0"},"frontmatter":{"pl":"Scratch","version":"1.0","sections":null}},{"parent":{"name":"scratch1.1"},"frontmatter":{"pl":"Scratch","version":"1.1","sections":null}},{"parent":{"name":"plr3.5"},"frontmatter":{"pl":"Python","version":"3.5","sections":null}},{"parent":{"name":"scratch1.2"},"frontmatter":{"pl":"Scratch","version":"1.2","sections":null}},{"parent":{"name":"scratch1.3"},"frontmatter":{"pl":"Scratch","version":"1.3","sections":null}},{"parent":{"name":"scratch1.4"},"frontmatter":{"pl":"Scratch","version":"1.4","sections":null}},{"parent":{"name":"scratch2.0"},"frontmatter":{"pl":"Scratch","version":"2.0","sections":null}},{"parent":{"name":"scratch3.0"},"frontmatter":{"pl":"Scratch","version":"3.0","sections":[{"section":"wiki-Variables_Blocks","title":"Variables Blocks","url":"Variables_Blocks"},{"section":"wiki-Variables_Blocks_(subcategory)","title":"Variables Blocks (subcategory)","url":"Variables_Blocks_(subcategory)"},{"section":"wiki-()_(Variables block)","title":"() (Variables block)","url":"()_(Variables_block)"},{"section":"wiki-Set_()_to_()_(block)","title":"Set () to () (block)","url":"Set_()_to_()_(block)"},{"section":"wiki-Operators_Blocks","title":"Operators Blocks","url":"Operators_Blocks"},{"section":"wiki-Reporter_Block","title":"Reporter Block","url":"Reporter_Block"},{"section":"wiki-Add_()_to_()_(block)","title":"Add () to () (block)","url":"Add_()_to_()_(block)"},{"section":"wiki-Length_of_()_(List_block)","title":"Length of () (List_block)","url":"Length_of_()_(List_block)"},{"section":"wiki-Delete_All_of_()_(block)","title":"Delete All of () (block)","url":"Delete_All_of_()_(block)"},{"section":"wiki-Delete_()_of_()_(block)","title":"Delete () of () (block)","url":"Delete_()_of_()_(block)"},{"section":"wiki-My_Blocks","title":"My Blocks","url":"My_Blocks"},{"section":"wiki-()_=_()_(block)","title":"() = () (block)","url":"()_%3D_()_(block)"},{"section":"wiki-Boolean_Block","title":"Boolean Block","url":"Boolean_Block"},{"section":"wiki-If_()_Then_(block)","title":"If () Then (block)","url":"If_()_Then_(block)"},{"section":"wiki-If_()_Then,_Else_(block)","title":"If () Then, Else (block)","url":"If_()_Then,_Else_(block)"},{"section":"wiki-Repeat_()_(block)","title":"Repeat () (block)","url":"Repeat_()_(block)"},{"section":"wiki-Repeat_Until_()_(block)","title":"Repeat Until () (block)","url":"Repeat_Until_()_(block)"},{"section":"wiki-Not_()_(block)","title":"Not () (block)","url":"Not_()_(block)"},{"section":"wiki-Stack_Block","title":"Stack Block","url":"Stack_Block"},{"section":"wiki-List_Blocks","title":"List Blocks","url":"List_Blocks"},{"section":"wiki-List","title":"List","url":"List"},{"section":"wiki-Item","title":"Item","url":"Item"},{"section":"wiki-Casting","title":"Casting","url":"Casting"},{"section":"wiki-When_Green_Flag_Clicked_(block)","title":"When Green Flag Clicked Block","url":"When_Green_Flag_Clicked_(block)"}]}}]},"concepts":{"nodes":[{"name":"Abstraction"},{"name":"AccessModifier"},{"name":"Allocation"},{"name":"Argument"},{"name":"Array"},{"name":"Assignment"},{"name":"Associativity"},{"name":"Boolean"},{"name":"Call"},{"name":"Class"},{"name":"Composition"},{"name":"Conditional"},{"name":"Constructor"},{"name":"ControlFlow"},{"name":"Equality"},{"name":"Evaluation"},{"name":"Exception"},{"name":"Expression"},{"name":"Field"},{"name":"Function"},{"name":"GarbageCollection"},{"name":"Implementation"},{"name":"Inheritance"},{"name":"Input"},{"name":"Lifetime"},{"name":"Literal"},{"name":"Loop"},{"name":"Member"},{"name":"Method"},{"name":"Mutability"},{"name":"Name"},{"name":"Null"},{"name":"Number"},{"name":"Object"},{"name":"Operator"},{"name":"Output"},{"name":"Parameter"},{"name":"Polymorphism"},{"name":"Precedence"},{"name":"Primitive"},{"name":"Prototype"},{"name":"Recursion"},{"name":"Reference"},{"name":"Repetition"},{"name":"Return"},{"name":"Scope"},{"name":"Self"},{"name":"Sequence"},{"name":"Stack"},{"name":"Statement"},{"name":"Static"},{"name":"String"},{"name":"Subtyping"},{"name":"Term"},{"name":"Type"},{"name":"Undefined"},{"name":"Value"},{"name":"Variable"}]},"zoteroItems":{"nodes":[{"key":"PLY58PHF","citationKey":"brownNoviceJavaProgrammingMistakes2017","data":{"parsedDate":"2017-06-30","creatorSummary":"Brown and Altadmri"}},{"key":"WUU576AY","citationKey":"christiaenNoviceProgrammingErrors1988","data":{"parsedDate":"1988-09-01","creatorSummary":"Christiaen"}},{"key":"Q5KM8ZQL","citationKey":"loweMisconceptionsNotionalMachine2018","data":{"parsedDate":"2018","creatorSummary":"Lowe"}},{"key":"VXZ3VUCG","citationKey":"pedroniObjectOrientedModelingObjectOriented2010","data":{"parsedDate":"2010","creatorSummary":"Pedroni and Meyer"}},{"key":"5PIFMW32","citationKey":"clancyMisconceptionsAttitudesThat2005","data":{"parsedDate":"2004","creatorSummary":"Clancy"}},{"key":"PCCMAT3Z","citationKey":"confreyChapterReviewResearch1990","data":{"parsedDate":"1990-01-01","creatorSummary":"Confrey"}},{"key":"I829J4S3","citationKey":"sorvaVisualProgramSimulation2012","data":{"parsedDate":"2012","creatorSummary":"Sorva"}},{"key":"NXN9U3H2","citationKey":"sirkiaExploringProgrammingMisconceptions2012","data":{"parsedDate":"2012","creatorSummary":"Sirkiä and Sorva"}},{"key":"KALTHHG9","citationKey":"qianStudentsMisconceptionsOther2017","data":{"parsedDate":"2017-10-27","creatorSummary":"Qian and Lehman"}},{"key":"WWB62CGI","citationKey":"ragonisLongtermInvestigationComprehension2005","data":{"parsedDate":"2005","creatorSummary":"Ragonis and Ben-Ari"}},{"key":"3WMIN7VM","citationKey":"luIdentifyingCorrectingProgramming2024","data":{"parsedDate":"2024-04-29","creatorSummary":"Lu and Krishnamurthi"}},{"key":"G5GXN2VX","citationKey":"hartmannPrevalenceProgrammingMisconceptions2024","data":{"parsedDate":"2024-11-13","creatorSummary":"Hartmann et al."}},{"key":"3ANKGI9R","citationKey":"putnamSummaryMisconceptionsHigh1986","data":{"parsedDate":"1986","creatorSummary":"Putnam et al."}},{"key":"C39NI8KP","citationKey":"kaczmarczykIdentifyingStudentMisconceptions2010","data":{"parsedDate":"2010","creatorSummary":"Kaczmarczyk et al."}},{"key":"HZFZBJC7","citationKey":"bevilacquaAssessingUnderstandingExpressions2024","data":{"parsedDate":"2024","creatorSummary":"Bevilacqua et al."}},{"key":"X3ZK4ZJF","citationKey":"chiodiniSurveyingUpperSecondaryTeachers2025","data":{"parsedDate":"2025-08-03","creatorSummary":"Chiodini et al."}},{"key":"JB6Z5RC5","citationKey":"dichevaMentalModelsRecursion1996","data":{"parsedDate":"1996-01-01","creatorSummary":"Dicheva and Close"}},{"key":"8UVP3HRG","citationKey":"hartmannProgrammingConceptsMisconceptions2022","data":{"parsedDate":"2022-12-01","creatorSummary":"Hartmann et al."}},{"key":"RK2S7WMD","citationKey":"sleemanPascalHighSchool1986","data":{"parsedDate":"1986-02-01","creatorSummary":"Sleeman et al."}},{"key":"HQA2D4C9","citationKey":"groverMeasuringStudentLearning2017","data":{"parsedDate":"2017-03-08","creatorSummary":"Grover and Basu"}},{"key":"V4CF439W","citationKey":"caceffoIdentifyingValidatingJava2019","data":{"parsedDate":"2019-07-02","creatorSummary":"Caceffo et al."}},{"key":"6EXG4CKG","citationKey":"duboulayDifficultiesLearningProgram1986","data":{"parsedDate":"1986-02-01","creatorSummary":"Du Boulay"}},{"key":"4TUZXW9S","citationKey":"hristovaIdentifyingCorrectingJava2003","data":{"parsedDate":"2003-01-11","creatorSummary":"Hristova et al."}},{"key":"QST8JYY2","citationKey":"altadmri37MillionCompilations2015","data":{"parsedDate":"2015-02-24","creatorSummary":"Altadmri and Brown"}},{"key":"KNIVSH3I","citationKey":"swidanProgrammingMisconceptionsSchool2018","data":{"parsedDate":"2018","creatorSummary":"Swidan et al."}},{"key":"H69747X9","citationKey":"rahimiIdentifyingStudentsMisconceptions2017","data":{"parsedDate":"2017","creatorSummary":"Rahimi et al."}},{"key":"XUU5UTXZ","citationKey":"corradiniConceptionsMisconceptionsComputational2017","data":{"parsedDate":"2017-08-14","creatorSummary":"Corradini et al."}},{"key":"DU9DICFV","citationKey":"chungStudentsMisconceptionsTypes2017","data":{"parsedDate":"2017-04","creatorSummary":"Chung et al."}},{"key":"V3M7NVE9","citationKey":"kurvinenProgrammingMisconceptionsIntroductory2016","data":{"parsedDate":"2016","creatorSummary":"Kurvinen et al."}},{"key":"SWRWA5AU","citationKey":"ohrndorfMeasuringKnowledgeMisconceptions2015","data":{"parsedDate":"2015","creatorSummary":"Ohrndorf"}},{"key":"HY9JWK2T","citationKey":"tirronenStudyDifficultiesMisconceptions2014","data":{"parsedDate":"2014","creatorSummary":"Tirronen"}},{"key":"M3H6ZZ64","citationKey":"paulHuntingHighLow2013","data":{"parsedDate":"2013","creatorSummary":"Paul and Vahrenhold"}},{"key":"B9MBW62R","citationKey":"karpierzMisconceptionsConceptInventory2014","data":{"parsedDate":"2014","creatorSummary":"Karpierz and Wolfman"}},{"key":"ZW5BKCWX","citationKey":"danielsiekDetectingUnderstandingStudents2012","data":{"parsedDate":"2012","creatorSummary":"Danielsiek et al."}},{"key":"J8THIMDZ","citationKey":"sandersChecklistsGradingObjectoriented2007","data":{"parsedDate":"2007","creatorSummary":"Sanders and Thomas"}},{"key":"62ZVY57B","citationKey":"hollandAvoidingObjectMisconceptions1997","data":{"parsedDate":"1997","creatorSummary":"Holland et al."}},{"key":"XDBHLJIB","citationKey":"eckerdalNoviceJavaProgrammers2005","data":{"parsedDate":"2005","creatorSummary":"Eckerdal and Thuné"}},{"key":"DQLXKEKW","citationKey":"fungTaxonomyNovicesMisconceptions1990","data":{"parsedDate":"1990-07-01","creatorSummary":"Fung et al."}},{"key":"FX3LGXQW","citationKey":"danielakDeprecatingMisconceptionsContextDependent2019","data":{"parsedDate":"2019","creatorSummary":"Danielak"}},{"key":"AA3I54BR","citationKey":"johnsonAnalysisStudentMisconceptions2020","data":{"parsedDate":"2020-01-09","creatorSummary":"Johnson et al."}},{"key":"BFRACMV3","citationKey":"qianUsingTargetedFeedback2019","data":{"parsedDate":"2019","creatorSummary":"Qian and Lehman"}},{"key":"59TU8UJ5","citationKey":"kalliaLearningUseFunctions2019","data":{"parsedDate":"2019-02-22","creatorSummary":"Kallia and Sentance"}},{"key":"QT8J4XZ2","citationKey":"qianTeachersPerceptionsStudent2020","data":{"parsedDate":"2020","creatorSummary":"Qian et al."}}]},"refs":{"edges":[{"node":{"id":"f0afe23b-5f55-5911-b6e0-b84952c85465","slug":"references/altadmri37MillionCompilations2015","frontmatter":{"langs":["Java"],"method":"Repository mining study (BlueJ Blackbox)","subjects":"250000+ students across the world","artifact":"https://bluej.org/blackbox/","phenomenonKinds":[{"name":"Mistakes","description":"Misunderstandings, type errors, other semantic errors","phenomena":[{"id":"A","name":"Confusing the assignment operator with the comparison operator","observations":[{"kind":"CountOf","measure":"Users making mistake","count":45082,"maxCount":250000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"D","name":"Confusing \"short-circuit\" evaluators with conventional logical operators","observations":[{"kind":"CountOf","measure":"Users making mistake","count":8742,"maxCount":250000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"H","name":"Using keywords as method or variable names","observations":[{"kind":"CountOf","measure":"Users making mistake","count":943,"maxCount":250000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"J","name":"Forgetting parentheses after a method call","observations":[{"kind":"CountOf","measure":"Users making mistake","count":10232,"maxCount":250000,"percent":null,"counts":null,"levelLabels":null}]}]}]},"fields":null}},{"node":{"id":"b5751877-2e80-5bfc-9cd5-ad1b58c9e8ff","slug":"references/bevilacquaAssessingUnderstandingExpressions2024","frontmatter":{"langs":["Java"],"method":"Qualitative and quantitative systematic research","subjects":"542 hand-drawn expression trees from 12 exams in 6 university courses","artifact":"https://zenodo.org/records/13898595","phenomenonKinds":[{"name":"Diagram mistakes","description":"Mistakes in student-drawn expression trees, related to structure, types, or values","phenomena":[{"id":"LiteralInlined","name":"A literal is inlined into the parent node","observations":[{"kind":"CountOf","measure":"Cases","count":41,"maxCount":447,"percent":null,"counts":null,"levelLabels":null}]},{"id":"VariableInlined","name":"A simple variable access or field access is inlined into the parent node","observations":[{"kind":"CountOf","measure":"Cases","count":83,"maxCount":346,"percent":null,"counts":null,"levelLabels":null}]},{"id":"TargetInlined","name":"The target (expression before dot) has been inlined (e.g., into a method invocation or a field access with explicit targets).","observations":[{"kind":"CountOf","measure":"Cases","count":97,"maxCount":303,"percent":null,"counts":null,"levelLabels":null}]},{"id":"IndexInlined","name":"The index in an array access expression has been inlined.","observations":[{"kind":"CountOf","measure":"Cases","count":25,"maxCount":79,"percent":null,"counts":null,"levelLabels":null}]},{"id":"NewIsolated","name":"Token 'new' is kept in separate node, which possibly includes a hole for connection.","observations":[{"kind":"CountOf","measure":"Cases","count":3,"maxCount":124,"percent":null,"counts":null,"levelLabels":null}]},{"id":"RightToLeftAssociativity","name":"Binary operator that is left-to-right associative is treated as right-to-left associative.","observations":[{"kind":"CountOf","measure":"Cases","count":15,"maxCount":49,"percent":null,"counts":null,"levelLabels":null}]},{"id":"TreeIsChainInSourceOrder","name":"The tree is primarily a chain, reflecting, in order (e.g., left to right -> top to bottom) the constructs of the source code.","observations":[{"kind":"CountOf","measure":"Cases","count":5,"maxCount":40,"percent":null,"counts":null,"levelLabels":null}]},{"id":"SubstitutionTakenFromEvaluation","name":"A node is replaced with a subtree containing code that appears inside methods or constructors called by the expression.","observations":[{"kind":"CountOf","measure":"Cases","count":62,"maxCount":480,"percent":null,"counts":null,"levelLabels":null}]},{"id":"ImplicitThis","name":"An *implicit* this is explicitly reported in the expression tree.","observations":[{"kind":"CountOf","measure":"Cases","count":1,"maxCount":139,"percent":null,"counts":null,"levelLabels":null}]},{"id":"ArrayLengthWithParentheses","name":"Access to the length field of an array is represented with extra parentheses.","observations":[{"kind":"CountOf","measure":"Cases","count":1,"maxCount":44,"percent":null,"counts":null,"levelLabels":null}]},{"id":"ParameterlessWithoutParentheses","name":"A method / constructor with no arguments is represented in the tree with its proper name but without parentheses.","observations":[{"kind":"CountOf","measure":"Cases","count":12,"maxCount":266,"percent":null,"counts":null,"levelLabels":null}]},{"id":"InstantiationWithoutNew","name":"Missing token 'new' in a class, interface, or array instance creation.","observations":[{"kind":"CountOf","measure":"Cases","count":26,"maxCount":124,"percent":null,"counts":null,"levelLabels":null}]},{"id":"LiteralWithoutType","name":"A literal is missing the type annotation.","observations":[{"kind":"CountOf","measure":"Cases","count":25,"maxCount":406,"percent":null,"counts":null,"levelLabels":null}]},{"id":"VariableWithoutType","name":"A simple variable access is missing the type annotation.","observations":[{"kind":"CountOf","measure":"Cases","count":14,"maxCount":322,"percent":null,"counts":null,"levelLabels":null}]},{"id":"TypeIsParentHoleType","name":"The type of the node is not the actual type of the node, but rather the type specified for the surrounding 'hole'.","observations":[{"kind":"CountOf","measure":"Cases","count":17,"maxCount":64,"percent":null,"counts":null,"levelLabels":null}]},{"id":"CharacterTypeString","name":"The type of a character literal node is String.","observations":[{"kind":"CountOf","measure":"Cases","count":11,"maxCount":53,"percent":null,"counts":null,"levelLabels":null}]},{"id":"LiteralWithoutValue","name":"A literal is missing the value annotation.","observations":[{"kind":"CountOf","measure":"Cases","count":61,"maxCount":159,"percent":null,"counts":null,"levelLabels":null}]},{"id":"VariableWithoutValue","name":"A simple variable access is missing the value annotation.","observations":[{"kind":"CountOf","measure":"Cases","count":17,"maxCount":115,"percent":null,"counts":null,"levelLabels":null}]},{"id":"StringValueWithoutQuotes","name":"String value reported without quotes.","observations":[{"kind":"CountOf","measure":"Cases","count":9,"maxCount":328,"percent":null,"counts":null,"levelLabels":null}]},{"id":"BothBranchesOfCondExprEvaluated","name":"Both branches of a conditional expression are annotated with values.","observations":[{"kind":"CountOf","measure":"Cases","count":67,"maxCount":115,"percent":null,"counts":null,"levelLabels":null}]}]}]},"fields":null}},{"node":{"id":"f5abd37e-c967-5aa8-bab9-3bef6628f2f8","slug":"references/brownNoviceJavaProgrammingMistakes2017","frontmatter":{"langs":["Java"],"method":"Quantitative systematic research analyzing 100+ M compilation events and surveying educators perceptions about 18 selected mistakes","subjects":"900+ students and 76 educators","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"A Blackbox dataset of student-generated compilation events over a 2-year period.","phenomena":[{"id":"(A)eqSyn","name":"Confusing the assignment operator (=) with the comparison operator (==)","observations":[{"kind":"CountOf","measure":"Compilation events containing this error","count":405748,"maxCount":100000000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"(D)andOrSyn","name":"Confusing short-circuit evaluators (&& and||) with conventional logical operators (& and|)","observations":[{"kind":"CountOf","measure":"Compilation events containing this error","count":61965,"maxCount":100000000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"(H)keySyn","name":"Using keywords as methods' or variables' names","observations":[{"kind":"CountOf","measure":"Compilation events containing this error","count":2568,"maxCount":100000000,"percent":null,"counts":null,"levelLabels":null}]},{"id":"(J)parCalSyn","name":"Forgetting parentheses after a method call","observations":[{"kind":"CountOf","measure":"Compilation events containing this error","count":43165,"maxCount":100000000,"percent":null,"counts":null,"levelLabels":null}]}]}]},"fields":null}},{"node":{"id":"d55e1ffb-4d92-58c5-b729-4bc1dfbe576f","slug":"references/caceffoIdentifyingValidatingJava2019","frontmatter":{"langs":["Java"],"method":"Quantitative systematic research","subjects":"69 upper-level undergraduate students","artifact":"https://www.ic.unicamp.br/~reltech/2019/19-05.pdf","phenomenonKinds":[{"name":"Misconceptions","description":"Java misconceptions on (A) function parameter use and scope, (B) variables, identifiers, and scope, (C) recursion, (D) iteration, (E) structures, (F) pointers, (G) boolean expressions, and (H) classes and objects.","phenomena":[{"id":"F.4","name":"Void function returns value","observations":[{"kind":"CountOf","measure":"Students holding misconception","count":1,"maxCount":69,"percent":null,"counts":null,"levelLabels":null}]}]}]},"fields":null}},{"node":{"id":"dae7fd67-4962-5ea5-96c2-5f54e851787d","slug":"references/chiodiniSurveyingUpperSecondaryTeachers2025","frontmatter":{"langs":["Python"],"method":"Quantitative systematic research","subjects":"97 Swiss high school teachers and their students","artifact":"https://zenodo.org/records/15633868","phenomenonKinds":[{"name":"Programming Language Misconceptions","description":"Misconceptions that directly correspond to Progmiscon.org misconceptions","phenomena":[{"id":"NAE","name":"NoAtomicExpression","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":39,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":42,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[18,25,26,18,10],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[8,16,9,40,24],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"RUMF","name":"ReturnUnwindsMultipleFrames","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":37,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":45,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[34,26,15,11,11],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[3,12,11,54,17],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"CIS","name":"ConditionalIsSequence","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":34,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":78,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[51,28,8,5,5],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[16,34,16,21,10],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"NSC","name":"NoShortCircuit","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":30,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":68,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[18,28,35,11,5],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[7,19,20,33,18],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"MVR","name":"MultipleValuesReturn","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":29,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":61,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[32,34,23,5,3],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[3,24,19,32,19],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"ACO","name":"AssignmentCopiesObject","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":26,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":74,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[46,28,9,6,8],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[13,35,13,18,18],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"MTBWI","name":"MapToBooleanWithIf","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":25,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":73,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[10,38,26,17,6],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[18,37,15,15,12],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"CWBL","name":"ComparisonWithBoolLieteral","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":21,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":82,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[12,30,34,19,2],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[28,34,15,10,10],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"RC","name":"ReturnCall","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":19,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":60,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[11,17,30,34,5],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[18,21,23,24,11],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"POIA","name":"ParenthesesOnlyIfArgument","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":15,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":81,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[68,17,8,2,2],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[33,30,18,14,2],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"NRW","name":"NoReservedWords","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":14,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":83,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[46,25,21,4,1],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[9,21,37,26,4],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"OIFN","name":"OutsideInFunctionNesting","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":11,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":64,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[55,26,8,1,7],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[6,21,15,46,9],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"DR","name":"DeferredReturn","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":9,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":71,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[64,28,4,0,1],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[14,32,21,24,6],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"VHE","name":"VariablesHoldExpressions","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":8,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":58,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[63,14,10,3,7],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[7,24,17,42,7],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"IIL","name":"IfIsLoop","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":4,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":43,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[62,19,9,3,4],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[7,17,17,51,5],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]},{"id":"AC","name":"AssignCompares","observations":[{"kind":"CountOf","measure":"Teachers hold misconception","count":3,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"CountOf","measure":"Teachers familiar with misconception","count":85,"maxCount":97,"percent":null,"counts":null,"levelLabels":null},{"kind":"Likert","measure":"Importance (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[71,19,5,1,1],"levelLabels":["Important","Somewhat Important","Not So Important","Not Important","I'm not sure"]},{"kind":"Likert","measure":"Prevalence in students (reported by teachers)","count":null,"maxCount":null,"percent":null,"counts":[30,38,14,10,5],"levelLabels":["Frequently","Multiple Times","At Least Once","Never","I don't know"]}]}]}]},"fields":null}},{"node":{"id":"e17590ec-8a27-5ac9-8581-8b40cd6bc740","slug":"references/duboulayDifficultiesLearningProgram1986","frontmatter":{"langs":["Pascal","BASIC"],"method":"Argumentation, review of prior work","subjects":"No explicitly mentioned subjects","artifact":null,"phenomenonKinds":[{"name":"Difficulties","description":"Difficulties","phenomena":[{"id":"Page66","name":"Variable holds an unevaluated expression","observations":null}]}]},"fields":null}},{"node":{"id":"8ddac49a-912c-5da1-803c-6cd188b6f580","slug":"references/groverMeasuringStudentLearning2017","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"100 grade 6, 7, and 8 students","artifact":null,"phenomenonKinds":[{"name":"Items","description":"Items assessing misconceptions on loops, variables, and logic","phenomena":[{"id":"2a","name":"Grouping the actions in the loop (Item 2a code 'Grouped')","observations":[{"kind":"CountOf","measure":"Students making this error","count":8,"maxCount":100,"percent":null,"counts":null,"levelLabels":null}]},{"id":"8d","name":"Loops produce the exact same output in every iteration (Item 8d)","observations":null}]}]},"fields":null}},{"node":{"id":"2b96b1b4-3524-5fa3-a08b-926614baa029","slug":"references/hartmannPrevalenceProgrammingMisconceptions2024","frontmatter":{"langs":["Scratch","xLogo"],"method":"Quantitative systematic research","subjects":"366 grade 5 or 6 students (255 for Scratch, 111 for xLogo)","artifact":"https://osf.io/5bxvp/?view_only=d6a51b4cfdfb4e63887fde5da9ef66c7","phenomenonKinds":[{"name":"Scratch Misconceptions","description":"Misconceptions detected with ProMAT for Scratch (on sequences, loops, conditionals, superbug)","phenomena":null},{"name":"xLogo Misconceptions","description":"Misconceptions detected with ProMAT for xLogo (on sequences, loops, conditionals, superbug)","phenomena":null}]},"fields":null}},{"node":{"id":"4d5b3d2c-5a3d-5792-b6ba-0a4be9e859e4","slug":"references/hartmannProgrammingConceptsMisconceptions2022","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"57 grade 5 or 6 students","artifact":"https://osf.io/5bxvp/?view_only=76b81b0a145e4836a0468773fe9eb1aa","phenomenonKinds":[{"name":"Programming Misconceptions","description":"Misconceptions detected with ProMAT in Scratch","phenomena":[{"id":"26","name":"Code after IF statement is not executed if the THEN clause is","observations":null},{"id":"n2","name":"","observations":null},{"id":"n3","name":"","observations":null}]}]},"fields":null}},{"node":{"id":"6baa5715-0e22-5cf8-90bd-2f97a08f66d5","slug":"references/hristovaIdentifyingCorrectingJava2003","frontmatter":{"langs":["Java"],"method":"Qualitative (survey of instructors and students)","subjects":"Unknown number of undergraduate students, professors, SIGCSE members","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"Common syntax, semantic, and logic errors in Java","phenomena":[{"id":"Syntax1","name":"Confusing the assignment operator with the comparison operator","observations":null},{"id":"Syntax2","name":"Use of == instead of .equals to compare strings","observations":null},{"id":"Syntax4","name":"Confusing \"short-circuit\" evaluators with conventional logical operators","observations":null},{"id":"Syntax8","name":"Using keywords as method or variable names","observations":null},{"id":"Syntax10","name":"Forgetting parentheses after a method call","observations":null}]}]},"fields":null}},{"node":{"id":"407c186d-2c95-5e34-ad56-e9fd95b6ba90","slug":"references/kaczmarczykIdentifyingStudentMisconceptions2010","frontmatter":{"langs":["Java"],"method":"Qualitative (interviews)","subjects":"10 undergraduate students","artifact":null,"phenomenonKinds":[{"name":"Misconceptions","description":"Misconceptions related to memory","phenomena":[{"id":"PVR1","name":"Primitive no default","observations":null},{"id":"MMR4","name":"Uninstantiated memory allocation","observations":null}]}]},"fields":null}},{"node":{"id":"c1590299-4d87-5928-a73e-00d22e8b9331","slug":"references/luIdentifyingCorrectingProgramming2024","frontmatter":{"langs":["SMoL"],"method":"Quantitative systematic research","subjects":"Students from 2 universities and other users of online textbook","artifact":"https://dl.acm.org/do/10.1145/3580432/full/","phenomenonKinds":[{"name":"Programming Language Behavior Misconceptions","description":"Misconceptions about program semantics identified by SMoL Tutor","phenomena":[{"id":"CallByRef","name":"Function calls alias variables","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":10,"counts":null,"levelLabels":null}]},{"id":"CallsCopyStructs","name":"Function calls copy data structures","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":10,"counts":null,"levelLabels":null}]},{"id":"DefByRef","name":"Variable definitions alias variables","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":12,"counts":null,"levelLabels":null}]},{"id":"DefsCopyStructs","name":"Variable definitions copy structures recursively","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":67,"counts":null,"levelLabels":null}]},{"id":"StructByRef","name":"Data structures might refer to variables by their references","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":24,"counts":null,"levelLabels":null}]},{"id":"StructsCopyStructs","name":"Storing data structures into data structures makes copies","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":6,"counts":null,"levelLabels":null}]},{"id":"Lazy","name":"Expressions are only evaluated when their values are needed","observations":[{"kind":"Percentage","measure":"Learners hold misconception","count":null,"maxCount":null,"percent":57,"counts":null,"levelLabels":null}]}]}]},"fields":null}},{"node":{"id":"8115b95c-80f2-5bb8-997d-de4dd2004a34","slug":"references/putnamSummaryMisconceptionsHigh1986","frontmatter":{"langs":["BASIC"],"method":"Qualitative study (interviews)","subjects":"56 high school students showing significant difficulties in a screening test","artifact":null,"phenomenonKinds":[{"name":"Misconceptions","description":"Misconceptions in BASIC","phenomena":[{"id":"IF1","name":"When the condition of an IF statement is false, execution of the entire program terminates","observations":null}]}]},"fields":null}},{"node":{"id":"03614f2f-a24f-5bdd-ab23-93a1145acbb3","slug":"references/ragonisLongtermInvestigationComprehension2005","frontmatter":{"langs":["Java"],"method":"Qualitative study (observations and field notes, audio and video recordings, and collection of artifacts)","subjects":"47 grade 10 students","artifact":null,"phenomenonKinds":[{"name":"Misconceptions/Difficulties","description":"Misconceptions and difficulties related to OOP in Java","phenomena":[{"id":"1.1.3","name":"You can define a method that adds an attribute to the class","observations":null},{"id":"2.3.1","name":"Difficulties understanding the empty constructor","observations":null}]}]},"fields":null}},{"node":{"id":"fbd55579-9697-5bec-9145-11631b1b4ddc","slug":"references/sleemanPascalHighSchool1986","frontmatter":{"langs":["Pascal"],"method":"Qualitative study (interviews)","subjects":"35 high-school students showing significant difficulties in a screening test","artifact":null,"phenomenonKinds":[{"name":"Errors","description":"Errors with Pascal constructs","phenomena":[{"id":"IF1","name":"Program execution is halted if the condition is false and there is no ELSE branch","observations":null}]}]},"fields":null}},{"node":{"id":"809f9c4f-1878-515f-9433-2836c05ddd39","slug":"references/swidanProgrammingMisconceptionsSchool2018","frontmatter":{"langs":["Scratch"],"method":"Quantitative systematic research","subjects":"145 participants aged 7-17 with programming experience","artifact":"https://drive.google.com/file/d/1Rea75Gjqq4kDGlYBojSnINA96YRXfh_m/view","phenomenonKinds":[{"name":"Programming Misconceptions","description":"Misconceptions from Sorva's list","phenomena":[{"id":"M15","name":"Primitive assignment stores equations or unresolved expressions","observations":[{"kind":"CountOf","measure":"Participants hold misconception","count":16,"maxCount":63,"percent":null,"counts":null,"levelLabels":null}]}]}]},"fields":null}}]}},"pageContext":{"slug":"/misconceptions/Java/ImmutableRequiresFinalParameters/"}},
    "staticQueryHashes": ["3649515864","4169798128"]}