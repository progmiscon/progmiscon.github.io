{
    "componentChunkName": "component---src-templates-textbook-section-js",
    "path": "/textbooks/ofj6/7",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"Objects-First with Java","subtitle":"A Practical Introduction using BlueJ","edition":"6th Edition","pl":"Java","home":"https://www.bluej.org/objects-first/","baseUrl":null,"sections":[{"section":"1","title":"Objects and classes","url":null},{"section":"2","title":"Understanding class definitions","url":null},{"section":"3","title":"Object interaction","url":null},{"section":"4","title":"Grouping objects","url":null},{"section":"5","title":"Functional Processing of Collections (Advanced)","url":null},{"section":"6","title":"More-sophisticated behavior","url":null},{"section":"7","title":"Fixed-size collections â€“ arrays","url":null},{"section":"8","title":"Designing classes","url":null},{"section":"9","title":"Well-behaved objects","url":null},{"section":"10","title":"Improving structure with inheritance","url":null},{"section":"11","title":"More about inheritance","url":null},{"section":"12","title":"Further abstraction techniques","url":null},{"section":"13","title":"Building graphical user interfaces","url":null},{"section":"14","title":"Handling errors","url":null},{"section":"15","title":"Designing applications","url":null},{"section":"16","title":"A case study","url":null},{"section":"Appendix A","title":"Working with a BlueJ project","url":null},{"section":"Appendix B","title":"Java data types","url":null},{"section":"Appendix C","title":"Operators","url":null},{"section":"Appendix D","title":"Java control structures","url":null},{"section":"Appendix E","title":"Running Java without BlueJ","url":null},{"section":"Appendix F","title":"Using the debugger","url":null},{"section":"Appendix G","title":"Unit unit-testing tools","url":null},{"section":"Appendix H","title":"Teamwork tools","url":null},{"section":"Appendix I","title":"Javadoc","url":null},{"section":"Appendix J","title":"Program style guide","url":null},{"section":"Appendix K","title":"Important library classes","url":null}]},"parent":{"name":"ofj6"}}]},"mcs":{"nodes":[{"fields":{"slug":"/misconceptions/Java/ArrayAllocationWithoutNew/","name":"ArrayAllocationWithoutNew"},"frontmatter":{"shortDescription":"Arrays are created without the new keyword","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayBracketCountIsLength/","name":"ArrayBracketCountIsLength"},"frontmatter":{"shortDescription":"The number of brackets in an array type or an array initializer corresponds to the length of the array","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayElementTypeRepeats/","name":"ArrayElementTypeRepeats"},"frontmatter":{"shortDescription":"The type of a multi-dimensional array is written as T[] T[] T[]","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayElementsUntyped/","name":"ArrayElementsUntyped"},"frontmatter":{"shortDescription":"Elements of arrays are untyped","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayHasLengthMethod/","name":"ArrayHasLengthMethod"},"frontmatter":{"shortDescription":"To get the length of an array, one needs to call its length method","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayInitializerContentsInBrackets/","name":"ArrayInitializerContentsInBrackets"},"frontmatter":{"shortDescription":"Array initializers list the elements in square brackets","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayLengthPartOfType/","name":"ArrayLengthPartOfType"},"frontmatter":{"shortDescription":"The length of an array is part of its type","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayListIsArray/","name":"ArrayListIsArray"},"frontmatter":{"shortDescription":"ArrayLists are arrays","text":[{"id":"ofj6","sections":["4","7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayRankIsLength/","name":"ArrayRankIsLength"},"frontmatter":{"shortDescription":"Array rank and array length are the same thing","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArraysGrow/","name":"ArraysGrow"},"frontmatter":{"shortDescription":"Arrays can grow dynamically","text":[{"id":"ofj6","sections":["7"]}]}},{"fields":{"slug":"/misconceptions/Java/ArrayRankNotPartOfType/","name":"ArrayRankNotPartOfType"},"frontmatter":{"shortDescription":"The rank of an array is not part of its type","text":[{"id":"ofj6","sections":["7"]}]}}]}},"pageContext":{"glob":"**/src/data/textbooks/ofj6.md","textbookId":"ofj6","sectionId":"7"}},
    "staticQueryHashes": ["3649515864","4169798128"]}