{"version":3,"file":"component---src-pages-structure-js-0db7de99788e1e20ae7c.js","mappings":"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","sources":["webpack://progmiscon-src/./src/pages/structure.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Container, Header } from \"semantic-ui-react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nfunction ProgressCount({ count, total, status }) {\n  const nbsp = \"\\u00A0\";\n  const type =\n    status === \"public\"\n      ? \"Public Misconceptions\"\n      : status === \"draft\"\n      ? \"Draft Misconceptions\"\n      : \"\";\n  const perc = Math.round((count / total) * 1000) / 10;\n  const red_color = \"#db2828\";\n  return (\n    <div\n      className='count-area'\n      style={{\n        backgroundColor: red_color + \"55\", // hex 55 is ~33% opacity\n        borderRadius: \"4px\",\n        padding: \"0px\",\n      }}\n    >\n      <div\n        className='count-bar'\n        data-tooltip={`${count} of ${total} ${type} (${perc}%)`}\n        style={{\n          backgroundColor: red_color,\n          color: \"white\",\n          borderRadius: \"4px\",\n          paddingTop: \"4px\",\n          paddingBottom: \"4px\",\n          width: (count / total) * 100 + \"%\",\n        }}\n      >\n        <div className='count-label'>\n          {nbsp}\n          {count}\n          {nbsp}/{nbsp}\n          {total}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Aspect({\n  public: publicMisconceptions,\n  draft: draftMisconceptions,\n  name,\n  check,\n}) {\n  return (\n    <div>\n      <i>{name}</i>\n      <div\n        style={{\n          marginTop: \"0.2em\",\n          marginBottom: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"1em\",\n        }}\n      >\n        <div style={{ width: \"50%\" }}>\n          <ProgressCount\n            count={publicMisconceptions.filter(check).length}\n            total={publicMisconceptions.length}\n            status='public'\n          />\n        </div>\n        <div style={{ width: \"50%\" }}>\n          <ProgressCount\n            count={draftMisconceptions.filter(check).length}\n            total={draftMisconceptions.length}\n            status='draft'\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst StructurePage = args => {\n  const misconceptions = args.data.misconceptions.nodes;\n  const publicMisconceptions = misconceptions.filter(\n    m => m.frontmatter.status === \"public\"\n  );\n  const draftMisconceptions = misconceptions.filter(\n    m => m.frontmatter.status === \"draft\"\n  );\n\n  return (\n    <Layout>\n      <SEO title='Structure and Content' />\n      <Container text style={{ marginTop: \"100px\", marginBottom: \"100px\" }}>\n        <Header as='h1' dividing>\n          <Header.Content>\n            Structure and Content of the Inventory\n          </Header.Content>\n        </Header>\n        <p>\n          Our inventory presents programming language misconceptions in a\n          structured way. This page lists all the aspects used to extensively\n          characterize a misconception.\n        </p>\n        <p>\n          For each aspect, we indicate how many of our misconceptions include\n          that aspect. We distinguish between \"public\" misconceptions (left\n          column), which are shown by default in the inventory, and \"draft\"\n          misconceptions (right column), which contain several useful pieces of\n          information but are not yet complete.\n        </p>\n\n        <h3 style={{ marginTop: \"2em\" }}>\n          Essential Aspects for All Misconceptions\n        </h3>\n        <p>\n          The following are essential aspects that are necessary to include a\n          misconception in our inventory:\n        </p>\n        <Aspect\n          name='Programming Language'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.fields.pl}\n        />\n        <Aspect\n          name='Incorrect Statement'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.shortDescription}\n        />\n        <Aspect\n          name='Correct Statement'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.shortCorrection}\n        />\n        <Aspect\n          name='Concepts'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.concepts?.length > 0}\n        />\n        <Aspect\n          name='PL Specification'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.spec?.length > 0}\n        />\n\n        <h3 style={{ marginTop: \"2em\" }}>\n          Extra Essential Aspects for Public Misconceptions\n        </h3>\n        <p>\n          The following are key aspects that we include for all public\n          misconceptions:\n        </p>\n        <Aspect\n          name='Correction'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.fields.correction?.size > 0}\n        />\n        <Aspect\n          name='Image'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m =>\n            m.fields.image.relativePath !== \"default-misconception-image.jpg\"\n          }\n        />\n\n        <h3 style={{ marginTop: \"2em\" }}>Additional Aspects</h3>\n        <p>\n          The following are additional aspects that can further describe a\n          misconception:\n        </p>\n        <Aspect\n          name='Origin'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.fields.origin?.size > 0}\n        />\n        <Aspect\n          name='Symptoms'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.fields.symptoms?.size > 0}\n        />\n        <Aspect\n          name='Value'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.fields.value?.size > 0}\n        />\n        <Aspect\n          name='Literature References'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.references?.length > 0}\n        />\n        <Aspect\n          name='Expressible in Notional Machine'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.expressibleInNms?.length > 0}\n        />\n        <Aspect\n          name='Explainer Video'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.videoId}\n        />\n        <Aspect\n          name='PyTamaro Web Activity'\n          public={publicMisconceptions}\n          draft={draftMisconceptions}\n          check={m => m.frontmatter.pytamaroActivityVersion}\n        />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default StructurePage;\n\nexport const pageQuery = graphql`\n  query {\n    misconceptions: allMdx(\n      filter: {\n        fileAbsolutePath: { glob: \"**/src/data/misconceptions/**/index.md\" }\n      }\n      sort: { fields: slug, order: ASC }\n    ) {\n      nodes {\n        fields {\n          slug\n          name\n          pl\n          image {\n            relativePath\n          }\n          correction {\n            size\n          }\n          origin {\n            size\n          }\n          symptoms {\n            size\n          }\n          value {\n            size\n          }\n        }\n        frontmatter {\n          status\n          concepts\n          shortDescription\n          shortCorrection\n          observed\n          pytamaroActivityVersion\n          videoId\n          related {\n            id\n            relation\n          }\n          inOtherPl {\n            id\n          }\n          expressibleInNms {\n            id\n          }\n          spec {\n            id\n          }\n          references {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["ProgressCount","_ref","count","total","status","type","perc","Math","round","red_color","React","className","style","backgroundColor","borderRadius","padding","color","paddingTop","paddingBottom","width","Aspect","_ref2","public","publicMisconceptions","draft","draftMisconceptions","name","check","marginTop","marginBottom","display","alignItems","gap","filter","length","args","misconceptions","data","nodes","m","frontmatter","Layout","SEO","title","Container","text","Header","as","dividing","Content","fields","pl","shortDescription","shortCorrection","_m$frontmatter$concep","concepts","_m$frontmatter$spec","spec","_m$fields$correction","correction","size","image","relativePath","_m$fields$origin","origin","_m$fields$symptoms","symptoms","_m$fields$value","value","_m$frontmatter$refere","references","_m$frontmatter$expres","expressibleInNms","videoId","pytamaroActivityVersion"],"sourceRoot":""}