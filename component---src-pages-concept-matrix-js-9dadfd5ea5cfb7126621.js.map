{"version":3,"file":"component---src-pages-concept-matrix-js-9dadfd5ea5cfb7126621.js","mappings":"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","sources":["webpack://progmiscon-src/./src/pages/conceptMatrix.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js","webpack://progmiscon-src/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Header, Icon, Breadcrumb, Label } from \"semantic-ui-react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst ConceptMatrixPage = args => {\n  const [selectedConcepts, setSelectedConcepts] = useState({});\n  const toggleConceptInSelection = concept => {\n    setSelectedConcepts(({ [concept]: set, ...rest }) =>\n      set ? { ...rest } : { [concept]: true, ...rest }\n    );\n  };\n  const concepts = args.data.concepts.nodes;\n  const misconceptions = args.data.misconceptions.nodes;\n  const totalCount = concept => {\n    const c = _.find(args.data.misconceptionConcepts.group, [\n      \"fieldValue\",\n      concept.name,\n    ]);\n    return c ? c.totalCount : 0;\n  };\n  const misconceptionContainsAllSelectedConcepts = misconception => {\n    if (Object.entries(selectedConcepts).length === 0) {\n      return false;\n    }\n    if (misconception.frontmatter.concepts) {\n      for (const [conceptName] of Object.entries(selectedConcepts)) {\n        if (!misconception.frontmatter.concepts.includes(conceptName)) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const bgcolor = (concept, ci, misconception, mi) => {\n    const conceptSelected = concept ? selectedConcepts[concept.name] : false;\n    const misconceptionSelected = misconception\n      ? misconceptionContainsAllSelectedConcepts(misconception)\n      : false;\n    let hue;\n    let saturation;\n    let luminance = 95 - (((ci + 1) % 2) + ((mi + 1) % 2)) * 5;\n    if (conceptSelected) {\n      if (misconceptionSelected) {\n        hue = 120;\n        saturation = 50;\n        luminance *= 0.9;\n      } else {\n        hue = 240;\n        saturation = 100;\n      }\n    } else {\n      if (misconceptionSelected) {\n        hue = 60;\n        saturation = 65;\n        luminance *= 0.9;\n      } else {\n        hue = 0;\n        saturation = 0;\n      }\n    }\n    return \"hsl(\" + hue + \",\" + saturation + \"%,\" + luminance + \"%)\";\n  };\n  return (\n    <Layout>\n      <SEO title='Concept Matrix' />\n      <div\n        style={{\n          overflowX: \"auto\",\n          marginLeft: \"10px\",\n          marginTop: \"50px\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <Breadcrumb>\n          <Breadcrumb.Section link as={Link} to='/'>\n            Home\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider icon='right chevron' />\n          <Breadcrumb.Section active>Concept Matrix</Breadcrumb.Section>\n        </Breadcrumb>\n\n        <Header as='h1' dividing>\n          <Icon name='lightbulb' />\n          <Header.Content>\n            Concept Matrix\n            <Header.Subheader>\n              {misconceptions.length} Misconceptions vs. {concepts.length}{\" \"}\n              Concepts\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n        {Object.entries(selectedConcepts).length ? (\n          <>\n            <div>\n              Misconceptions related to &nbsp;\n              {Object.entries(selectedConcepts)\n                .map(([c]) => (\n                  <Label\n                    key={`concepts-${c}`}\n                    as={Link}\n                    to={`/concepts/${_.kebabCase(c)}`}\n                    color='brown'\n                  >\n                    {_.startCase(c)}\n                  </Label>\n                ))\n                .reduce((acc, curr) => (\n                  <>\n                    {acc} or {curr}\n                  </>\n                ))}\n            </div>\n          </>\n        ) : null}\n        <table>\n          <thead>\n            <tr style={{ height: \"150px\" }}>\n              <th></th>\n              <th></th>\n              {concepts.map(concept => (\n                <td key={concept.name}>\n                  <div style={{ width: \"20px\" }}>\n                    <div\n                      style={{\n                        width: \"300px\",\n                        transformOrigin: \"bottom left\",\n                        transform:\n                          \"translateX(19px) translateY(65px) rotate(-90deg)\",\n                      }}\n                    >\n                      <Link to={`/concepts/${_.kebabCase(concept.name)}/`}>\n                        {concept.name}\n                      </Link>\n                    </div>\n                  </div>\n                </td>\n              ))}\n            </tr>\n            <tr style={{ height: \"30px\" }}>\n              <td style={{ textAlign: \"right\", color: \"grey\" }}>\n                click numbers to filter\n              </td>\n              <td style={{ textAlign: \"right\", color: \"grey\" }}>&rarr;</td>\n              {concepts.map((concept, ci) => (\n                <th\n                  key={concept.name}\n                  style={{\n                    backgroundColor: bgcolor(concept, ci, null, -1),\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => toggleConceptInSelection(concept.name)}\n                >\n                  {totalCount(concept)}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {misconceptions\n              .filter(misconception => {\n                if (Object.entries(selectedConcepts).length === 0) {\n                  return true;\n                }\n                if (misconception.frontmatter.concepts) {\n                  for (const [conceptName] of Object.entries(\n                    selectedConcepts\n                  )) {\n                    if (\n                      misconception.frontmatter.concepts.includes(conceptName)\n                    ) {\n                      return true;\n                    }\n                  }\n                  return false;\n                } else {\n                  return false;\n                }\n              })\n              .map((misconception, mi) => (\n                <tr\n                  key={\n                    misconception.fields.pl + \"/\" + misconception.fields.name\n                  }\n                >\n                  <td\n                    style={{\n                      backgroundColor: bgcolor(null, -1, misconception, mi),\n                    }}\n                  >\n                    <Link\n                      to={`/misconceptions/${misconception.fields.pl}/${misconception.fields.name}/`}\n                    >\n                      {misconception.fields.name}\n                    </Link>\n                  </td>\n                  <th\n                    style={{\n                      backgroundColor: bgcolor(null, -1, misconception, mi),\n                    }}\n                  >\n                    {misconception.frontmatter.concepts\n                      ? misconception.frontmatter.concepts.length\n                      : 0}\n                  </th>\n                  {concepts.map((concept, ci) => (\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        backgroundColor: bgcolor(\n                          concept,\n                          ci,\n                          misconception,\n                          mi\n                        ),\n                      }}\n                      key={concept.name}\n                    >\n                      {misconception.frontmatter.concepts &&\n                      misconception.frontmatter.concepts.find(\n                        c => c === concept.name\n                      )\n                        ? \"\\u2b24\"\n                        : null}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ConceptMatrixPage;\n\nexport const pageQuery = graphql`\n  query {\n    concepts: allFile(\n      filter: { absolutePath: { glob: \"**/src/data/concepts/*.md\" } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        name\n      }\n    }\n    misconceptionConcepts: allMdx {\n      group(field: frontmatter___concepts) {\n        fieldValue\n        totalCount\n      }\n    }\n    misconceptions: allMdx(\n      filter: {\n        fileAbsolutePath: { glob: \"**/src/data/misconceptions/**/index.md\" }\n      }\n      sort: { fields: slug, order: ASC }\n    ) {\n      nodes {\n        fields {\n          slug\n          name\n          pl\n        }\n        frontmatter {\n          status\n          concepts\n          shortDescription\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash-es/isNil\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A divider sub-component for Breadcrumb component.\n */\n\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    icon = props.icon;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(BreadcrumbDivider, props);\n  var ElementType = getElementType(BreadcrumbDivider, props);\n  if (!_isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: _extends({}, rest, {\n        className: classes\n      }),\n      autoGenerateKey: false\n    });\n  }\n  if (!_isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? '/' : children);\n}\nBreadcrumbDivider.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {\n  return {\n    icon: icon\n  };\n});\nexport default BreadcrumbDivider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType, useKeyOnly } from '../../lib';\n/**\n * A section sub-component for Breadcrumb component.\n */\n\nvar BreadcrumbSection = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(BreadcrumbSection, _Component);\n  function BreadcrumbSection() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.computeElementType = function () {\n      var _this$props = _this.props,\n        link = _this$props.link,\n        onClick = _this$props.onClick;\n      if (link || onClick) return 'a';\n    };\n    _this.handleClick = function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    };\n    return _this;\n  }\n  var _proto = BreadcrumbSection.prototype;\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      active = _this$props2.active,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      content = _this$props2.content,\n      href = _this$props2.href;\n    var classes = cx(useKeyOnly(active, 'active'), 'section', className);\n    var rest = getUnhandledProps(BreadcrumbSection, this.props);\n    var ElementType = getElementType(BreadcrumbSection, this.props, this.computeElementType);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), childrenUtils.isNil(children) ? content : children);\n  };\n  return BreadcrumbSection;\n}(Component);\nBreadcrumbSection.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"href\", \"link\", \"onClick\"];\nexport { BreadcrumbSection as default };\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, function (content) {\n  return {\n    content: content,\n    link: true\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _each from \"lodash-es/each\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\n\nfunction Breadcrumb(props) {\n  var children = props.children,\n    className = props.className,\n    divider = props.divider,\n    icon = props.icon,\n    sections = props.sections,\n    size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  var childElements = [];\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement); // divider\n\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + \"_divider\" || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\nBreadcrumb.handledProps = [\"as\", \"children\", \"className\", \"divider\", \"icon\", \"sections\", \"size\"];\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };"],"names":["args","selectedConcepts","setSelectedConcepts","useState","concepts","data","nodes","misconceptions","bgcolor","concept","ci","misconception","mi","conceptSelected","name","misconceptionSelected","Object","entries","length","frontmatter","conceptName","includes","misconceptionContainsAllSelectedConcepts","hue","saturation","luminance","React","Layout","SEO","title","style","overflowX","marginLeft","marginTop","marginBottom","Breadcrumb","Section","link","as","Link","to","Divider","icon","active","Header","dividing","Icon","Content","Subheader","map","_ref2","c","Label","key","_kebabCase","color","_startCase","reduce","acc","curr","height","width","transformOrigin","transform","textAlign","backgroundColor","cursor","onClick","_ref","set","rest","_objectWithoutProperties","_toPropertyKey","_objectSpread","toggleConceptInSelection","_find","misconceptionConcepts","group","totalCount","filter","fields","pl","find","BreadcrumbDivider","props","children","className","content","classes","getUnhandledProps","ElementType","getElementType","childrenUtils","create","defaultProps","autoGenerateKey","handledProps","BreadcrumbSection","_Component","_this","_len","arguments","Array","_key","call","apply","this","concat","computeElementType","_this$props","handleClick","e","prototype","render","_this$props2","href","Component","divider","sections","size","childElements","section","index","breadcrumbElement","push","t","o","r","i","getOwnPropertySymbols","n","indexOf","propertyIsEnumerable"],"sourceRoot":""}