{"version":3,"file":"component---src-pages-concept-map-js-770b23fcf455922c19de.js","mappings":"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","sources":["webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js","webpack://progmiscon-src/./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js","webpack://progmiscon-src/./src/components/VisConceptMap.jsx","webpack://progmiscon-src/./src/pages/conceptMap.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isNil from \"lodash-es/isNil\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A divider sub-component for Breadcrumb component.\n */\n\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    icon = props.icon;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(BreadcrumbDivider, props);\n  var ElementType = getElementType(BreadcrumbDivider, props);\n  if (!_isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: _extends({}, rest, {\n        className: classes\n      }),\n      autoGenerateKey: false\n    });\n  }\n  if (!_isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? '/' : children);\n}\nBreadcrumbDivider.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {\n  return {\n    icon: icon\n  };\n});\nexport default BreadcrumbDivider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType, useKeyOnly } from '../../lib';\n/**\n * A section sub-component for Breadcrumb component.\n */\n\nvar BreadcrumbSection = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(BreadcrumbSection, _Component);\n  function BreadcrumbSection() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.computeElementType = function () {\n      var _this$props = _this.props,\n        link = _this$props.link,\n        onClick = _this$props.onClick;\n      if (link || onClick) return 'a';\n    };\n    _this.handleClick = function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    };\n    return _this;\n  }\n  var _proto = BreadcrumbSection.prototype;\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      active = _this$props2.active,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      content = _this$props2.content,\n      href = _this$props2.href;\n    var classes = cx(useKeyOnly(active, 'active'), 'section', className);\n    var rest = getUnhandledProps(BreadcrumbSection, this.props);\n    var ElementType = getElementType(BreadcrumbSection, this.props, this.computeElementType);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), childrenUtils.isNil(children) ? content : children);\n  };\n  return BreadcrumbSection;\n}(Component);\nBreadcrumbSection.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"href\", \"link\", \"onClick\"];\nexport { BreadcrumbSection as default };\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, function (content) {\n  return {\n    content: content,\n    link: true\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _each from \"lodash-es/each\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\n\nfunction Breadcrumb(props) {\n  var children = props.children,\n    className = props.className,\n    divider = props.divider,\n    icon = props.icon,\n    sections = props.sections,\n    size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  var childElements = [];\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement); // divider\n\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + \"_divider\" || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\nBreadcrumb.handledProps = [\"as\", \"children\", \"className\", \"divider\", \"icon\", \"sections\", \"size\"];\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;","import React from \"react\";\nimport loadable from \"@loadable/component\";\nimport { Placeholder } from \"semantic-ui-react\";\n\nconst InnerVisConceptMap = loadable(() => import(\"./InnerVisConceptMap\"), {\n  fallback: (\n    <Placeholder fluid style={{ height: \"800px\" }}>\n      <Placeholder.Image />\n    </Placeholder>\n  ),\n});\n\nfunction VisConceptMap({ ...props }) {\n  return (\n    <div>\n      <InnerVisConceptMap {...props} style={{ height: \"800px\" }} />\n    </div>\n  );\n}\n\nexport default VisConceptMap;\n","import React from \"react\";\nimport { Header, Icon, Breadcrumb } from \"semantic-ui-react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport VisConceptMap from \"../components/VisConceptMap\";\n\nconst ConceptMapPage = args => {\n  const concepts = args.data.concepts.nodes;\n  const misconceptions = args.data.misconceptions.nodes;\n\n  return (\n    <Layout>\n      <SEO title='Concept Map' />\n      <div\n        style={{\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n          marginTop: \"50px\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <Breadcrumb>\n          <Breadcrumb.Section link as={Link} to='/'>\n            Home\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider icon='right chevron' />\n          <Breadcrumb.Section active>Concept Map</Breadcrumb.Section>\n        </Breadcrumb>\n\n        <Header as='h1' dividing>\n          <Icon name='lightbulb' />\n          <Header.Content>\n            Concept Map\n            <Header.Subheader>\n              Map of Concepts Connected by Misconceptions\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n        <VisConceptMap concepts={concepts} misconceptions={misconceptions} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default ConceptMapPage;\n\nexport const pageQuery = graphql`\n  query {\n    concepts: allFile(\n      filter: { absolutePath: { glob: \"**/src/data/concepts/*.md\" } }\n      sort: { fields: name }\n    ) {\n      nodes {\n        name\n      }\n    }\n    misconceptionConcepts: allMdx {\n      group(field: frontmatter___concepts) {\n        fieldValue\n        totalCount\n      }\n    }\n    misconceptions: allMdx(\n      filter: {\n        fileAbsolutePath: { glob: \"**/src/data/misconceptions/**/index.md\" }\n      }\n      sort: { fields: slug, order: ASC }\n    ) {\n      nodes {\n        fields {\n          slug\n          name\n          pl\n        }\n        frontmatter {\n          status\n          concepts\n          shortDescription\n        }\n      }\n    }\n  }\n`;\n"],"names":["BreadcrumbDivider","props","children","className","content","icon","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","Icon","create","defaultProps","autoGenerateKey","handledProps","BreadcrumbSection","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","computeElementType","_this$props","link","onClick","handleClick","e","prototype","render","_this$props2","active","href","Component","Breadcrumb","divider","sections","size","childElements","section","index","breadcrumbElement","push","key","Divider","Section","InnerVisConceptMap","loadable","fallback","React","Placeholder","fluid","style","height","Image","_ref","_extends","_objectDestructuringEmpty","Object","assign","concepts","data","nodes","misconceptions","Layout","SEO","title","marginLeft","marginRight","marginTop","marginBottom","as","Link","to","Header","dividing","name","Content","Subheader","VisConceptMap"],"sourceRoot":""}